from csinsc import *

label start
sword = True
sword = False
gun = True
gun = False
key = True
key = False
bullet = True
bullet = False
route = True
route = False
Brit = True
Brit = False

clear()
#Instructions because otherwise it's not amazingly clear
input(Colour.magenta+"Press [ENTER] when necessary to make the next line appear"+ Colour.reset)
print("")
#Just backstory because I realised there wasn't any and I needed a plot so Brit can talk :)
input(Colour.reset+"An evil scientist has trapped you and your rival, Brit in a small room")
print("'I will let one of you escape... if you can escape my greatest invention")
print("yet!' His voice bounces off the wall around you, finding its way deep")
print("into you and causing a chill to run through your spine.")
input("")
print("'This is a very hard game. Maybe too hard. You will never escape.")
print("Try only if you dare...' His voice trails off as he leaves the room, an audible")
input("CLICK from the lock rippling through the air")
print("")
print("Brit turns to face you, nose high in the air")
input("'You could never beat me at anything, why would you win here?'")
input("Her laugh is high-pitched and aggravating")

#The intro, with some elaboration on the backstory
clear()
print(Colour.cyan+r'''

⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠒⠉⢀⣀⣤⣤⣄⣀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⢀⣴⣾⠿⠛⠛⠛⢛⠿⢿⣶⣤⣀⠉⠒⠤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⢠⣾⠟⠁⠀⠀⠀⠀⠀⡄⠀⠈⠙⠿⣷⣦⣤⣀⣈⠉⠀⠒⠢⠤⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⣰⣿⢏⠖⠐⠢⡀⠀⠀⠀⠈⠒⠒⠒⠊⠀⠉⠙⠛⠿⠿⣷⣶⣦⣤⣄⠈⠙⠢⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠔⠁⣀⣼⡿⢣⠎⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⢀⠔⠋⠉⠉⠓⢢⡀⠀⢹⠛⣿⢿⣦⡀⠙⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠁⢠⣾⡿⢋⠜⠁⠀⠀⠀⢀⠏⠀⡴⠚⠙⠒⡄⠀⠈⢦⠀⠀⠀⠀⢀⡇⣰⠃⠀⠀⢥⢻⣷⠀⢹⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⠔⠁⢀⣼⡿⡏⠀⢸⡀⠀⠀⢀⡠⠞⠀⠘⣄⠀⠀⢀⠟⠀⠀⠀⠙⠂⠤⠤⣮⠜⠁⣀⡤⠔⠯⢿⢿⠀⢸⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡰⠋⢀⣴⣿⣋⠴⠁⠀⠀⠉⠀⠈⠁⠀⠀⠀⠀⠈⠁⠒⠉⠀⠀⠀⠀⣀⣠⡴⠊⠁⢐⡞⠁⠀⠀⢀⣾⡿⠀⡼⠀⠀⠀⠀
⠀⠀⠀⠀⣰⠁⢠⣿⠟⠀⠀⠀⠀⢠⠖⠐⢦⠀⠀⠀⠀⣀⢀⣀⣠⡤⠴⠒⠢⠈⠉⠀⠈⠀⠀⠀⢨⣣⣀⣤⣶⣿⠟⠁⡰⠃⠀⠀⠀⠀
⠀⠀⠀⠀⡏⠀⣿⡏⠉⢢⠀⠀⠀⠸⢤⣠⠞⠀⣀⡤⢺⡁⠀⠈⡿⠃⠀⣀⣰⡷⣿⣟⣗⣲⣭⠭⠿⠟⠛⠋⠉⢀⡤⠚⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣇⠀⣿⣇⢀⡜⠀⠀⠀⠀⠀⠀⣠⠾⠁⠀⢉⡻⣶⣾⣶⣿⠿⠛⠛⠋⠉⣿⡇⠀⡤⠤⠤⠐⠒⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⡀⠘⢿⣧⣀⠀⠀⠀⠀⠀⡼⠁⣀⡤⣶⣾⣿⣿⠋⠁⠀⠀⠀⠀⠀⠀⢻⣇⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠙⢄⠀⠙⠿⢿⣶⣶⣖⣾⡿⠿⠟⠛⠉⠁⢸⢹⠀⠀⠀⠀⠀⠀⠀⠀⢸⣸⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠒⢤⣄⡀⢀⣀⠀⠠⠤⠔⠒⢸⠀⢸⢸⠀⠀⡠⠀⠀⠀⠲⣄⠘⣿⡇⠘⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⡴⠒⠉⣉⣈⠉⠑⢦⡀⠀⠀⠀⠀⢸⠀⢸⣾⢀⠎⠀⠀⠀⠀⠀⠈⠳⢿⣷⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣠⠔⠚⠁⣀⣴⢟⣋⠙⠻⣦⡀⠑⢄⠀⠀⠀⢸⠀⣸⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠘⡿⡇⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡞⠀⣠⡶⢛⣋⠠⡁⢈⠗⣠⢼⢷⣄⡀⠑⡄⠀⡇⠀⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⢸⣿⡷⢧⣀⠇⠀⠀⠀⠑⠚⠀⠙⢷⡄⢸⢰⠃⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡿⡇⠘⡆⠀⠀⣠⠤⠒⠒⠒⠂⠤⣄⠀⠀
⠈⡄⠘⢷⣄⣀⣀⣀⣰⣏⡹⠀⠀⠀⢀⣼⠇⢸⠛⠀⣼⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⢧⠀⢃⡴⠊⢀⣠⡶⣶⣶⢶⣤⣀⠉⢲
⠀⠙⠦⣀⣈⠉⠉⢹⡏⣿⠛⠶⠶⠶⠟⠁⣠⠎⡇⢀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠈⠀⣰⢿⣗⡄⠑⠊⠀⠉⣻⡇⠀
⠀⠀⠀⠀⢈⠏⠀⣾⠀⣿⠀⠠⠀⠀⠐⠚⠁⢸⠁⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠘⣿⣄⣈⣐⣭⣦⣴⠾⠋⢀⡼
⠀⠀⠀⠀⡞⠀⣼⠃⢰⡇⠀⡇⠀⠀⠀⠀⠀⢸⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⢰⡤⣀⡈⠉⢉⡟⠹⣧⠀⢰⠋⠀
⠀⠀⠀⢰⠁⢰⠏⠀⢸⡇⠀⡇⠀⠀⠀⠀⠀⢸⡀⢸⣸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⢸⠃⠀⢸⠁⢸⡇⠀⠹⣇⠀⡇⠀
⠀⠀⠀⡟⠀⣿⠀⠀⢘⡇⠀⡇⠀⠀⠀⠀⠀⠀⡇⠈⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣻⠀⢸⠀⠀⠸⡆⠘⣧⠀⠀⣿⠀⡇⠀
⠀⠀⠀⢷⠀⢿⣄⣀⣼⠇⢀⡇⠀⠀⠀⠀⠀⠀⠸⡄⠘⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⣿⠇⢠⠇⠀⠀⠀⢣⡀⠹⠦⠾⠋⢀⠇⠀
⠀⠀⠀⠈⢦⡀⠉⠉⠁⣀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠙⢆⡀⠙⠿⣷⣶⣤⣤⣤⣤⣴⣶⣿⠟⠁⣠⠎⠀⠀⠀⠀⠀⠑⠤⠤⠤⠴⠋⠀⠀
⠀⠀⠀⠀⠀⠈⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠢⢄⣀⠈⠉⠉⠉⠉⠉⢁⣀⡤⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

''')

print(Colour.reset+"Suddenly, you are in a maze full of traps, threats, and chests")
print("Escape to win the Blue Miracle Mushroom")
print("If Brit gets out before you, the opening will close and you will be trapped forever.")
input("Press [ENTER] to start: ")





#Scene1
label gobackone
clear()
print(Colour.green+r'''
⢻⣿⣿⣿⣿⡛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠻⣿⣿⣿⣿⡟⣶
⢾⣿⣿⣿⡿⡧⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣼⢿⢿⣿⣿⡷⣿
⣼⡟⣿⣿⣿⡙⣯⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣴⣽⠋⣩⣿⣿⣿⡧⣿
⣼⡿⣿⣿⣿⡷⠗⠙⣿⣢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡺⠊⣸⠾⢻⣿⣟⣿⣇⣿
⢸⣿⣿⣿⣿⢷⣿⣷⣿⣿⣷⢤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⡿⠟⢦⡤⢽⣴⢿⣾⡿⣿⡇⣿
⢹⣿⣿⣿⣿⡿⣯⡿⣿⣵⢼⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡉⡧⣴⣭⢴⣽⢵⣿⣿⣿⡿⡏⣿
⢻⣿⣿⣿⣟⣿⣟⣿⣿⣻⣽⢸⢤⠤⠤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠤⠤⠤⡇⣯⣿⣛⣱⣺⣹⣻⣽⣿⣿⡇⣿
⢾⣯⣿⣿⣿⣗⣿⣷⣿⣿⣺⢺⣿⣿⣿⣷⡷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣾⣯⣯⡽⡗⣷⣿⣇⢀⢼⣊⣿⣻⣿⣷⡗⣿
⣾⡟⣿⣿⣿⡙⣿⣟⣻⡟⣻⢼⣿⣿⣿⣿⣿⣯⣧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢾⣽⣿⣿⣟⣿⢿⡧⡟⣛⡉⠓⣩⢋⣁⢛⣏⣿⡧⣿
⣼⣿⣿⣿⣷⣷⣷⣿⣿⡿⣿⣸⣛⠛⢻⣿⣗⣿⣿⣿⣢⣤⣤⣤⣤⣤⣤⣤⣤⣴⣴⣻⣸⢻⣿⣿⡟⠛⢛⣇⡷⣟⡳⢖⣺⠺⣛⣿⣿⣿⣇⣿
⣸⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣸⣿⣿⣿⣿⣷⣿⣿⣿⣿⣸⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⢻⣿⣿⣿⣿⣿⣇⣿⣿⣶⡒⢺⣺⣿⣻⣿⣿⣇⣿
⢻⣷⣿⣿⣿⡿⣯⣿⣿⣽⢿⢹⣿⡿⣟⣿⣯⡿⣿⣿⣽⢹⣽⡿⠽⣿⡯⢿⡯⣿⣿⣽⢹⢿⣿⣿⡿⣟⣟⡏⡿⣿⣥⢿⣽⢷⣽⡿⣿⡿⡏⣿
⢻⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⢹⣿⣿⣿⣿⣟⣿⣿⣿⣿⢱⣀⢀⣀⠀⠀⠀⢀⣻⡿⣿⢹⣿⣿⣿⣷⣶⣖⡏⣿⡿⠿⣵⢻⣿⢿⣿⡿⣿⡏⣿
⢿⣏⣿⣽⣯⣏⣿⣿⣥⣟⣽⢺⣉⣉⣹⣿⡷⣼⣿⡗⠘⠚⢻⣿⠿⠿⠿⣿⡟⠛⠃⢸⢮⢨⣿⣿⣏⣉⣉⡗⣏⣣⡞⢉⢴⣁⣼⣩⣥⣿⡗⣿
⢾⣿⣿⣿⡿⣟⡿⣿⣻⢿⣻⢼⣘⣂⣁⣿⡿⡯⠋⠀⠀⠀⡼⠾⠶⠶⠶⠶⢷⡀⠀⠀⠹⢽⣿⣿⣉⣑⣑⡧⣟⣿⠟⢻⢽⢛⣿⣿⣿⣿⡧⣿
⣾⣿⣿⣿⣟⡩⣿⣯⣿⣿⢽⢼⠚⠒⠒⠻⠋⠀⠀⠀⠀⣸⣴⣤⣤⣤⣤⣤⣵⣷⣖⣶⣖⣺⣿⣿⣶⣶⣶⡇⡯⣏⣉⢕⣹⠟⣻⣿⣏⣯⡇⣿
⣸⣿⣿⣿⣿⣟⣷⣟⢿⣾⣺⣸⠀⠀⠀⠀⠀⠀⠀⠀⣞⣴⣀⣀⣀⣀⣂⣀⣀⣠⣀⣀⣀⡀⢀⡀⠀⠀⣀⣀⡟⣿⣾⠺⣾⡺⢾⣻⣿⣟⣇⣿
⢹⣿⣿⣿⣿⢿⡿⣿⣿⣿⢿⠝⠀⠀⠀⠀⠀⠀⠀⣐⣭⣉⣉⣉⣉⣉⣉⣉⣋⣉⣩⣳⠀⠀⠀⠀⠀⠀⠀⠙⡷⣾⢧⡾⢽⡾⣿⣿⣿⣿⡇⣿
⢻⣷⣿⣿⣿⣆⣔⣦⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⡰⡛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢻⢧⠀⠀⠀⠀⠀⠀⠀⠈⠱⣦⣰⣻⣴⡾⢱⣾⣿⡏⣿
⢿⣯⣿⣿⣿⣟⣟⡗⠁⠀⠀⠀⠀⠀⠀⠀⠀⠰⡛⠛⠛⠛⢛⢛⠛⠛⡻⠛⠛⠛⠟⠛⢻⢇⠀⠀⠀⠀⠀⠀⠀⠀⠘⠺⣻⣹⣿⣯⣷⣿⡗⣿
⢿⣿⣿⣿⣿⡗⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠿⠷⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠾⢿⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠻⢿⣿⣿⣿⡷⣿
⣾⣿⢿⠯⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣷⣷⣴⣴⣴⣦⣮⣦⣦⣤⣤⣴⣴⣴⣴⣴⣦⣾⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠯⠯⢿⡧⣿
⣸⣻⠶⡴⢤⣤⡤⣤⣤⣤⣤⠤⣤⣤⣴⣳⣦⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣬⣏⡦⠤⢤⣤⣤⣤⣤⣤⣤⣤⠤⣴⣶⣟⣇⣿
'''+Colour.reset)
print("You have the option to go straight or right. The right seems to have a")
print("small chest, and straight ahead seems to be a mystery figure.")
one = input("Where do you go? straight/right ")
print("")
label twoone
clear()
if one == 'straight':
    print("The mystery figure turned out to be the Grim Reaper.")
    
    input(Colour.grey+r'''
'''+Colour.white+'''   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣤⣤⣤⣤⣤⣤⣤⣤⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣖⣾⣯⣽⣿⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣶⣶⣶⣾⣿⣭⣽⣿⣓⣶⣦⣤⣄⣀⡀⣀⣀⠀⠀⠀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠛⠛⠛⠛⠛⠻⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⡀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣿⣿⣿⡿⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠛⠻⠿⡿⠋⠉⠉⠻⣿⣿⣿⣿⣿⣿⡿⠃'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⡏⠙⠻⠁⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⠟⠋⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀'''+Colour.white+'''⠀⠀⠀⠀⣠⣾⣿⠟⠁⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣿⡏⠀⠀⠀⠀⠀'''+Colour.grey+'''
 '''+Colour.white+'''⠀⠀⢀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⠀⢀⣾⡿⠃⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⡇⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⠀⢠⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⠁⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
'''+Colour.white+'''⢀⡿⠋⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡻⣿⣿⣶⣶⣦⣤⣀⡀⠀⠀⠀'''+Colour.blue+'''⠀⠀⢸⣿⣿⠇⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⡿⠛⠻⢿⣿⣿⣿⣿⣿⣿⣷⡜⢿⣿⣿⣿⣿⣿⣿⡆⠀⠀'''+Colour.blue+'''⠀⠀⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠏⠀⠀⠀⠀⠙⢿⣿⣷⡝⣿⣿⣿⣎⢻⣿⣿⣿⣿⣿⡇⠀⠀⠀'''+Colour.blue+'''⢠⣿⣿⡇⠀⠀ ⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀⠀⠀⠀⣀⡼⢿⣿⣿⣎⢿⣿⣿⣦⠻⣿⣿⣿⣿⣇⠀⠀⠀'''+Colour.blue+'''⠀⠀⣸⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⡏⢁⡀⠀⢀⣀⣀⣀⣀⢻⣿⣿⣎⢿⣿⣿⣧⡹⣿⣿⣿⣿⡄⠀⠀⠀'''+Colour.blue+'''⠀⣿⣿⡟⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣼⣧⠀⠸⣿⣿⣿⣿⡏⣿⣿⣿⣎⢿⣿⣿⣷⡙⣿⣿⣿⣿⡀⠀'''+Colour.blue+'''⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⢰⣄⠀⠉⠛⠛⠉⠀⣿⣿⣿⣿⡎⢿⣿⣿⣷⡘⣿⣿⣿⡇'''+Colour.blue+'''⠀⠀⣾⣿⣿⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣦⡘⠻⠗⠀⠐⠢⣄⣀⣾⣿⣿⣿⣿⡌⣿⣿⣿⣷⡘⣿⣿⣷⠀'''+Colour.blue+'''⢀⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⢀⢀⢀⢀⢀⢈⢻⣿⣿⣿⣿⣿⣷⡘⣿⣿⣿⣷⡹⣿⣿⠀'''+Colour.blue+'''⢸⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣖⠔⠩⠎⠲⠉⢁⣿⣿⣿⣿⣿⣿⣧⢹⣿⣿⣿⣧⢻⣿⡄'''+Colour.blue+'''⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⢀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣇⢿⣿⣿⣿⣇⣿⣷'''+Colour.blue+'''⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡸⣿⣿⣿⣿⣼⣿⣿'''+Colour.blue+'''⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠼⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠻⠿⠿⠇⣿⣿⣿⢹⣿⣿⡿⠟⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    '''+Colour.reset)
    
    label oneone
    if sword == False:
        grimreaperfight = input(Colour.reset+"Do you run or try to fight? You do know basic self defence after all. run/fight ")
        if grimreaperfight == 'fight':
            input(Colour.reset+"Without a weapon, the Grim Reaper easily defeats you")
            goto slayeddeath
        if grimreaperfight == 'run':
            print("You should know better. This never works.")
            input("The Grim Reaper calmly glides over to you and defeats you")
            goto slayeddeath
        else:
            input ("That is not a valid answer, please try again")
            goto oneone
        
    if sword == True:
        grimreaperswordfight = input(Colour.reset+"Now that you have a sword, you can try fight with the sword, with your hands, or run. sword/hands/run ")
        if grimreaperswordfight == 'sword':
            print(Colour.reset+"After a long, hard fight, the Grim Reaper finally fades away, however")
            input("the sword breaks since it wasn't very durable.")
            sword = False;
            goto gobacktwo
        if grimreaperswordfight == 'hands':
            print("Did you really think that would work? Really?")
            input("The Reaper defeats you without effort.")
            goto slayeddeath
        if grimreaperswordfight == 'run':
            print("You should know better. This never works.")
            input("The Grim Reaper calmly glides over to you and defeats you")
            goto slayeddeath
        else:
            input ("That is not a valid answer, please try again")
            goto twoone
 
        
if one == 'right':
    label threeone
    print(Colour.orange+r'''
    ⠀⠀⠀⣠⣾⣿⣿⣿⣿⣾⡿⠿⣿⣿⢿⣿⣷⣶⣶⣾⣶⣷⣷⣾⣶⣾⣾⣿⡿⣿⣿⣷⣶⣶⣶⣶⣶⣾⣿⣿⣷⣤⠀⠀⠀
⠀⠀⣼⣥⣿⣿⣣⢤⣬⣥⣽⣿⣿⣾⣿⣇⣌⣭⣹⣿⣿⣿⣿⣿⣿⣟⣛⣓⣍⣽⣷⣤⣷⡿⢿⡿⠿⢶⠞⣿⣧⣼⣧⡀⠀
⠀⣸⠏⠉⣼⡗⠂⠒⠐⠂⠀⣼⠃⢰⣿⠀⠈⠈⢉⠉⠒⠒⠠⢄⠀⠈⠒⢒⠀⠀⣿⡎⠙⣧⠀⠀⠀⠀⠀⠀⠸⣏⠙⣧⠀
⠀⣿⣠⣴⣿⣀⣀⣀⣒⣶⣶⣿⣴⣿⡯⣄⣀⣀⣠⢤⠿⣧⣡⢤⣤⣶⢯⡿⣿⢿⣿⣿⣦⣿⣄⣀⣀⣠⣀⡄⠤⣿⣶⡾⡇
⢠⡿⠉⢹⣿⡄⠚⠚⠹⣿⢿⡿⠁⣿⡗⠒⠐⠒⠒⣶⡒⢒⣖⣒⣒⣒⣂⠒⠀⠴⣶⣿⡍⣹⣖⠐⢘⣶⣯⣽⣿⣾⣯⢠⡇
⢸⡿⣦⣼⣷⣼⣿⣿⣿⣿⣿⣷⣦⣿⣿⣶⣶⣦⣤⣶⣶⣶⣦⣦⣤⣤⣶⣶⣶⣾⢷⣿⣷⣿⡿⣿⠿⣿⣶⡿⠟⣿⣿⣞⣷
⢸⣷⣿⣿⣷⣤⣿⣿⣯⣄⣾⣿⣿⣿⣷⣿⣿⣷⣦⣰⣾⣿⣯⣤⣀⣨⣭⣿⣿⣤⣼⣿⣿⣿⣿⣶⣶⣿⣿⣤⣤⣸⣿⣿⣿
⢸⡿⣟⣿⡟⠋⢿⣻⠋⠙⣿⣿⣿⡿⠋⢻⣿⣟⣛⣛⣿⣿⣿⣿⣟⣛⣻⣿⣿⣋⣉⣿⣿⣿⡏⢙⠛⣿⣿⠋⠉⢹⣿⣿⡟
⠘⣿⠋⢻⣏⣛⡻⠟⢉⣉⢻⡟⢿⣿⣿⣟⣟⢛⣻⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⡟⢻⡋⠉⠭⠍⠩⠽⠋⣿⣋⣹⡇
⠀⣿⣶⣾⣷⠀⠀⠀⠀⠀⣼⣧⣼⣇⠐⠳⣆⠶⠆⠻⣿⣿⣟⣿⠇⠀⠀⡀⠀⠀⢸⡿⠿⣿⠀⠀⠀⠀⠀⠀⠀⣿⠻⣿⠇
⠀⢻⡇⠀⣿⡀⠀⠀⠀⣠⠁⣯⠉⣿⠀⠐⠂⠐⣀⡐⠐⠒⠒⠀⠀⠀⠀⠀⠀⠀⣼⠇⠀⡧⠀⠀⠀⠀⠀⡀⣸⣧⢀⣿⠀
⠀⢸⣁⣀⣿⡉⠁⠉⠈⠁⠉⣿⣀⣿⠩⠌⠉⠉⠈⠩⠀⠀⠄⠠⢄⣈⠠⢄⣀⠀⣾⣶⣶⡏⠛⠍⢻⣽⣿⠿⣿⣯⣼⡿⠀
⠀⠸⡏⠛⢹⠃⠀⠀⠀⠀⠀⢹⡛⣿⠀⠀⠀⠀⠀⠤⠤⠤⠆⠄⠂⠘⠁⠠⢋⣠⣿⠉⣱⠃⢈⣙⡛⠋⠀⠀⣿⠻⢿⡇⠀
⠀⠀⣷⣆⢸⡗⠒⠒⠒⠒⠒⢻⣧⣻⣆⠒⢂⣒⣤⣐⣠⠀⠤⠒⠐⠂⠒⠔⠂⢶⣿⣀⡾⠬⠤⠤⠠⠤⠤⢤⡟⠀⣹⠇⠀
⠀⠀⣿⣿⣿⣷⣀⣀⣀⣤⣀⣸⡿⣿⡇⢀⣀⣀⣀⣤⡤⣤⡤⣤⠒⢂⣠⡖⠋⣸⡟⠛⡇⠀⠀⠀⠒⠂⠀⢨⣿⡿⣿⠀⠀
⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣻⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⣻⣿⣿⣿⣿⠀⠀
⠀⠘⠟⠿⠿⠿⠿⠿⠿⠟⠛⠟⠻⠿⠛⠛⠛⠿⠻⠛⠿⠛⠛⠛⠛⠛⠛⠛⠟⠻⠿⠿⠻⠟⠟⠿⠛⠛⠛⠻⠿⠿⠿⠆⠀
    '''+Colour.reset)
    if sword == False:
        chestone = input(Colour.reset+"A long chest lays on the floor temptingly. Do you open it? yes/no ")
        if chestone == 'yes':
            clear()
            print("There was a sword in there!")
            print(Colour.grey+r'''
                    />'''+Colour.white+'''_________________________________
    '''+Colour.grey+'''['''+Colour.blue+'''########'''+Colour.grey+'''[]'''+Colour.white+'''_________________________________>
                   '''+Colour.grey+'''\>
          '''+Colour.reset)
            label fourone
            takesword = input("Do you take the sword? It could be trapped... yes/no ")
            if takesword == 'yes':
                print("Congrats on your first weapon!")
                print("")
                sword = True;
                goto aftersword
            
            if takesword == 'no':
                input("You turn back since there is nothing else to do")
                goto gobackone
            
            else:
                input ("That is not a valid answer, please try again")
                goto fourone

            label aftersword
            input("After the chest, the path is a dead end. You walk back.")
            goto gobackone
        if chest1 == 'no':
           input("Since there is nothing else to do, you go back")
           goto gobackone
        else:
            input ("That is not a valid answer, please try again")
            goto threeone
            
    if sword == True:
        print(Colour.grey+r'''
⠓⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠉⠀⠀⠀⠀⠀⢀⡠⠖⠉
⠀⠀⠈⢻⢍⡉⠀⠀⠀⠀⠀⠰⡀⠀⠀⠀⠈⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⡩⠟⠉⠉⠉⠉⠉⠁⠀⠀⠀⠈⣁⠜⠋⠁⠀⠀⠀
⠀⠀⠀⣤⠀⠈⠢⢄⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠈⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⡇⠀⠀⠀⠀⠑⠢⣄⠀⠠⠤⠧⠤⠤⠤⠤⠀⠀⠀⠀⠐⠒⠒⠒⠒⠐⢃⠆⠤⠤⠤⠤⠤⢤⡤⠖⠉⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀
⠀⠀⠀⡷⠀⠀⠀⠀⠀⠀⠈⠑⡤⡀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⣀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠧⠒⠉
⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠇⠈⠒⡤⠭⠍⠉⠯⠭⠭⢭⠽⠭⠭⠭⠭⡭⠭⢭⠝⠋⠁⠀⠀⠀⠀⠀⢀⡀⠤⠐⠂⠉⠀⠀⠀⠀⠀
⠉⠉⠐⠓⠠⠤⢀⣀⠀⠀⠀⢸⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡇⠀⢸⠀⠀⠀⢀⡠⠤⠒⠉⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠚⠂⠤⢄⡀⠀⠀⣀⣀⣀⣀⠸⠀⢀⠀⠀⠤⠧⠤⢼⠄⠒⠉⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠜⢣⠤⠤⣤⠤⠤⠤⠤⠤⠤⠤⠄⠀⡄⠀⢸⠤⠀⢀⣀⣀⣀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠚⢹⠀⠀⢸⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢸⠀⠀⠀⢸⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠐⠒⡖⠒⠒
⠀⠀⠀⠀⠀⣀⠤⠒⠉⠀⠀⠀⢸⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠸⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀
⠀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⢸⠒⠒⠈⠀⠀⠈⠀⠀⠀⠀⠉⠀⠉⠁⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀
⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢠⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠢⣀⢘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡃⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠉⠐⠲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⠀⠀⢠⠀⠀⠀
⠀⠀⠀⠀⡠⠊⠀⠶⠷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⢸⠀⠀⠀
⠀⠀⡠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢼⠀⠀⠀
⡠⠎⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙
'''+Colour.reset)
        input("There is nothing but an empty chest in a dead end now. You turn back.")
        goto gobackone


else:
    input ("That is not a valid answer, please try again")
    goto gobackone

#Scene2
label gobacktwo
clear()
print(r'''
           '''+Colour.red+'''   __
             '''+Colour.red+'''(  )
            '''+Colour.reset+'''  ||
              ||
        '''+Colour.grey+'''___|""|__.._
       /____________\
       \____________/'''+Colour.reset+'''~~~.
       ''')
print("With the Grim Reaper gone, you focus on your task: getting out")
print("You can only go right, so you go there, already stiffening slightly in anticipation")
print("There seems to be a lever and a wall with double doors in an arch. After many attempts to")
print("open the door without using the lever you slump in thought.")
two = input("Do you pull the lever, or do you simply wait and hope Brit isn't too ahead? pull/wait ")
if two == 'pull':
    label onetwo
    clear()
    print(Colour.orange+r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⠤⠶⠶⠶⠶⠶⠦⢤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠶⢛⣩⣥⣶⢶⣶⣿⣿⣿⣿⣶⢶⣦⣬⣙⠓⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⢋⣥⣾⣿⣯⣿⡾⠿⣿⢿⣿⣿⣿⡿⠷⣶⣯⣝⡻⢶⣌⡛⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⢋⣴⣿⣿⡿⠟⠋⠁⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠈⠙⠿⣷⣝⢿⣦⡙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⣰⣿⣷⡿⠋⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠈⠻⣷⣝⢿⣌⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⠏⣼⢏⣾⡟⠁⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠘⢿⣎⢻⣆⢻⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⡿⣸⡏⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡆⢻⡎⣧⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⢇⣿⢸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠘⣿⢸⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢻⣿⣷⣿⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣿⣾⣿⣿⣿⣇⣀⣀⣀⣀⣀⣀⣀⣿⡇⣿⣼⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡏⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⣿⢿⣿⣿⣿⡟⠉⠉⠉⠉⠉⠉⠉⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣾⣿⣿⣿⣧⡄⠀⠀⠀⠀⠀⠀⠀⠀ ⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣥⣿⣿⣿⣿⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀ ⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠿⢿⣿⣿⣿⠿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⢿⣿⣿⣿⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⣧⣤⣶⣦⣤⣶⣦⣤⣤⣴⣿⣾⣿⣿⣿⣷⣤⣤⣶⣶⣶⣤⣤⣴⣿⡇⣹⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡟⣿⡿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿ ⠿⠿⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢹⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡇⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⣿⣧⣤⣤⣤⣤⣤⣤⣤⣤⣴⣶⣿⣿⣿⣿⣿⣷⣤⣤⣤⣤⣤⣤⣤⣤⣤⣶⣿⣇⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡶⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣀⣀⣸⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣇⣀⣀⠀⠀⠀⠀
 ⠀⠀⠈⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⡟⠁⠀⠀⠀
⢠⣤⣤⣤⣿⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣷⣤⣤⣤⣤
⢸⡟⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⣿⣽
⠀⠷⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⡾⠸
    '''+Colour.reset)
    print("")
    print("The lever was safe. The doors safely open.")
    leverdoor = input("Do you just go through, or do you throw a broken bit of the lever through it? go/throw ")
    if leverdoor == 'go':
        input("You happily walk through")
        goto gobackthree
    if leverdoor == 'throw':
        print("There was really no need, but after a bit of struggling, you throw it through")
        print("Nothing happens")
        input("You go through, feeling slightly foolish")
        goto gobackthree
    else:
        input("That is not a valid answer, please try again")
        goto onetwo
if two == 'wait':
    label clock
    clear()
    print(r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡤⠖⠒⠛⠩⢉⠉⠉⠈⠉⠍⠍⠙⣓⠲⠤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠚⣉⠤⢂⣉⡥⠶⠶⠒⠚⠚⠛⠛⠒⠺⠴⠤⣤⡁⠒⠭⢳⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡴⢋⡡⠂⣩⠴⠚⠉⠁⠀⠀⠀⢰⠀⢶⡆⠀⠀⠀⠀⠉⠓⠦⣄⡈⠘⠛⣦⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⡴⣋⠔⣩⡴⠋⠁⣠⢀⡀⠀⠀⠀⠀⠘⠂⠿⠤⠀⠀⠀⠀⠠⡀⠀⠀⠙⠢⣅⠐⠛⣦⡀⠀⠀⠀⠀
⠀⠀⠀⢠⡞⠎⢁⡴⠋⠀⠀⠀⣹⢈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠈⠳⣀⠈⢹⣆⠀⠀⠀
⠀⠀⢠⡟⠀⢠⠟⠀⠀⠀⠀⠀⠈⠈⠁⠀⢀⡿⡓⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠙⣆⠀⠸⣧⠀⠀
⠀⢠⡟⠀⢠⡏⠀⠠⡆⡤⢤⠀⠀⠀⠀⠀⠀⠀⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣽⢃⠀⠀⠘⣆⠁⠸⣇⠀
⠀⣾⠀⢀⡟⠀⠀⠠⡇⢧⡾⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠈⠀⠀⠀⢸⡄⠈⢻⡄
⢰⡇⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠈⢸⡇
⢸⠆⡁⢾⠀⢀⡴⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢙⣿⠀⠀⢧⠀⢢⣟
⢸⡄⠃⣾⠀⢈⡷⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠾⡿⠂⠀⣞⠀⢨⡿
⢸⡆⠀⢽⡀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⢀⢸⡇
⠈⣷⠈⠘⣇⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⢤⡞⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡄⠀⠀⠀⢰⠃⢀⣾⠃
⠀⠹⣇⠠⢙⣆⠀⠀⢼⢿⡁⠀⠀⠀⠀⠀⠀⠀⠘⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⡇⠀⠀⣠⠇⢈⣰⡏⠀
⠀⠀⠹⣧⡀⠸⢦⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⡤⠀⠀⠀⠀⠈⠀⡰⠃⢠⣶⠟⠀⠀
⠀⠀⠀⠙⢯⡦⢈⠱⢄⠀⠀⠀⠀⠉⡹⠃⠀⠀⠀⠀⢀⡤⠀⠀⠀⠀⠠⣟⡶⠀⠀⠀⠀⣠⠞⠁⢠⣽⠋⠀⠀⠀
⠀⠀⠀⠀⠈⠻⣶⡄⡈⠙⠦⣄⡀⠈⠁⠀⠀⠀⠀⠀⢼⣲⠆⠀⠀⠀⠀⠀⠀⠀⣀⡴⠚⠁⣠⣼⠟⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⠷⣦⣄⡀⠉⠓⠦⢤⣀⣀⣀⢀⠀⣀⣀⣀⣀⣤⡴⠶⠖⠋⢁⣀⣶⡵⠟⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⢷⣦⣤⣠⠈⡉⠙⠛⠚⠒⠛⠛⠛⠋⠉⣁⣠⣤⣶⣾⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠿⠷⠿⣶⣿⣶⣿⠾⠿⠿⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ''')
    leverwait = input("How long do you intend to wait? 1min/5min ")
    if leverwait == '5min':
        input("Wrong answer. A timer was set, and after waiting for a while, a gas is released. You pass out")
        goto gassed
    if leverwait == '1min':
        print("You wait for a bit, then a small hum starts coming out of the floor")
        print("")
        goto clocktwo
    else:
        input("That is not a valid answer, please try again")
        goto clock
        label clocktwo
        leverwaittwo = input("Do you want to keep waiting or just pull the lever? wait/pull ")
        if leverwaittwo == 'wait':
            input("Wrong answer. A timer was set, and after waiting for a while, a gas is released. You pass out")
            goto gassed
        if leverwaittwo == 'pull':
            print("The doors open safely. Why'd you waste so much time?")
            print("")
        else:
            input("That is not a valid answer, please try again")
            goto clocktwo
            label leverdt
            leverdoortwo = input("Do you just go through, or do you throw a broken bit of the lever through it? go/throw ")
            if leverdoortwo == 'go':
                input("You happily walk through")
                goto gobackthree
            if leverdoortwo == 'throw':
                print("")
                print("There was really no need, but after a bit of struggling, you throw it through")
                print("Nothing happens")
                input("You go through, feeling slightly foolish")
                goto gobackthree
            else:
                input("That is not a valid answer, please try again")
                goto leverdt

else:
    input("That is not a valid answer, please try again")
    goto gobacktwo

#Scene3
label gobackthree
clear()
print(Colour.grey+r'''

 IIIIIIII
 IIIIIIII
 IIIIIIII
 IIIIIIII
 IIIIIIII       IIIIIIIIIIIIIIIIII
 IIIIIIII       IIIIIIIIIIIIIIIIII
 IIIIIIII       IIIIIIIIIIIIIIIIII

'''+Colour.reset)

print("After you walk through the doors, you turn left, walking a while")
print("until you see two silhouettes in the distance. one is")
print("tall, the other is short and wide. You can approach either one.")
three = input("Do you go to the long one or the wide one? long/wide ")
if three == 'wide':
    label lionchoice
    clear()
    print(Colour.orange+r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠄⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠛⠉⠁⠀⣀⣴⠄⠀⠀⡀⠀⢀⠊⠀⠛⢀⠠⠀⠉⠛⠟⠻⣁⠈⣷⡀⠉⠉⢃⠘⠿⣟⡠⣍⠛⡿⡟⢰⣴⣶⡆⣶⣴⠃⣴⠂⠀⡠⠀⠀⠀⠀⠀⠀⠀⠀⣟⣷⠀⠹⡄⠀⠀⠀⠒⡄⠂⠌⢣⢉⡝⡹⣛⠿⡿⣿⣿⣷⣦⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠠⠀⠀⠀⠀⡈⠚⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⡀⢤⡾⠋⡡⠀⣰⡿⢁⣴⣿⣷⣄⡀⠀⠁⠀⠀⠀⣴⠆⠘⢧⠀⠠⠀⠀⠀⠀⠁⠘⣅⠻⡆⢳⡹⢸⣿⠇⣰⣿⠛⢢⠟⣠⣾⣷⢊⠄⠀⠀⠀⠀⣴⣷⣯⣿⡧⠀⠁⠀⠀⠀⠁⠜⡠⠀⢂⠡⡈⠅⡄⢣⡔⢬⣳⣛⡟⣧⣦⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⠋⠁⢀⣀⡤⢀⣤⣾⠿⢉⠀⠀⠁⢰⣿⠅⡘⠻⢿⣿⣿⣿⣿⣶⣶⣄⡀⠉⢀⠇⠈⢠⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⠓⣯⡟⠀⣻⠝⢀⢂⡾⣿⣿⡿⢖⣈⣀⡠⠀⠀⠘⢷⠈⣿⡇⠀⠀⠀⠀⠀⠀⠂⡱⢈⠆⠂⠘⠠⠘⠠⠈⢁⠣⡙⢚⠻⢟⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠈⣷⣶⣶⣶⣿⣿⣿⣿⠾⢋⣡⣴⣾⡿⠿⠛⣻⠿⠥⠒⠉⠀⠀⠠⣿⠃⠀⠀⠀⠀⠀⠉⠙⠻⣿⣿⣿⣿⣦⡀⠀⠲⠆⢀⡄⠀⠀⠀⠀⠀⠐⢀⢆⡀⠀⠀⠀⠀⠀⢀⡤⢚⠙⠛⠡⠴⠾⢛⣿⠶⠖⠒⠀⢨⢓⠬⠁⠀⠀⠀⠀⠀⢀⠡⢓⡉⠆⠀⠀⠠⠀⠂⡐⠈⠀⠁⢎⠰⡌⢎
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⣿⣿⣿⣿⡿⠟⣡⣶⡿⠛⠉⠀⣀⣤⣴⣶⣶⠖⠀⢀⣀⣼⣿⡶⣤⣶⣶⣶⣶⣶⣦⣄⣤⣿⣿⣿⣿⣿⣿⣷⣆⢠⠂⠀⠰⢦⣶⣦⣤⣾⡿⠌⢁⡠⠀⢠⡞⡓⢋⡴⡾⢿⠿⢛⣑⣿⣿⣿⣿⣿⣷⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠠⠘⠤⠘⠀⢀⠠⠀⠀⠁⠀⠀⠀⠈⠄⠂⡘⢠
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢁⣴⣿⣿⣿⣿⣿⡟⣡⣾⣿⡧⠔⠒⠚⢛⣻⡿⠛⠋⠀⠀⠔⠉⠉⠀⠀⣠⣿⣿⠿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⠀⠀⠀⠉⠸⣿⣿⠟⣰⢋⠄⣰⡖⢉⡥⠋⡔⢊⠤⠾⠿⠛⠛⢛⣉⣛⣻⣭⡛⠿⡿⢿⣿⣦⡀⠻⣝⣃⣀⠉⢒⡀⠀⠀⠂⠁⠀⢠⠁⠆⠁⢂⠐⠀⠄⡁
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠴⣶⣿⣿⣿⣿⢋⣴⣿⣟⣥⣶⣾⢿⡿⠿⣉⡤⠀⠘⠀⣴⣿⣿⣿⣶⣾⣿⣿⣧⣀⠀⠈⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⣿⠟⣡⣰⠿⢁⣰⠖⠈⣠⠄⢂⣠⣶⡶⢋⣡⣾⣿⣿⣿⣿⡳⠈⠑⣊⠛⢿⣦⡘⠻⣟⣷⣤⠀⠀⠀⠀⠂⠈⠀⠀⢢⠐⠄⠊⡐⠠⠐
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠩⠉⠉⣹⡿⢡⣾⣿⣿⡿⠛⠉⠀⠀⠀⠀⠙⠀⣠⡖⠀⠀⠉⢻⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⡘⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣇⠀⠁⠀⠀⠀⠀⠀⠊⢁⣚⣛⣉⣰⣿⣏⣤⠴⠣⠄⠊⠐⠁⢠⣿⡿⠟⠉⢉⣉⡛⢿⠿⣶⣦⣭⣀⠉⠯⡙⢟⣿⣯⣁⠀⠀⠀⠄⡀⠀⠀⠂⠌⢂⠑⠢⡅⠂
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⠁⣠⣦⣦⠀⠀⠀⢀⠀⠈⣽⣿⠿⠃⣼⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣁⠀⠀⠀⣈⣿⣿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣅⢛⡋⠜⣻⡷⠀⠒⠂⠉⠉⠚⠋⠀⠀⠠⢀⣠⣤⣶⣧⣿⢦⣝⡻⣿⣷⡄⢳⣌⡑⠻⣿⡄⠀⠀⠀⠀⠀⠀⡀⢀⠀⠈⡐⠠⢃
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⡿⢡⣾⡿⠟⠛⠓⠀⠀⡸⣿⡆⠘⣿⡀⠠⣿⣿⣿⣿⣿⣿⣿⣿⣯⣴⣾⣷⣤⣤⡾⠟⠋⠩⠙⢟⡭⠀⠐⠁⠀⠀⠀⠀⠀⢰⣶⡿⠽⠭⠿⣿⣌⢻⣥⡤⡄⡀⠠⠴⠈⠛⠻⣿⣾⣿⣿⣿⣿⣿⣿⣿⣯⠛⠿⡟⣿⣎⠻⣿⣷⣬⡙⠁⠀⠠⢀⠈⠀⢀⠂⠌⠐⠀⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⣿⣿⣿⣿⣿⣿⣿⣿⢡⣿⠉⠀⠠⡼⠡⠂⢸⡇⠹⢷⡀⠘⣷⣄⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣿⣿⣿⣿⣷⣿⣿⡷⠀⢠⠖⠀⠀⠀⢀⣾⣿⠟⠉⠀⠀⠘⢿⣿⣭⣤⠉⡛⠦⠥⡆⠀⠈⠀⠠⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⡙⢾⣿⠀⣈⠙⣿⣷⣄⠀⠀⠀⠢⢐⡀⠀⠀⠀⠀⠐⠈
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠈⣀⡴⢦⡟⠁⠀⠠⠟⢃⣤⣉⠛⠓⠈⢙⡓⠸⣿⣿⣿⣿⣿⡿⠟⠃⠀⠀⣀⣀⠀⠀⠛⠯⠁⠀⠀⠁⠀⠀⠀⠀⠀⣿⣿⡋⠁⠈⠁⠐⠈⢻⣿⣿⣧⡐⢢⡤⠀⠀⠀⡈⠰⠄⠀⠈⠙⣿⣿⣿⠿⢿⣿⣿⣿⣿⣦⡈⠀⠙⣷⡈⣝⠻⣷⣄⠀⠠⠀⠀⡁⠂⠐⠄⡈⠐
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢰⣿⡁⣈⠀⢀⣠⣶⣛⣯⡝⡥⠀⠌⠒⠀⠄⠀⣿⣿⣿⣿⠿⠁⠀⢰⡏⠀⠈⠛⣿⡆⠀⢀⣀⠀⠄⠀⠀⠀⠀⠀⠈⢹⣿⠃⠀⠀⠀⠀⠉⠸⣿⣿⣷⣍⠃⢴⠌⠂⠀⠀⢠⠤⢀⣄⠀⠙⠛⠋⠉⡀⠉⢩⡙⠻⣿⣿⣦⡀⢽⡹⣬⡳⣜⣟⠂⠀⠁⢂⠀⠐⡈⠐⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⢸⣿⣿⣿⣟⠉⠉⡉⠙⠻⡆⢿⠗⠤⠘⢭⠶⢾⣻⠖⠀⠀⠀⠀⠀⠀⡀⢰⣿⣿⣿⡟⠁⠀⠀⠀⠣⣍⡛⠿⠟⠀⣤⣿⡿⠃⠀⠈⠵⠊⡀⠀⠰⣿⣿⣇⠀⠀⠓⢀⡰⠛⢿⣿⣧⣍⡒⢦⣿⣖⠀⠐⠒⠂⡀⠊⢤⣶⡿⠿⢷⣤⣤⣄⠉⠀⠈⠻⣿⣷⠈⠳⣻⣷⡼⣿⡀⠤⡀⠂⠐⠠⠈⠑⠨⠑
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠁⡀⠀⣿⣿⣿⣿⢀⣴⢀⠈⣷⣦⣄⠸⣄⢢⢎⣳⣟⠚⡁⠄⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⠟⠁⢤⡥⠄⠀⠘⠻⠆⢰⣿⣿⣿⣥⡀⠀⠂⡌⢲⣦⣿⣿⣿⣿⣷⣶⣿⡟⠓⣂⠠⠤⡞⢀⣉⣥⣶⡿⠿⣿⣿⣿⡃⠀⠀⠉⠽⣧⠄⠙⣷⣾⢿⡇⠀⠀⠀⠁⢂⠁⠂⠤⢀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠂⠄⠐⡀⠀⣌⣿⠧⣿⣿⣎⠂⠉⣋⣻⢰⡼⢤⣹⣅⡺⠁⠀⠀⠀⠀⠐⠀⠀⠀⠘⠿⠿⠏⠀⠀⠀⠀⢀⣤⣤⣶⣾⣿⡿⠟⢁⣰⣏⣻⣷⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⡀⠀⢀⣀⠙⢿⣿⣿⡿⣿⣿⡿⠿⢦⣀⠒⠀⠁⣸⣿⣿⣥⣾⣿⣿⣿⣿⣿⣷⣶⣶⠶⣤⣤⣤⣈⠛⠾⢷⡀⠀⠐⠀⠀⠈⠄⡀⠂
⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠂⠌⡐⠠⢀⢀⣯⠠⡙⠿⣿⣿⣶⣶⠏⣼⣁⠛⠂⣀⣄⡐⣀⠀⣈⠀⡠⠔⠊⠂⠀⠀⠀⠀⠀⢀⠁⠀⣸⣿⠿⠟⠋⠁⠀⠚⠛⣋⠉⠻⠋⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠣⣉⠄⢻⣿⣿⣿⣿⣿⣿⣦⠀⠑⠣⠈⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⡿⢿⡷⣶⣍⣙⠟⡻⢶⡀⠉⠀⠀⠈⠐⡀⠂⢀⠁
⠀⠀⠀⠀⠀⠀⠄⠠⢈⠀⡁⠂⠄⢁⠊⢸⣿⣷⣶⣤⠈⢻⣿⢃⣼⢃⣡⣾⡿⠗⠀⠄⠀⠉⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⡇⠀⠀⠀⠀⠀⠀⠠⢙⣿⠿⠟⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⢫⡄⠈⣿⣿⣿⣿⣿⣿⣿⣇⠐⠴⣆⠘⣿⣿⣿⣿⣿⣿⠿⣷⡒⢲⠀⢠⠰⠬⠉⡛⠷⣄⠸⢿⡄⠀⠀⠠⢁⡐⣈⠀⠈
⠀⠀⠀⠀⠀⠌⠐⠠⢀⠂⠄⠉⠾⣤⣀⠈⣿⣿⠏⣰⠆⣸⢇⣾⣯⡿⠛⠁⡠⠄⠀⠀⠀⡀⠠⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠈⣄⠻⣿⣿⣿⣿⣷⡶⠞⠙⡛⠷⣄⣠⠘⢧⡀⡄⢿⣇⢠⣤⠀⠀⠠⠀⠀⢄⡈⠐
⠀⠀⠀⢀⠈⠠⠈⠐⡀⠢⣌⠰⢄⣠⣽⣿⣿⣿⣦⣤⣲⢃⡾⢏⢡⠀⠄⠀⠀⠀⠈⠀⡀⠀⠀⠈⠀⡀⠀⠀⠀⠀⠀⠀⠀⠒⢦⣤⡄⠀⠀⠀⠀⠀⠄⠀⠸⡶⢶⣤⣀⣀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⣄⡐⠄⣠⡀⢝⣻⣿⣿⣶⣀⠀⠉⠐⣈⠉⣛⠲⣤⣷⡌⣿⣆⠻⣶⣄⠀⠈⠁⠂⡄⢃
⠀⠀⠀⢀⠠⠁⠠⠁⠲⠷⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⢁⣾⠏⠠⠄⠂⠀⠀⠀⠠⠀⠀⡐⠂⠀⠀⠀⠈⠀⠀⠐⠀⠀⠀⠀⠀⠘⠻⣷⣴⡆⣶⣤⣤⣐⠟⠲⢄⡀⠉⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠦⠦⠴⣦⣴⣤⡈⢻⣿⣿⡿⣯⡀⠈⢉⡓⢶⠰⡌⢻⣷⡈⣿⣷⡄⠈⠂⠁⢀⠀⠀⠃
⠀⠀⠀⠀⠄⡈⢁⠓⠞⢻⣿⣯⣿⣿⠿⣿⣿⣿⡿⢃⣿⠋⠀⡤⡄⠐⠀⠈⠀⠀⠐⠀⠐⠀⠀⠂⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠈⠻⣿⣷⣬⣿⣿⣷⣶⣄⡀⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡒⠒⠒⠄⢬⡙⠋⣦⢟⣻⣷⣽⣷⠀⠀⢹⣄⠳⣌⠳⡝⢿⣦⠙⢿⣆⠀⠀⠆⠀⠄⠀
⠀⠀⠀⠈⡐⢀⠂⡐⠈⠆⠄⠠⢀⣤⣾⣿⣿⠟⣡⠟⠁⣊⠰⠋⠀⡀⠀⠀⠐⠀⠠⠀⠀⠀⠀⠀⡀⠂⢠⠀⠄⠀⠀⠀⠀⠀⠀⠙⢦⣀⠈⠛⢿⣿⣿⣿⣿⣿⣿⣦⡀⠂⣉⣩⣍⡉⠛⠉⠁⠀⢈⡙⠭⣱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡒⠺⢦⠑⡀⢻⣶⣿⡿⠋⢹⡇⢀⠈⢻⣷⡘⢿⣿⣷⣿⣿⡌⢿⡇⠈⢢⠀⠀⠀
⠀⠀⠀⠐⠀⠄⠂⠄⠁⠊⢈⣤⣿⣿⣿⣿⢋⣴⣣⡾⢩⡅⢰⠂⠜⠁⠠⠀⢀⠠⠄⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠐⠀⠂⢀⠘⢿⣦⡄⠠⠙⠻⣿⣿⣿⣿⣿⣷⡌⠙⠁⠠⣴⣶⣿⣿⣷⣶⣦⣬⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣃⢻⣷⡦⣀⢙⣻⣿⣶⡄⠁⠸⡀⠀⢿⣿⣦⢹⣿⣿⡟⢿⡌⢿⣆⠠⠃⠀⠄
⠀⠀⠈⢀⠡⠈⡐⠄⠒⠻⣿⣿⣿⣿⣿⢃⣾⡿⠱⢠⠛⣠⠃⠀⠀⠀⠀⠀⠂⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠈⢿⣷⣦⣤⣀⡀⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣿⡘⢿⣷⣽⡇⢻⣿⣿⣿⡀⡀⠱⠈⡄⣿⠻⣿⣿⣿⣿⣌⢷⡘⠏⢣⡀⢈⡐
⠀⠀⠀⠂⢀⠐⠠⠜⠂⢠⣿⣿⠿⠋⠁⣺⠿⡇⢠⡄⢰⠏⢀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠾⣿⣶⣤⣤⣤⣀⣀⠀⠀⠀⢄⣀⣘⣿⣿⣿⣿⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢛⣥⡾⣿⣿⡘⢿⣾⣗⠀⠙⡟⣿⣷⠘⣆⢃⡀⣿⣧⠙⢿⣟⣿⣿⣌⠳⢀⡠⢁⡀⠈
⠀⠀⡀⠁⠀⡀⠂⠄⠀⣾⡟⣡⡾⢃⣾⠛⣁⣰⡏⠀⠆⠀⢿⡗⠀⠀⠐⠅⠀⠀⢀⣴⣶⣦⣀⠂⠀⠀⢿⣿⡿⠿⠿⠛⠿⣿⣦⣄⡀⠈⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣋⣀⡄⣛⠳⢈⣿⣉⠺⡀⢿⡿⣿⡆⠹⡆⢷⡈⣿⡆⠘⣆⢹⣿⣿⣿⠈⢇⠂⡱⢣
⠀⠀⠠⢀⠁⢀⠂⠄⠈⠛⠁⠉⠀⣶⠧⢼⣿⡃⠥⢠⠀⠆⠘⠛⠂⠀⠀⠀⠀⠀⠎⠉⢀⣼⣿⣃⠈⠁⠀⡀⢉⣷⣶⡶⢾⡿⢿⣿⣿⡿⠟⢿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⢉⣉⡿⣧⡍⢇⠀⢻⣿⣇⣹⡌⠓⠘⣿⡀⠷⠈⢿⣿⣿⡀⢭⡀⢿⣿⣿⠠⢦⡑⢬⣿
⠀⠀⡐⢀⠂⠠⠀⠐⡀⠂⠀⠀⠀⠉⢸⠤⡄⠀⠀⢀⡰⢂⠀⠀⠒⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡧⠀⠐⠋⠄⠦⠀⠀⠁⠀⠀⢀⣸⣿⡗⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣭⣷⡿⢧⡈⢳⡌⠻⣿⣦⢻⣆⢻⡘⠇⠈⢆⠈⢻⣿⣷⠈⣧⡀⢻⣿⣧⢠⢛⣿⣯
⠀⢀⠐⡀⠂⠁⠠⠁⠀⠀⡀⠀⠀⠂⣹⣷⣄⠀⠀⠠⠃⡰⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⠿⠁⠀⠀⠀⠀⢀⣀⣤⣴⣷⣾⣿⣿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⡿⠟⢿⣿⣾⠟⣻⣽⡿⣿⣦⠹⣬⡙⠻⠜⣿⡘⢿⡌⡇⠀⣼⠂⢀⠘⣿⣿⣇⢸⡄⣌⢿⡛⠳⣮⣿⣏
⠀⠄⢂⠐⠈⡀⠁⠠⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣦⣀⠑⠀⠁⠀⠀⠀⠀⢀⣴⣿⣿⣿⣭⡁⠀⠀⢀⣠⣤⣴⣾⣿⣿⣿⣿⣿⣿⠿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣽⣿⣿⡛⢩⣭⣿⣟⢻⣯⢹⣿⣷⣦⣉⠀⠈⣿⡇⢸⣿⡇⠀⠨⡅⢸⡇⢿⣿⣿⣼⡇⠙⠌⣄⠱⣾⡗⡆
⠀⡐⠠⢈⠐⡀⠁⠀⠀⠀⠀⠘⠁⢺⣿⣿⣿⣿⣿⣿⣦⣀⡀⠀⠀⣴⣴⣿⣿⣿⣿⣿⣿⣿⡿⣿⢿⢿⣿⠛⠙⠛⠟⠁⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⠟⢠⣾⣿⣿⣿⡈⢿⣶⣿⣿⣿⣿⡌⢶⠸⣷⠀⣿⡇⠀⡄⠃⢘⣷⣸⣿⣿⣿⣷⠈⡆⠉⣾⣿⡝⣯
⠀⠄⡁⢂⠐⡀⢁⠀⠀⠀⢰⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡄⣿⣿⣿⣿⣿⣿⣿⣽⣇⣄⣼⣦⣀⠻⣦⣄⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣝⠊⠙⠧⠙⣯⣿⡏⢀⣿⣿⣿⣿⣿⣧⠹⢿⣿⣿⣿⣿⣷⡘⣵⣿⠀⠿⠀⢠⡆⠀⢸⣿⣿⣿⣿⠈⠏⢷⣼⣿⣍⠃⠸⢅
⠀⠌⡐⢀⠂⠠⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡛⠟⠻⢶⡬⢼⣿⣡⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣴⣆⠻⣿⣿⢻⣿⣷⣾⠷⡀⢃⠀⠸⢁⡆⢸⣿⢻⣿⣿⣆⢂⠘⢿⣩⢍⡈⢡⣎
⠀⠠⠐⡀⠂⢁⠂⠀⠀⠀⠀⠀⠀⠰⠈⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣡⢤⡌⠑⢦⢠⣟⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡈⠹⣧⠻⣿⠇⠀⣄⠘⢆⠀⢻⠄⢸⣿⠆⠻⠹⡏⠀⠀⣀⠀⣨⣴⣿⣾
⠀⠠⠁⠄⢁⠂⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠈⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⢿⣿⣿⡿⡿⠙⠉⠀⠉⠂⢲⣦⣾⣿⣿⣿⣿⣿⣿⣿⣶⣭⣥⣉⡏⠀⠻⣿⣴⣽⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣷⠀⢻⣧⣿⠀⠸⣯⠀⡆⢣⠘⣷⠈⣿⠀⠀⠀⢻⡄⠂⢶⡤⢿⣛⠛⠓
⠀⠀⠄⠂⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠋⠉⠹⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⣀⣀⡀⠀⠉⠉⠛⠛⠿⠿⠜⢿⠻⠹⠛⠘⠈⠛⠻⠛⠁⠀⠀⠀⠀⠀⠀⠀⢠⣼⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣦⣤⡙⠄⢹⣿⣿⣴⣦⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⠘⣿⣇⠸⣿⣿⡗⣄⠉⠀⠃⣼⡆⠻⣧⡝⠀⠀⠀⢀⣿⣅⠈⠑⠂⠀⢛⣽
⠀⠀⠀⠐⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠹⣿⣿⣿⣶⣦⣴⣿⣶⣿⣿⣷⣶⣦⣶⣀⣠⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠐⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣍⡛⢿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢻⣿⠀⢸⣿⣧⣿⣿⣦⣶⣿⡇⠀⠘⣷⠀⣤⣤⠍⣉⠉⠠⠘⠒⠉⣡⣾
⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠐⣿⣶⣶⠉⢱⣆⣲⣤⣤⣀⡀⠀⢠⣘⣻⢿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣰⡌⢿⡀⢀⢻⣿⡾⣿⣿⣿⣧⠡⠴⠦⠚⢀⣠⣤⠴⠅⠃⣀⣤⣶⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠊⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⠿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⢻⣤⣼⣿⣷⣬⡿⠿⢿⣣⡄⣶⣷⠦⣤⣤⣤⣴⣾⣿⣿⣿⣿⣿⣿
  '''+Colour.reset)
    print("The 'silhouette' turned out to be a lion. You just awoke it")
    lion = input("Do you run or pet it? run/pet ")
    if lion == 'run':
        clear()
        print(Colour.orange+r'''
  ⠀⠀⠀⠀⠀⠀⢠⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠞⠛⠛⠒⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣤⡤⠶⠚⠁⠀⠀⠀⠀⠀⠀⠉⠙⠉⠓⠲⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⣿⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢈⣿⣧⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣴⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣼⡿⢱⣿⣿⡟⣿⠀⠀⠀⠀⠀⠀⠀⣾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣧⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢰⣿⢃⣿⣿⣿⣱⡿⠀⠀⠀⠀⠀⠀⢠⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⣿⡾⣽⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⣾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀
⠀⠀⣿⣿⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⣿⡀⠀⠀⠀⠀⠀⠀⢀⡤⠖⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⠀⠀⠀
⠀⢀⡿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡧⠀⠀⠀⠀⢀⡶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠀
⠀⡼⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡼⠋⠀⠀⠀⠀⣴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀
⢠⠃⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⠀⡀⠀⠀⣀⠴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀
⡸⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠁⠀⠀⠓⠖⠊⣁⠀⢀⣠⡄⠀⠀⠀⢀⣠⣤⣤⣤⣤⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⠀⠀⠀⠀
⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡾⠁⠀⣀⣤⣤⣤⣾⣿⣿⣟⢿⣷⡄⠀⢀⣾⣿⣿⢛⣭⣤⣤⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀
⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠈⣟⣛⠿⣿⣿⣿⣿⣿⣦⢻⣷⡀⣾⣿⣿⢣⢋⣾⣿⣿⣿⣿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⢸⡃⠀⠀⠀⠀⠀
⢹⠀⠸⡀⠀⠀⠀⠀⠀⣠⣿⣠⣤⣾⣿⣿⣿⣮⡻⣿⣿⣿⣿⣿⣿⣷⢻⣿⢏⣷⣿⣿⣿⣿⡿⣫⣵⣿⣿⣿⣶⣤⣤⣤⣄⡀⠀⠀⠀⠘⣿⠀⠀⢸⠇⠀⠀⠀⠀⠀
⠀⢣⡀⠈⠒⠤⠤⠖⠊⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡻⣿⣿⣿⣿⣿⣿⣿⣼⣿⢻⣿⣿⢏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠹⡧⠀⣾⠀⠀⠀⠀⠀⠀
⠀⠀⠑⠦⣀⣀⣀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⢇⣮⢏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⣿⣸⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡿⣛⣯⣽⣛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢤⣠⣿⡟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣹⣿⣿⣿⣿⣿⣿⣿⣯⣷⣶⣶⣶⣿⣿⣿⣿⣿⠀⠙⢿⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⣿⣿⣿⣽⣿⣟⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠙⠦⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢸⢻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣠⣤⡄⠈⠿⠛⠛⢿⣿⣾⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⣀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠈⠳⣶⣦⣀⠀
⠀⠀⠀⠀⣾⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⠈⢹⢛⣷⠀⠀⠀⠀⠀⠁⠈⠻⣿⣏⣿⡏⣿⣿⣿⠭⠤⢄⠀⣾⠟⠑⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠈⢻⣮⠁
⠀⠀⠀⠀⢻⣾⣿⣿⣿⣿⡿⢛⣥⣶⣿⡄⠈⠀⠀⠀⠊⠉⠉⠀⠠⠄⠀⠀⣹⠙⠃⠉⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⢿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢠⡀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⣿⣿⣿⣿⢟⣴⣿⣿⣿⣿⣿⣦⠀⠀⠄⣀⣀⡀⠀⠀⠀⠈⢳⠈⢦⠐⠀⠀⠀⠀⣠⡜⠀⠀⠻⣿⣿⣿⣿⣷⡙⣿⣿⣿⣿⡇⠀⠀⠀⢸⡷⠀⠀⣿⠇
⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠈⢿⣿⣷⣄⡀⠀⢀⣀⠘⣄⣀⣀⣴⣿⡿⠁⠀⠀⠀⠹⣿⣿⣿⣿⣿⡸⣿⣿⣿⠃⠀⠀⠀⢸⠇⠀⠀⣿⠀
⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⠃⠀⠀⠀⢣⣀⣉⠙⣿⣿⡏⠛⠋⠉⠩⢽⣿⣟⠋⢁⡜⠀⠀⠀⠀⣿⣿⣿⣿⣿⣧⣿⣿⣿⠀⠀⠀⠀⠈⠀⠀⣸⠏⠀
⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⢣⣾⠀⠀⠀⠀⠀⠈⠉⠀⢠⡏⠀⠀⠀⠀⠀⠀⠹⡍⠉⡉⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⣰⠃⠀⠀
⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⢣⣿⣿⣆⠀⠀⠀⠀⠀⠈⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠸⣄⠀⠀⢀⣾⣷⣻⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⡏⣿⣿⣿⣿⣷⣄⠀⠀⡌⠀⠀⠈⠄⣀⠀⠀⠀⠀⠀⣠⡾⠀⠀⠸⡄⣠⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣷⣤⣇⠀⠀⠀⣢⠭⠤⣀⣀⣀⡠⠽⠧⡀⠉⢠⣿⣯⡹⣷⣻⣿⢸⣿⣿⣿⡿⠁⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡟⢿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⢳⠶⣶⣤⣤⣴⣶⠶⡶⠃⠀⢸⣿⣯⢻⣽⣿⣿⣼⣿⣿⠏⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢻⡿⣷⢹⣿⣿⣿⣿⢸⣿⣿⣧⡀⠀⠀⠀⠀⠙⢿⣿⡿⠟⠁⠀⠀⣀⣼⣝⢿⣧⣿⣿⣿⢿⡿⠃⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣧⡠⠚⠁⠙⣇⣻⣿⣿⣿⣼⣿⣿⣿⣿⣦⣀⣀⡀⢀⣀⣠⣦⣀⣠⠔⡊⢹⣿⣿⣧⣻⣿⢿⣿⠼⠁⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⠓⡄⠀⠀⠙⢿⣿⣿⣷⣋⣿⣿⣿⣿⣿⣿⡍⠫⣹⠿⠿⠿⠛⠙⠜⠀⣼⣿⣿⣿⣿⣿⠻⠀⠀⠀⡐⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢻⢸⠁⠀⠀⠀⠀⠹⢿⣿⣿⡜⣿⣏⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⣟⣿⣿⣿⠋⠀⠀⠀⡸⢡⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢻⣼⠀⠀⡀⠀⠀⠀⠀⠈⠉⠻⣿⣿⣿⣿⣿⣿⣷⣦⣄⣀⣤⣤⣴⣾⣿⣿⣼⣾⣿⡟⠀⠀⠀⢸⡃⠁⠀⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣯⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠊⠀⠀⠀⠀⢰⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠸⣆⠀⠀⠀⠀⢀⣀⣸⣿⣿⣿⣿⣿⡼⡟⣿⣿⣽⣿⡇⣿⣿⣿⣿⠛⠃⠀⠀⡎⠀⠀⠀⠀⠀⢰⣼⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣦⡀⠹⣧⠀⠀⣀⣀⣉⣙⣻⣿⣿⣿⣿⣷⣽⣿⡿⣿⣿⣷⢹⣿⣧⡇⢠⠴⠲⡄⡇⢀⠔⢆⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡷⡄⢹⡇⠀⠀⠀⠀⠈⣹⣿⣿⡿⠛⠛⠻⢿⣿⣮⣿⣿⣷⣝⢿⢧⣯⠀⢠⡇⣹⢾⠀⢸⠴⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣹⣿⣤⠖⠛⠻⢶⡿⠋⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣯⣿⡞⠀⠙⣆⣸⠛⠉⠀⠳⠾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠛⣡⡞⠁⠀⠀⠐⠉⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠈⡿⣿⣿⣆⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠀⢸⡟⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠇⠀⢀⡀⠀⠀⠀⠀⡇⠸⡇⠻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡿⠒⢪⣧⢀⣠⢄⠀⣇⠀⡠⡶⢦⠀⢸⡞⠈⠹⡄⠀⠀⢠⡇⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢀⣾⣾⡏⢃⢸⣇⠸⣶⠁⡇⣼⣄⣸⣧⡀⣼⣷⣦⡴⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣼⠉⠙⠻⡌⢸⣿⡤⠞⢇⡇⡏⠉⠉⠙⣷⠏⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢮⡇⠀⠀⠈⠓⠃⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

'''+Colour.reset)
        input("The lion is too fast. It catches up to you in no time.")
        goto animaldeath
    if lion == 'pet':
        label liontake
        clear()
        print("You successfully befriended the lion before it ate you.")
        print("well done.")
        print("Sadly, you cannot ride the lion since it is in too poor of a condition, however")
        print("It gives you a key that it was guarding and small gun with one bullet.")
        input(r'''
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠜⠋⠠⢈⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠒⠉⠀⣀⡥⠚⠉⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠊⠁⠀⣠⠴⠋⠁⢀⡤⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠔⠋⠀⢀⣠⠖⠋⠀⣀⡤⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⢿⡉⠀⣀⡤⠞⠉⢄⣨⠴⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣠⣴⡾⠟⢉⡬⢧⡳⡎⠁⢐⡠⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠖⠠⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⡏⢿⣯⡤⠞⠉⠄⣂⡷⡙⣞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢱⠂⠄⠀⠉⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢾⣿⠏⡇⠈⢷⣷⢈⣰⠾⠁⣰⠿⠹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠀⣰⣀⠀⠰⣀⡀⠈⠱⠆⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⣿⠣⠁⠈⢿⣻⣠⠔⠋⣡⣴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠤⣠⠓⡌⠀⢸⠄⠀⠉⠒⠤⣀⣉⠒⠠⡤⠂⣉⠤⢉⠒⡄
⠀⣞⠁⠀⣀⠀⠀⢉⣠⣶⠟⠓⢞⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠒⠉⠀⠀⠀⠀⠀⠀⠈⠑⢢⠁⡎  ⠀⠀⠀⢱⠸
⠰⣾⢷⣤⣿⡷⢞⣿⢾⡛⢷⣶⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢠⠪⠉⣚⠗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⡳⣄⣀ ⣠⠎⡸
⠀⢿⣿⣮⣷⣾⣿⡏⠓⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡓⢥⣠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠈⠑⠠⠤⠐⠊⠀
⠀⠸⣿⣽⡷⣿⣻⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣿⣿⣽⢿⣽⢿⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣿⣿⢾⣟⣯⣿⣻⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣿⣿⣻⣯⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ''' + Colour.reset)
        gunandkey = input(Colour.reset+"Do you take these? yes/no/only the gun and bullet/only the key ")
        if gunandkey == 'yes':
            input(Colour.reset+"Congrats! You now have one shot, and a key")
            gun = True;
            key = True;
            bullet = True;
            goto gobackfour
        if gunandkey == 'no':
            print(Colour.reset+"Really? Better to be cautious I guess...")
            input("")
            input("Or not. The lion gets angry and eats you")
            goto animaldeath
        if gunandkey == 'only the gun and bullet':
            print(Colour.reset+"The lion gets mad and eats you")
            input("Next time, just take everything")
            goto animaldeath
        if gunandkey == 'only the key':
            print(Colour.reset+"The lion gets mad and eats you")
            input("Next time, just take everything")
            goto animaldeath
        else:
            input("That is not a valid answer, please try again")
            goto liontake
            
    else:
        input(Colour.reset+"That is not a valid answer, please try again")
        goto lionchoice
        
if three == 'long':
    label portalchoice
    clear()
    print(Colour.orange+r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣷⡄⣠⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣴⣾⣶⣨⣿⣿⣿⣿⣹⣾⡕⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⣿⣿⢿⣯⠻⢛⣼⡿⣿⣿⢹⡷⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣾⣟⣿⣿⣶⡦⢠⡄⣵⣾⣿⣿⣿⣿⣿⣿⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢤⢹⣿⡏⢀⣽⣞⢿⣷⡶⢌⠰⣶⣿⡿⣿⣯⡀⣹⣿⠂⡽⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣬⣄⣙⢻⡌⢿⣿⣷⣝⣿⢦⣾⣟⣫⣿⣿⠟⣹⠏⣀⣼⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⡿⢛⣫⣭⣛⡻⣿⡮⢽⣿⠇⣼⣻⢻⣏⢩⣐⠻⢟⣫⣭⣛⠙⢿⣷⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢲⣦⣿⣿⣛⠷⣿⣟⣉⣛⣿⣶⣿⣿⣿⠤⠹⠋⠰⣿⣿⣶⣾⣿⣻⢿⣿⡃⠾⣻⣿⣾⣷⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣛⣛⡻⣿⣽⣿⣿⣿⣿⣿⡿⠿⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠻⠿⣿⣿⣿⣿⣿⣿⡿⢛⣛⡻⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣩⣤⡄⣸⣿⣿⣿⠿⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠩⣿⣾⣿⡿⠃⣠⣤⣉⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠿⢿⣿⣿⣦⡀⣹⢩⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⡍⠀⢀⣾⣿⣿⡿⠿⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⢿⣿⡟⢁⣿⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⡀⠈⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⡔⢦⠀⢠⣶⣦⡴⠞⣫⣴⣿⠟⢇⣾⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣄⠛⠻⣿⣯⣛⠷⣦⣤⣦⡄⠀⠰⢦⠄⠀⠀⠀
⠀⠀⣠⣴⣿⣦⣥⣈⣦⣤⣴⣾⣿⡟⢇⣴⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣄⡘⢿⣿⣷⣦⣤⣚⣥⣤⣴⣿⣶⣄⠀⠀
⠀⢸⣿⣿⢿⣽⣿⣿⢠⣻⣿⣯⣥⠴⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠷⢮⡽⣿⣿⠈⣿⣿⣽⡿⣿⣿⡇⠀
⠀⠸⣿⣿⣆⢿⣿⡟⢸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⣽⣿⣯⣴⣿⣿⠃⠀
⠐⠾⠛⠙⢿⣟⣿⡇⡟⣿⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡟⡇⢸⣏⣸⡿⠋⠛⠷⠂
⠀⠀⠀⣆⣾⠋⣽⠀⣿⣿⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣷⡇⠈⣏⠹⣷⣶⡄⠀⠀
⠀⠀⠀⠛⠰⠚⣿⠀⣿⣿⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣿⡇⠀⣟⠳⠾⠛⠁⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠐⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣿⡇⠀⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠀⣿⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣿⡇⠀⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠀⣿⣿⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⣿⡇⢠⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢹⡇⣯⣿⢲⠀⠀⠀⠀⠀⠀⠀⠀        ⠀⠀'''+Colour.purple+'''⠀⠀⠀⠀⠀portal⠀  ⠀⠀'''+Colour.orange+'''⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⢸⡟⡇⣿⡇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⡇⢸⣿⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠸⣷⠸⣿⡟⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣸⣿⠀⣿⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣿⠀⣽⣷⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⢀⠁⣿⡏⣴⡿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢹⣆⢹⣿⡖⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⢇⡸⢸⣿⠳⣼⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⡈⣿⣷⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣁⢸⠇⣿⡟⢤⣿⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣧⢹⣿⡞⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡾⣸⣿⠇⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⡄⢿⣿⡴⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⢣⣿⡏⢰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⠌⢿⣷⣳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⢃⣾⡿⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣧⠜⣿⣷⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢠⣠⢏⣾⣿⢡⣾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣧⠸⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣣⢟⣾⡿⢃⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣧⡿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⢡⣿⡿⢡⣾⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣼⣿⣿⣟⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢞⣵⣿⠟⣵⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣽⣿⣷⣵⣦⡀⠀⠀⠄⡄⡀⢰⢠⠀⠀⠀⠀⠀⢀⣀⢀⣠⣤⡿⣡⣾⡿⢋⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣟⣻⣿⣷⣿⣮⣃⣶⡁⣰⣿⣺⣿⣿⢷⣄⡁⣩⣶⣻⡟⣫⣾⡿⢋⣴⣿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣷⣭⢿⣿⣿⣿⣜⠿⣯⣭⡻⠻⠛⢛⣭⣿⠿⣺⣿⣿⠿⢋⣴⣿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠋⠛⣷⣮⣨⣙⣿⣷⣾⣿⣿⡡⣶⣿⣿⣵⣾⣟⣩⣵⣿⣿⠛⠛⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣿⢿⣶⣿⣿⣿⣦⣼⣿⣿⣿⣿⢿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣄⣧⡀⣿⣿⣷⣿⣿⣿⢀⣽⣸⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢿⣿⢃⣿⣿⡿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.reset)
    print("The silhouette was that of a glowing portal")
    print("This could go anywhere")
    portal = input("Do you go through? yes/no ")
    if portal == 'yes':
        print ("The portal lead to the start of the maze")
        print("Brit is starting to get ahead, be quick!")
        goto gobackone
    if portal == 'no':
        clear()
        label onethree
        print("You step tentatively around the portal, avoiding it...")
        print(Colour.green+r'''
                    ⣀⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠉⠀⠀⠈⠙⠆⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠶⠒⠶⢌⠀⠀⠀⠀⠀⠀⠊⠉⠉⠉⠛⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠁⠀⠀⠀⠀⢀⡤⠤⣤⡀⠀⠀⠀⠀⠀⠀⠈⣿⠀⣤⣄⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠁⠀⠀⠈⣻⠀⠀⠀⠀⠀⠀⢀⠟⠀⠀⠀⠙⣦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⢸⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⢠⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠈⠙⠳⣦⡀⠀
⠀⠀⠀⠀⠀⠀⢀⣀⣀⣹⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣆⠀⠀⠀⠀⠀⠈⢻⡄
⠀⠀⠒⠒⠚⠉⠉⠉⠉⠁⠀⠀⠈⠳⠦⣤⠞⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⣿
⠀ ⠀⠀⠀⠀⠠⠤⠴⠶⠶⠶⠆⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠀⠀⠀⠀⠀⠀⠀⣿
⠒⠢⠤⠤⣀⣀⣀⣀⣀⠀⠀⠀⠀⣠⠤⠿⣄⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢀⠀⠀⢀⣼⠃
⠀⠀⠀⠀⠀⠀⠀⠉⠉⡫⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠈⣦⠐⠋⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡁⠀⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡏⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠷⣄⣀⠀⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠛⠁⠀⠀⠀⠀⢀⣿⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡾⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⡌⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠳⢦⣤⣀⠤⠙⣦⡀⠀⠀⠀⠀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠒⠚⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        '''+Colour.reset)
        print("")
        print("Gas starts to seep out. In a panicked frenzy, you rush away from it")
        print("with the intent of turning back, only to find that the portal is also")
        print("pouring with gas. In no time at all, everything starts to go dark.")
        print("")
        print("In a last-ditch attempt to not be drugged, should you try to shoot at the open on the portal and block the gas?")
        portalgass = input("The gas could be flammable, but you could die whether or not it works. shoot/not shoot/ move then shoot ")
        if portalgass == 'shoot':
            print("The gas was flammable. Very flammable. Also, you missed")
            input("The gas explodes in an instant")
            goto fireorbombdeath
        if portalgass == 'not shoot':
            print("Everything goes fully dark and you pass out.")
            input("At least you're not dead (yet)")
            goto gassed
        if portalgass == 'move then shoot':
            label portalkeything
            print("That gas was flammable, but you were only slightly burnt. You")
            input("stopped it in time, well done")
            print("A key dropped from the ceiling")
            portalkey = input("Do you take the key? yes/no ")
            if portalkey == 'yes':
                input("Congrats you got a key")
                key = True;
                goto gobackfour
                
            if portalkey == 'no':
                input("Ok... It wasn't trapped but it's too late now")
                goto gobackfour
            
            else:
                input("That's not a valid answer, please try again")
                goto portalkeything
                
            goto gobackfour
        else:
            input("That is not a valid answer, please try again")
            goto onethree
    
    else:
        input("That is not a valid answer, please try again")
        goto portalchoice

        
else:
    input("That is not a valid answer, please try again")
    goto gobackthree

#Scene4
label gobackfour
clear()
print(Colour.orange+r'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⡉⣯⣷⣶⣶⣒⠾⢿⣉⣉⣩⠯⠿⣍⣛⠋⠹⠶⠶⢶⣦⣤⢤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣴⣶⣟⠻⠻⠿⣿⣿⣬⡾⠗⠂⠀⠀⠀⠀⠀⢠⠀⠈⠉⠉⠉⠉⠀⠙⠒⠒⠛⠻⠿⠷⠖⠒⣶⣦⣤⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢶⡟⠛⠋⣙⣿⠛⠿⣯⠍⠀⠀⠀⠀⠀⢀⢤⣀⠀⠀⠀⣀⣀⣺⣾⣦⣤⣤⣾⣤⣤⣤⣼⣆⣀⣀⣀⠀⠀⢠⡔⠀⠀⠀⠉⠉⠈⠉⠉⠉⠹⣛⠉⠛⠻⣶⡆⠀⠀⠀
⢠⣴⣟⡋⠀⠀⠘⠓⠒⠂⠠⢤⠀⣀⣀⣠⣤⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣧⣤⣤⣄⣀⡀⣀⡄⠀⠀⠀⠀⢠⣭⣽⣷⡄⠀⠀
⠀⠉⠙⢲⡀⠀⣀⠴⠒⢈⠉⡁⠀⠀⠀⢉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠀⠀⠀⠀⠀⠀⠀⠐⣻⣷⣄⠀
⠀⠀⠀⠻⢗⡀⠈⠙⣄⡈⠉⠃⠀⠀⠈⠉⠉⠉⠉⢩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⢀⣶⣏⡇⣢⣴⣶⢿⢿⡿⡇
⠀⠀⠀⠀⠀⠹⣦⠄⠀⠈⠱⠤⠀⠀⠀⠀⠀⣀⠀⠸⣿⠿⣿⠟⠿⣿⡿⣿⡿⡿⠿⢿⡿⠿⠹⢿⡿⡿⣿⢿⢿⠿⢿⡿⡿⠉⠉⠉⠀⠉⠛⠃⠹⢿⣿⣿⣿⣿⣧⣈⣇⣳⣷
⠀⠀⠀⠀⠀⠀⠈⠉⣳⡆⠀⠀⠀⠀⠀⠀⠀⠚⠁⣠⣴⣖⢢⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠆⣐⣡⠟⠙⢋⣩⠞⠁
⠀⠀⠀⠀⠀⠀⠀⠘⠻⠭⠤⠤⠤⠤⠄⠀⠀⠀⠘⣿⣿⣯⣤⣿⣿⠛⡅⣤⠄⠀⠀⠀⠤⢠⡄⠀⠀⡀⢀⠀⠀⠀⠀⠀⢀⣠⠤⠤⠄⠀⠀⠐⠒⠚⠋⠀⣀⣠⠞⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⣭⣹⣿⣿⣿⣶⣼⠾⡀⠀⠀⠀⠀⠙⠛⠷⠽⠯⠭⠥⠤⠤⠤⠜⠃⠀⠀⠀⠀⣀⣠⠤⠴⠒⠋⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠐⠒⠒⠒⠲⠦⠶⠦⠤⢀⣀⣀⠀⠠⠤⠤⠤⠴⠖⠒⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.reset)
print(Colour.reset+"You walk forward for a bit, before  coming to a fork.")
print("You can go right, or you can go straight. If you go straight, then you'd have to turn right")
print("and if you turn right, there seems to be a pit or something and a hissing noise")
four = input("Where do you go? straight/right ")
if four == 'straight':
    clear()
    print("You go straight, then right and suddenly, you are faced with an arrow")
    print("flying too fast for you to see")
    print("As it pierces you, you try to no avail to pull it out")
    input(r'''
    >>>>>>>_____________________\`-._
    >>>>>>>                                          /.-'
    ''')
    goto shot
if four == 'right':
    label scorpionchoice
    clear()
    print(Colour.red+r'''
    
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣴⣶⣶⣶⣶⣶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⢰⣿⣿⣿⣿⣿⣿⣿⣿⠿⢃⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⡈⠻⢿⣿⠿⣿⣿⣿⠇⣴⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣶⡆⠀⠀⠀⠀⠉⠀⢿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⠿⠃⠀⠀⠀⠀⠀⠀⠀⠙⢛⣉⣍⡛⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⣄⣉⠛⣛⡉⠁⠀⠀⣀⣤⣶⣦⣤⣀⣶⠄⣿⣿⣿⣿⣾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⠇⠀⠀⣸⠛⠉⠉⠙⣿⣿⣿⡆⢿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⠟⠀⠀⠀⠁⠀⠀⠀⠀⢸⣿⣿⣿⣮⡻⢿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⢋⣩⣭⣉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⣠⣶⡾⣿⣟⠛⣋⠁⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠛⣩⣤⣶⣤⣄⡀⠀⢀⣼⣿⠟⠁⣩⣿⣿⢿⣿⡿⣽⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⢧⣾⣿⣿⣿⣿⣿⣿⡄⠻⠿⠁⢠⣾⣿⠟⣡⣾⣿⠛⢮⡛⢿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣶⢳⣾⣶⡄⠀⠈⢿⢸⣿⣿⣿⡟⣩⣶⣿⣿⣿⣷⣄⢿⡿⢫⣾⣿⣿⠏⣠⣼⡿⠾⣻⣽⣤⣶⡶⣦⣄⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣤⣴⣾⡿⠃⠈⠛⢿⣦⣀⣈⠈⢿⣿⡏⣼⣿⣿⣿⣿⣿⠿⣛⣂⣀⡛⢿⠟⣡⣾⣿⡿⢁⣾⣿⣿⣿⣿⡷⢹⣿⣿⣿⣿⣿⣿⡷⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣾⣼⡿⠋⠉⠀⠀⠀⠀⠀⠹⢿⣼⢧⡈⠻⠀⣿⣿⣿⣿⢋⣴⣿⣿⣿⣿⣿⣷⣄⢿⡟⠋⠀⣾⣿⣿⡿⠉⠩⠷⠿⣿⣿⣿⣿⡿⣫⣶⣷⣄⠀⠀⠀⠀
⠀⠀⠀⠀⣼⣿⠋⠀⢠⣶⣶⣶⣾⣿⣿⣿⣿⣷⡄⣶⣶⣆⣿⣿⣿⢯⣿⣿⣿⣿⣿⣿⣿⣿⣿⡎⠁⣀⣤⣶⣜⢿⠁⢸⣷⡄⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣧⣄⠀⠀
⠀⠀⠀⠀⣿⡇⠀⢰⣯⣿⠉⠉⢩⣍⣉⣉⣭⣭⣥⣭⣍⣻⣥⣭⣭⣜⠿⣿⣿⣿⣿⣿⣿⣿⠿⢓⠸⢿⣿⣿⡟⠀⠀⠀⢻⣧⣀⡀⠀⠈⠐⣿⣿⣿⣿⣿⣿⣿⣿⡄
⠀⠀⢀⣼⠿⠁⠀⢸⣿⡇⠀⢸⣿⠿⠟⠿⠿⠿⠿⢿⣿⣟⠛⠛⣻⣥⣴⣶⣄⠉⠛⠿⠟⢱⣿⣿⣿⡄⣀⠈⠀⠀⠀⠀⠈⠉⠛⠁⠀⠀⠀⣹⣿⣿⣿⣿⣿⣿⣿⡇
⣠⡴⠟⠛⠁⠀⠀⢸⣿⡇⠀⣿⣿⠀⠀⢠⣼⣻⣿⣿⣿⣿⣿⣿⠾⣿⠿⠛⠁⣀⣴⣿⣷⠈⣛⠻⠟⠁⣿⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃
⠀⠀⠀⠀⠀⠀⠀⠀⢿⡇⠀⢿⣿⡇⢀⣾⣿⡃⠉⠙⠛⠋⠁⠀⠀⠀⠀⠀⣟⡛⠻⣿⡁⠀⣿⣇⠀⠀⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⠟⠿⠁⠀⢤⣤⣶⠆
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠇⢸⣿⡇⠸⣿⣿⡇⠀⠀⠀⣤⠾⠻⣿⣿⣶⣿⣿⣿⣦⠻⠃⠀⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠇⠀⠀⠀⢠⣼⣿⡿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠃⢸⣶⠁⢐⡿⠏⠀⠀⠀⢠⣶⣿⣷⠘⠿⠿⠿⠿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠋⠀⠀⠀⠀⣀⣼⣿⡿⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠜⠉⠀⠀⠀⢻⣧⠘⣿⣦⠀⠀⢠⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⢀⣿⣿⠟⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⡏⠀⠘⣿⣧⠀⣾⣿⣿⣿⣿⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠛⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠟⠀⠀⠀⣼⣿⠆⣿⣿⣿⣿⣿⢿⣿⣥⣴⣶⣶⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠋⠀⢹⣿⣿⡟⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣠⣤⣤⣤⣤⣶⣦⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠈⣿⣿⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⠎⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣋⡉⠉⠛⠉⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⣿⣿⣿⠟⠉⢼⣿⣿⣦⣆⢀⣠⣴⣦⣤⡴⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠙⠛⠿⠿⠿⠿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

    '''+Colour.reset)
    print("A pit of scorpions stand in your way.")
    print("Above the pit, there is a small button. You could shoot that with your only bullet")
    print("There is also a bucket, but you can't see what it is. If you shoot the rope holding it")
    print("anything in it would fall out. Finally, you could try and take your chances and run across a thin")
    print("wooden plank balanced across the pit.")
    scorpion = input("Do you: shoot the button, shoot the bucket, or just try to run? button/bucket/run ")
    print("")
    if scorpion == 'button':
        print("Your bullet goes through the button and does next to nothing.")
        print("The scorpions have now had the time to climb out.")
        input("They sting you with fatal venom.")
        bullet = False;
        goto death
    if scorpion == 'bucket':
        print("Inside the bucket was sand. It falls to the ground and allows the scorpions to climb out")
        print("with ease.")
        input("They sting you with fatal venom.")
        bullet = False;
        goto death
    if scorpion == 'run':
        label scorpionrun
        clear()
        print(Colour.orange+'''
⠀⢀⣀⣠⠤⠔⢶⠉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣼⣏⢱⠈⠣⡀⠀⠱⡀⠈⠣⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠙⣟⢷⣱⢄⠈⠗⢤⡈⠢⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠘⠾⣝⢷⡉⠐⢄⠈⠒⢌⠲⢤⠈⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠻⣿⢲⣄⠙⢦⠀⢣⡳⡀⠀⢫⠓⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠳⣌⠳⣄⠱⡀⢳⠈⠶⡀⠑⣈⠓⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠓⢌⣱⣧⣨⠀⠀⠙⣆⠈⠑⢆⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢾⣷⡀⠘⢆⠈⢗⢤⡈⠢⡈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣝⢦⠈⡆⠈⢿⣯⡢⡈⠢⣌⠳⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡙⣽⡄⣠⡻⢿⣿⡄⣀⣈⡛⠳⢄⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣯⣿⣗⢛⢆⡙⠣⡘⢇⡀⠑⠢⣈⠲⢄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡃⢿⢦⡈⠲⠾⣄⠈⠂⠀⠈⣳⡀⠱⣄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⡙⠦⣀⠀⠈⠓⡄⠀⣠⠼⡊⡗
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣾⠳⣤⡤⡗⢽⡷⠒⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⡾⠒⠋⠁⠀⠀⠀⠀
        '''+Colour.reset)
        print("You barely make it in time. Once you make it across, you see the scorpions are using")
        print("the wood to climb out.")
        subscorpion = input("Do you shoot the plank down, or just run? shoot/run ")
        if subscorpion == 'shoot':
            print("")
            print("Good thinking. The scorpions are now trapped, and you can go safely.")
            input("You did lose your bullet though")
            bullet = False;
            goto gobackfive
        if subscorpion == 'run':
            print("")
            print("Why? Just why?")
            input("The scorpions catch up to you and sting you fast. Their venom is fatal.")
            goto death
        else:
            input("That is not a valid answer, please try again")
            goto scorpionrun
    else:
        input("That is not a valid answer, please try again")
        goto scorpionchoice
else:
    input("That is not a valid answer, please try again")
    goto gobackfour

#Scene5
label gobackfive
clear()
print(r'''
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⠀⣠⠖⠩⢴⣦⣴⣤⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⡠⢒⣩⠴⠶⣷⣶⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⣰⠃⣬⣙⣒⠶⢯⣭⣝⣛⡾⢿⣿⠆⣀⢄⠒⠠⡀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⡾⠑⠿⢯⣭⣛⣲⠶⢯⣭⣝⣒⡺⢋⠤⠀⠐⠂⡀⠀⠀⠀
'''+Colour.red+'''⠀⠀⢠⡟⠰⢦⣭⣙⡛⠶⢶⣬⣍⣛⠛⢠⢞⠁⣡⣶⣶⡈⢆'''+Colour.blue+'''⠀⠀⠀⠀⠸⡇⠉⠛⠶⢦⣭⣙⡛⠷⣶⣯⠍⡴⠣⢀⣴⣿⣷⠸⡄⠀⠀
'''+Colour.red+'''⠀⠀⠈⡗⠶⣤⣄⣬⣝⠛⠶⣦⣭⣙⢁⢏⠆⣼⣿⡿⠿⠃⣸⠀'''+Colour.blue+'''⠀⠀⠀⢰⡦⠭⣐⠲⢶⣦⠉⠙⠻⠶⠆⣼⢡⢁⣾⣿⠿⠟⢀⡇⠀⠀
'''+Colour.red+'''⠀⠀⠀⣿⠠⣤⡉⡟⢿⠰⣦⣤⣈⡁⣼⢸⢀⣉⣥⡴⠮⠁⡏⠀⠀'''+Colour.blue+'''⠀⠀⠈⡇⢣⣤⡉⡗⢦⠨⣑⡲⠤⣐⡏⡆⠨⡥⢒⡠⠟⠛⠇⠀⠀
'''+Colour.red+'''⠀⠀⢸⡀⣯⣥⣑⠼⠃⢰⣭⠙⠻⣿⡹⠛⠉⢁⣀⡤⠠⠃⠀⠀'''+Colour.blue+'''⠀⠀⠀⣿⢸⣯⣧⡑⠾⠁⣤⡍⠓⢲⡅⡢⠚⠀⢁⣠⡄⠸⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⠸⣇⠙⣿⣿⣿⣷⣬⣙⡻⠂⢿⣿⠐⠞⣋⣥⠄⢸⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⢻⡀⠿⣿⣿⣿⣷⣭⣛⣿⠘⣷⡇⠰⠟⣋⡥⠀⡆⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⠀⠙⠓⠦⣍⣛⠿⢿⣿⣿⣷⢸⣿⠘⣛⣩⡴⢂⡆⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠈⠙⠲⢬⣙⡻⠿⣿⣿⣿⡆⣿⣿⢸⣏⣥⠖⢠⠀⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠶⣤⣝⡛⢸⣿⠈⣉⣥⠶⠛⠁⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠈⠉⠓⠶⣬⣙⡃⢿⣿⠈⣉⣤⠶⠛⠀⠀⠀⠀
'''+Colour.red+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.blue+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    '''+Colour.reset)
print("Walking a bit more, you come across two chests. One is bright red, and the other is")
print("a deep blue.")
if key == True:
    print("You survey your inventory: one gun, but no bullets, and a single key, in so bad condition it's")
    print("about to fall apart.")
    label choosechest
    chestkey = input("Should you try to open one of the chests with the key? If you do, the key will surely break. yes/no ")
    if chestkey == 'yes':
        whichchest = input("Which chest do you try? You can only try one. red/blue ")
        label memorisethemap
        if whichchest == 'red':
            clear()
            print(r'''
        ⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡴⠶⠶⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⠛⠉⠛⢿⡿⠿⠶⠶⢤⣤⣠⣠⡤⠤⠶⠚⠉⠀⠀⠀⠀⠀⠉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⢀⣀⣀⣤⣶⣄⣀⡀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⣸⠃⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⢀⣴⡞⣿⠛⢻⣍⣿⣯⡿⢿⡷⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⣿⠀⢀⢀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣷⡀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⠀⠀⣠⣴⠾⣿⣿⡷⠿⠛⠙⢹⣏⣉⣉⡿⠁⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⣿⠀⠀⢸⢿⡟⠛⠛⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠈⢧⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⣠⡾⠻⣫⣾⠟⠉⠀⠀⠀⣘⣛⣿⡿⠟⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠘⣧⠀⠘⠀⡇⠀⠀⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡆⠀⠀⠀'''+Colour.grey+'''⠀⠀⢀⡴⠛⣧⡾⠛⠋⠀⠀⠀⣶⣚⣿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠙⠷⣤⣴⣧⠴⠶⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀'''+Colour.grey+'''⠀⠀⠀⢠⣿⢻⣾⠏⠀⠀⣀⣠⣾⠿⠷⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄'''+Colour.grey+'''⠸⡛⠓⢿⣙⡟⠁⠀⢤⣄⣴⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⡇⠀'''+Colour.grey+'''⣯⣽⣾⣿⣵⣖⡒⠚⠋⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇'''+Colour.grey+'''⠈⣇⢸⡿⠋⣹⡇⣹⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣇'''+Colour.grey+'''⠀⣸⣿⡿⠓⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯'''+Colour.grey+'''⣾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⢛⣿⠿⠂⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⠀⠀⢀⣤⣾⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.reset+'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡏⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.grey+'''⠀⠀⠀⠀⠀⠈⠉⠁'''+Colour.reset+'''⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⣿⡥⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⡄⠀⠀⣀⡴⠖⠛⢦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⢠⡟⠉⠛⠻⣷⢦⣤⣀⡀⠀⠀⠀⠀⠀⢀⣀⣠⣿⠷⠛⠁⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣿⠀⠐⣷⣀⠈⢧⡀⠉⠉⠓⠒⠒⠛⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣿⠀⠀⢹⡟⠛⠛⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⢹⡄⠀⢀⡇⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠳⣄⣼⣁⣀⣀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠉⠉⠁⠁⡝⠀⠀⢀⣠⣤⠤⠶⠒⠒⠒⠒⠶⠤⣤⣀⣀⣀⣠⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⣼⣧⡴⠞⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣄⣀⣠⠾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ''')
            print("Inside the chest, you find a scroll and a pen.")
            print("It is a map of the maze. You use the pen to map out the route.")
            print("It is also in bad condition and crumbling, like everything else in the maze.")
            mapmemorisation = input("Do you memorise it now, or just take your chances? memorise/chances ")
            if mapmemorisation == 'memorise':
                input("you quickly memorise the route. From now on, you will take the right route")
                route = True;
                goto gobacksix
            if mapmemorisation == 'chances':
                label mapmemo
                mapmem = input("Are you sure? It's about to crumble. memorise/take chances ")
                if mapmem == 'memorise':
                    input("You memorise it quickly before it crumbles")
                    route = True;
                    goto gobacksix
                if mapmem == 'take chances':
                    input("It crumbles in your hands. You have no key and no map. Great job.")
                    goto gobacksix
                else:
                    input("That is not a valid answer, please try again")
                    goto mapmemo
            else:
                input("That is not a valid answer, please try again")
                goto memorisethemap
                
        
        if whichchest == 'blue':
            label dontpullsword
            clear()
            print(Colour.grey+r'''
                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                          ⠀⠀  ⠀⠀⣠⡔⠓⠺⢦⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⠁⠀⠀⠀⠀⢶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣻⡇⠀⠀⠀⠀⠐⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣵⡄⠀⠀⠀⢀⣹⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⠈⠑⠖⣦⣾⠇⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⢠⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⢠⡾⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠋⠉⠶⣀⣰⡶⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠶⠶⡄⠈⡙⠛⠛⠶⠶⠶⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⣼⠗⠷⣤⣀⣀⣀⣿⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⠀⣷⠟⠉⣻⠻⠰⡄⠉⠹⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⢀⡀⠀⠀⣰⠋⠀⠀⠹⠦⠾⠏⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠋⠀⠀⠈⠋⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠇⠀⠀⢴⠆⠀⣰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠐⠶⠶⠶⠶⠶⠶⠀⠀⠀⣰⠋⠀⠀⣀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⡴⠟⠛⠻⠷⠶⠶⠾⡷⠂⠀⠀⠀⠀⠸⠷⠿⣾⡏⠀⠀⠀⠉⠀⣰⣯⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠶⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠒⢠⣠⣤⣤⣿⣿⣿⣿⡆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⡸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠛⠛⣛⡏⠐⠿⡀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀⢿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣾⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣶⣿⣶⠐⢶⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣬⠟⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⣿⣿⠃⠻⢩⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠾⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠄⠀⠀⠁⢰⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣷⡆⠀⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠙⠁⢀⢠⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⡄⠀⠀⠀⢠⡆⠴⠰⣄⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⠦⠀⠈⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠁⠀⠀⠀⠀⠀⢀⠀⡀⠀⠀⠀⣼⠁⠀⠀⣦⠿⠁⠾⠆⠀⣼⠛⢠⣶⣶⡆⠀⠀⠀⢀⣾⠃⠀⠀⠀⢸⡄⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣼⠃⠀⠀⠀⠀⠀⠈⠘⠟⠿⠎⠙⠃⠀⠀⠀⢽⢀⡄⠀⠀⣼⠃⠀⠀⠈⢹⠁⠀⠀⠀⢹⡟⠀⠀⠀⠀⢺⠏⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠸⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡈⠁⠀⣴⠇⠀⠀⠀⠀⣼⡄⠀⠀⠀⢘⣷⠀⠀⠀⠀⢼⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣆⠀⠀⣰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⠀⠀⠀⠸⢆⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠛⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠻⠻⣯⢀⣀⣀⣀⣀⡀⠘⠀⣰⠲⢦⠼⠷⠒⠺⠃⠛⠀⠈⠳⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢹⣤⣄⠀⠀⠀⠀⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠛⠛⠉⠙⠉⠋⠀⣰⠏⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠁⣆⠀⠀⠀⠉⢰⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣠⣆⢺⡆⠀⠀⠀⠀⠀⠀⠀⡼⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠘⠓⢂⡀⠀⠀⢓⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠺⢿⡏⠛⠓⠀⠀⠀⠀⢠⣀⡸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠟⣂⣤⠉⠺⢂⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠈⠁⠀⠀⠀⠀⠠⣤⡟⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠷⣠⣨⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠈⠳⠗⢇⡀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠻⠟⣦⡦⢠⣄⣀⣀⣀⣀⣤⢤⠜⠗⠞⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            '''+Colour.reset)
            print("There is a small sword stuck in a skull.")
            skullsword = input("Do you pull it out? yes/no ")
            if skullsword == 'yes':
                print("It was trapped. The handle was heat-sensitive. Be more careful next time. An arrow flies at you")
                input(Colour.cyan+r'''
    >>>>>>>_____________________\`-._
    >>>>>>>                                           /.-'
        
            '''+Colour.reset)
                goto shot
            if skullsword == 'no':
                label justdontpull
                print("Your being careful. Nice.")
                skullswordtwo = input("Do you try to find a different way to pull it out? yes/no ")
                if skullswordtwo == 'yes':
                    label theresabutton
                    print("After a few seconds of careful searching, you find a small button")
                    skullswordthree = input("Do you push it? yes/no ")
                    if skullswordthree == 'yes':
                        input("The skull splits in half and the sword falls to the floor. You obtain a fancy sword")
                        sword = True;
                        goto gobacksix
                    if skullswordthree == 'no':
                        input("You leave without the sword")
                        goto gobacksix
                    else:
                        input("That is not a valid answer, please try again")
                        goto theresabutton
                if skullswordtwo == 'no':
                    input("You leave without the sword")
                    goto gobacksix
                else:
                    input("That is not a valid answer, please try again")
                    goto justdontpull
            else:
                input("That is not a valid answer, please try again")
                goto dontpullsword
    
        else:
            input("That is not a valid answer, please try again")
            goto choosechest
    

    if chestkey == 'no':
        print("You walk past the chests, preserving the key for later, just in case")
        print("Those chests could've been trapped anyways.")
        goto gobacksix
    
    else:
        input("That is not a valid answer. Please try again.")
        goto gobackfive

if key == False:
    print("You do not have a key, so you can't do anything")
    print("Stepping around the chests, you decide it wasn't worth it anyways")
    print("the chests could've been trapped")
    input("You regret not taking the key earlier")
    
#Scene6
label gobacksix
clear()
print(Colour.grey+r'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⣶⣶⣶⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠶⠶⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠲⠦⢤⣤⣶⣤⣤⣤⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠐⠶⠶⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣠⣴⣿⣃⣠⣤⣭⠟⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣛⣶⣶⣶⣤⣤⠀⠀⠀⠀⠀⠈⠉⠛⡷⠀⣈⣉⣩⣿⣷⡶⠆⠀⠀⠀⠀⠀⠀⣀⣀⣀⣤⣤⣴⡶⠶⣾⣿⣿⣿⣿⠿⠿⠛⠛⠋⠉⠁⢀⣀⣀⣤⣤⣶⣾⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣶⠶⠶⠖⠒⠛⠋⠉⠉⢀⣀⣀⣠⣤⣤⣤⣶⣶⠿⠿⠟⠛⠛⠋⠉⠁⣀⣀⣠⣤⣤⣴⣶⣶⡿⢿⣛⣿⣭⣭⣿⠷⠾⠛⠛⠉⠉⠀⡀⠀⠀⠀⠐⠛⠛⠻⠿⠿⣿⣿⣿⣿⣿⡁⠀⠀⠀⠀⠀⢀⣠⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⠶⣤⣴⣶⠶⠛⣿⡿⠿⠟⠛⠛⠋⢉⣁⣀⣠⣤⣤⣤⣶⣶⢿⣿⣟⣛⣩⣭⠉⣭⡶⠀⣶⡟⠛⠛⠉⠁⢀⣀⣠⣤⣴⣶⣾⣿⣿⣿⠛⠛⠳⠶⢶⣤⣤⣄⣀⣀⠀⠈⠉⠙⠛⠳⠶⠶⢤⣤⣿⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⣤⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⠀⢸⣿⣿⡄⠀⠛⠷⠶⣤⣄⣀⡀⠈⠉⠙⠛⠻⠷⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⢀⣀⣬⣿⠿⠟⠛⠉⠀⣀⣀⣤⣶⣾⣿⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢉⠍⠉⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣷⣄⣿⣿⣧⡄⠀⠀⠀⠀⠈⠉⠙⠛⠶⢦⣤⣀⣀⠀⠀⠉⠙⠛⠿⠿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢠⣶⠾⠛⠛⠉⠀⣀⣠⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⢸⣧⣀⣄⠀⠀⠀⠀⠀⣀⣠⣴⠾⠛⠛⠿⠶⣶⡆⠀⠀⠀⠀⠀⠀⠀
⠀⠈⠙⠛⠿⢿⣿⣄⡀⠀⠀⠀⠀⠀⣀⣀⣠⣤⠼⠿⠟⠛⠀⠀⢀⣀⣠⣤⣬⣿⣿⣿⣿⣿⡇⢀⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⡟⠛⠻⢶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣾⣿⣿⣿⣿⣧⣤⠾⠟⠋⠉⠀⠀⣀⣤⣶⣿⣿⡇⣀⡀⡀⠘⠀⠀⣶
⣤⣄⡀⠀⠀⠀⠈⠉⠛⠻⠶⠶⠞⠛⠋⠉⠉⣀⣀⣤⣤⣴⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣉⡀⠈⠉⠙⠛⠻⠿⢿⣿⣿⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣿⣿⡿⠟⠛⠉⠁⠀⢀⣠⣤⣶⣿⣿⣿⣿⣿⣿⠃⣟⣿⣿⣦⣤⣤⣿
⣾⠿⠛⠓⠂⠀⢀⣀⠀⠀⠀⠀⠀⠐⠲⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠉⠉⠛⠓⠶⣦⣤⣄⡀⠀⠈⠉⠙⠛⠛⠷⣶⣤⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠋⠁⠀⢀⣠⣶⣤⣤⣀⠉⠉⠙⠛⠛⠿⠿⣿⣿⣤⣿⣿⣿⣿⣿⣿⣿
⣀⣤⣤⣶⣶⣿⣿⣿⠓⢶⣤⣄⡀⠀⠀⠀⠀⠉⠙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⢹⡏⠛⠓⠶⣦⣤⣄⡀⠀⠀⠉⠉⠛⠛⠿⢿⣿⣿⡿⠛⠋⠁⠀⠀⣀⣤⣶⣾⣿⣿⣿⣿⣍⠉⠛⠛⠷⠶⣶⣤⣤⣀⡀⠈⠉⠉⠛⠛⠻⠿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⠀⠉⠙⠳⢶⣤⣀⠀⠀⠀⠀⠀⠈⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢀⣠⣾⠟⢹⡟⠿⠶⣦⣤⣀⡀⠀⠈⠀⠀⢀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⠀⠀⠀⠀⠉⠉⣿⣟⣿⣷⡷⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⡀⠉⠙⠳⠶⣤⣀⡀⠀⠀⠀⠀⠀⠉⠙⠻⠿⣿⣿⣿⣿⣀⣰⢀⣀⠀⠀⠀⠀⠀⠀⠈⠛⠋⠀⠀⢹⡇⠀⠀⠀⠀⠉⠙⠛⠷⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠂⠀⠶⢤⣤⣿⠿⠋⠁⠀⠀⠀⢀⣠
⣿⣿⠿⠿⢿⣿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠿⣦⢠⣄⠀⠀⠉⠛⣷⠦⣤⣀⡀⠀⠀⠀⠀⠀⠈⠙⠛⠿⢿⣿⣿⣤⣄⣧⣛⠀⡀⠀⠀⠀⠀⢠⣼⣇⠀⠀⠀⠀⠙⣀⡀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⣤⡿⠟⠋⠀⠀⠀⠀⢀⣠⣴⣿⣿
⡇⠀⠀⠀⠀⠉⠛⠿⢿⣿⣿⡌⢷⣄⠀⠀⠘⡇⠙⣷⡆⠀⣀⣹⠆⠀⠉⠛⠳⢦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠉⠛⠻⠿⣿⣤⣤⣿⣿⣷⣶⣼⣿⣿⣿⣶⣤⡀⠀⣈⣟⠓⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣍⣀⡀⠀⠀⠀⠀⠀⠛⠛⠿⠿⣿
⣷⣀⡀⠀⠀⠀⠀⠀⠀⠉⠙⠻⢶⣽⣆⠀⠀⢿⠀⢿⡇⠀⠉⠛⠧⢠⣤⣀⣤⡾⠋⣿⡛⠳⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠉⠉⢛⣿⣶⣦⣤⣄⣀⡀⠀⠀⠀
⣿⣍⠻⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢶⣴⣆⣻⡀⢀⣤⠀⠀⡀⠈⠉⢩⡀⠀⢹⡇⠀⠀⠈⠉⠛⠷⢶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣴⣾⠿⠛⠋⢹⣿⣿⣻⣿⣿⣶⣶
⣿⣿⡆⠸⡏⠙⠷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⠷⣿⣿⣶⡈⢛⣤⣄⡘⣷⡀⣘⣷⠀⠀⠀⠘⠆⠀⠀⠈⢩⡟⠷⢶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠄⠀⠈⢀⣸⣟⠊⠿⠘⠿⠛⠀
⣿⣿⣿⡀⠀⠀⠀⠀⠙⢻⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⡀⠀⠰⠶⣤⣄⣸⣿⠀⠀⠈⠉⠛⠷⢶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣆⣀⣀⣸⣟⠀⠀⢀⠀⢀⡉
⣿⣿⣿⣷⡄⠀⠸⣦⣴⡿⠃⢸⡟⠿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣤⣴⣿⣛⠿⣷⣤⡄⠀⠀⠀⠀⠈⠉⠛⠿⢦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣄⣀⠈⠉
⣿⣿⣿⣿⣷⡄⠀⠀⢹⣄⠸⣾⣷⠀⠀⠉⠛⠷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠘⠳⣤⣀⠀⠀⠀⠀⠀⣿⡏⠛⠷⢶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣷⡀⠀⠀⢻⣦⠙⣿⡄⠀⠀⠀⠀⠀⠉⠛⢶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣤⣈⠀⠐⠀⣤⡀⠼⠇⠀⠀⠀⠉⠙⠛⠷⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠙⢸⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣽⣄⡀⣀⠀⠀⢠⣀⠀⠀⠀⢀⣀⣼⣿⣿⣷⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠀⢈⣿⣿⣿⣶⣄⠀⠀⠀⠄⠀⠀⠀⠀⠀⠈⠛⢷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣾⡿⠛⠩⠀⠾⢏⣤⣉⣛⠻⠿⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠿⢿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡶⣮⣹⣿⣿⣿⣿⣷⡄⠀⠀⠀⠘⠷⠄⠀⠀⠀⠀⠈⠙⠻⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠈⢉⡘⢿⣄⣽⣿⣿⣷⣦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣀⣾⣿⡄⠀⠀⠀⢾⡝⢿⣿⣿⣿⣿⣿⣿⣷⣦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⡀⠀⠐⣶⣴⣄⡙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡞⢿⣦⡀⠀⠀⠀⠀⠀⠀⢀⣴⡾⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣷⣏⣹⣿⣿⣷⣦⣤⣀⠀⢻⣿⣿⣿⡇⢠⢠⡖⠂⢠⣤
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣀⠙⢻⣶⣴⡆⣀⣴⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣿⣿⣟⠀⠀⠀⠀⠂⠀⠉
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣠⣴⣿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣀⡀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣸⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⠀⠀⠀⠀⠀⠈⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⢀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣁⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⢈⣛
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢀⡀⢠⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣷⣶⣾⣿⣿⣶⢶⡶⣶⣾⣷⣶⣶⢿⣿⡀⣴⣶⣶⣶⣶⢶⠀⡦⠘⣿⢛⣿⣟⣻⣿⡿⣯⣽⣧⣾⣿⣿⣟⡿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣋⡙⠘⠉⠉⠙⠉⠉⠋⠁⠉⠉⠉⠉⠙⠋⠉⠛⠈⠋⠙⠙⠘⠈⠀⠀⠈⠉⠙⠉⠙⠋⠈⠉⠛⠉⠉⠉⠁⠘⠙⣛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.reset)

print("You walk forward for a bit, and come across yet another turn. You could turn left then walk a bit")
print("and go right, or you can turn left and then turn right straight away")
if route == True:
    print("The right way to go is the one with more walking, though you will face a threat either way,and either way could work")
six = input("You can't see what either path leads to. Do you walk more or less? more/less ")
if six == 'less':
    label hibrit
    clear()
    print(r'''
    ⠀⠀⠀⠀⠀⠀⠀⠐⠒ ⠒⠻⡒⠒⠒⠒⠒⢲⣴⡒⣒⣶⡞⠛⠛⠛⢶⠒⢒⡖⠒⣆⡀⠀⡖⢲⢂⣀⢀⣠⠤⠤⡤⠀⠀⠀⠐⠲⣖⡒⠒⠒⠒⠒⠀⠀⠐⠒⠒⠐⠢
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⢁⣀⣀⡀⣳⡀⠀⣠⣄⠀⡗⠉⠉⢿⢧⠀⠀⠀⠈⢷⡞⠀⣰⣧⡭⣿⡷⢻⡉⠈⢻⠀⠀⣰⢃⣠⠴⠒⢦⡀⠀⠙⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⢰⡋⠀⠀⠉⢹⣛⣶⣿⠘⣶⣇⠀⣀⣼⡌⠓⢤⣀⣠⡬⣁⠰⠟⠁⠀⢈⠇⠀⠓⠲⡼⠲⣾⠟⠉⢹⠀⠀⢼⠃⠀⠀⠈⠳⣄⠀⣠⣤⣤⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⡾⣟⡉⠚⢷⣄⡤⢤⣸⣤⣸⣟⣆⡟⣽⣾⠥⢤⣀⢀⡤⠿⠿⣷⣈⢳⡄⢠⣀⣾⡤⠖⠒⣶⣏⣰⠁⠀⠀⣸⠤⠤⠼⡆⠀⠀⠀⠀⠹⣧⣿⣷⣿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣞⣀⣸⣏⣁⡞⠁⠀⠀⠀⠉⣿⠭⠭⣭⣹⠋⠀⣼⠁⠉⢩⣷⠘⠮⢽⠾⠳⡄⠙⡿⠀⠀⣰⠇⠈⢿⡀⠀⠀⢹⠀⠀⠀⣿⠀⡤⣺⠟⠀⠹⡄⠉⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣷⡿⠈⠉⡽⢧⣀⣀⣀⠀⣴⡇⠀⠀⠀⣿⢧⡀⣹⠀⠀⣸⣧⠀⠀⠸⡷⣤⣙⣦⡷⢶⣞⡙⣦⡀⠈⣷⡀⠀⣸⠒⠲⡄⢙⣾⣉⣋⣻⠆⠀⢳⣤⣄⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⡏⠀⠀⠀⣰⢡⠞⠧⠭⢽⠛⠹⡇⠀⣠⣾⡟⠀⠹⣏⣀⡴⠃⠈⠷⡤⠴⠇⣼⣩⠟⢻⠀⠀⠙⢶⣽⣶⡟⢻⡖⠁⠀⢠⣷⠞⠧⠶⢿⡀⣀⡀⠘⡇⠈⢿⡆⠀⠀
⠀⠀⠀⠀⠀⢸⢧⡀⠀⢰⢧⠏⠀⠀⢀⡟⠀⠀⠙⠋⣽⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⢀⡞⡗⣆⠀⠀⣏⢿⣷⡄⠙⠲⠤⣤⢿⢾⣧⠀⠀⣯⠉⠙⣶⣇⢀⣼⠇⠀⠀
⠀⠀⠀⠀⠀⢸⠀⠙⢆⡞⢸⡀⢀⡠⠋⠀⠀⠀⢀⣼⢻⣻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣴⣃⡟⠀⠀⠘⠛⣧⠹⡄⠀⠀⠀⡞⢈⡟⢧⠀⠘⣷⠔⠁⠸⠟⠋⠀⠀⠀
⠀⠀⠀⠀⠀⢸⠀⠀⡼⠀⣠⠏⠉⠀⠀⠀⠀⢀⡞⠉⡿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⢸⡄⠙⣆⠀⣰⣧⠞⠀⠈⢧⡀⠸⡄⠀⢰⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣾⡀⣼⡡⠞⢁⠀⠀⠀⠀⠀⢠⠞⠀⢰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⠀⠘⢦⠀⠀⠀⠀⠀⢀⠙⠦⣹⡄⣸⡆⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡏⢿⠯⠤⢲⠏⠀⠀⠀⠀⢠⠏⢀⣠⡯⠤⠤⢤⣤⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⡤⠤⠤⢼⣇⣀⠘⢧⠀⠀⠀⠀⠈⢷⠢⠬⢿⢿⡇⠀⠀⠀⠀
⠀⠀⠀⠀⢰⠻⣧⠀⢰⠇⠀⠀⢀⡼⣱⠋⠀⢉⡟⠀⠀⠀⠀⠀⠀⠀⠈⠉⠓⠲⠄⠀⠀⠀⠀⠴⠒⠋⠉⠀⠀⠀⠀⠀⠀⠀⠘⣎⠁⠈⢳⡻⣄⠀⠀⠈⢧⠀⢸⡟⢳⠀⠀⠀⠀
⠀⠀⠀⠀⢸⠀⢹⣷⡏⠀⠀⠀⡾⠟⢧⡀⣠⠟⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⡀⠀⠀⠀⠀⠘⢦⠀⣠⠟⠾⡆⠀⠀⠈⣧⡿⠁⢸⠀⠀⠀⠀
⠀⠀⠀⠀⢸⡄⠀⢻⠀⡀⡄⢸⡁⢀⣠⢿⠋⠀⣀⣠⢤⡭⠭⠭⠤⠤⢭⣍⣷⠄⠀⠀⠀⠀⠀⠀⢰⣋⣭⠥⠤⠬⠭⠭⣭⢤⣀⡀⠈⡿⢥⣀⢀⣻⠀⡄⣀⢻⠃⠀⣾⠀⠀⠀⠀
⠀⠀⠀⠀⠸⣧⠀⣼⣼⠉⣻⣼⡍⡆⢀⡜⠀⠺⠋⠀⠸⡇⠀⠀⠀⠀⣸⠀⠈⢳⡄⠀⠀⠀⠀⣴⠋⠀⢹⡀⠀⠀⠀⠀⡿⠀⠈⣿⠀⠹⣄⢠⡎⡿⣼⡋⢹⣾⡄⢰⡿⠀⠀⠀⠀
⠀⠀⢠⣶⢾⣿⣷⡷⠟⠋⠁⠙⠧⣠⡏⠀⠀⠀⠉⠒⠒⠛⠉⠉⠉⠉⠉⠉⠀⠁⠀⠀⠀⠀⠀⠀⠁⠉⠉⠉⠉⠉⠉⠙⠓⠒⠊⠀⠀⠀⠈⣧⡰⠟⠁⠉⠛⠧⣿⣿⡇⠀⠀⠀⠀
⠀⠀⠈⠛⠻⡿⠋⠀⠀⠀⠀⠀⡴⠋⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡏⠳⡄⠀⠀⠀⠀⠈⢻⡇⠀⠀⠀⠀
⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⢀⣾⣅⠀⢹⡀⠀⠀⠀⠀⠀⡄⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⡆⠀⠀⠀⠀⠀⣸⠁⢀⣹⣆⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀
⠀⠀⠀⠀⡇⠀⠀⠀⠀⢠⠞⠀⠈⠙⠲⣧⠀⠀⠀⠀⠀⠇⠸⠀⠀⠀⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠇⠀⠀⠀⠀⢠⡿⠞⠉⠀⠈⢦⠀⠀⠀⠀⠀⡇⠀⠀⠀
⠀⠀⠀⠀⡇⠀⠀⠀⢠⣟⠲⢤⣀⢀⣴⢘⣆⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣞⢶⣄⣀⣠⠴⢺⣇⠀⠀⠀⠀⡇⠀⠀⠀
⠀⠀⠀⠀⢙⡶⢦⡀⠸⣌⠒⠒⠚⢋⣾⠏⠙⢆⠀⣠⣶⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠉⢿⣏⠛⠒⠒⢋⡼⠀⣠⠶⡞⠁⠀⠀⠀
⠀⠀⠀⢰⡞⠀⠀⠙⢦⡼⠳⠀⣤⡾⠋⠀⠀⣈⢾⡵⠃⠀⠀⠀⠀⢀⣀⣀⡠⠤⠤⠤⠤⠤⠤⠤⠤⣀⣀⡀⠀⠀⠀⠀⠀⠀⣠⣯⠀⠀⠈⠻⣦⡄⠰⠿⣤⠞⠁⠀⠙⣦⠀⠀⠀
⠀⠀⠠⠋⠀⠀⠀⠀⠀⡇⠀⢠⡇⠀⠀⠀⠀⣿⠀⠙⣄⠀⠀⠀⠀⠀⠙⠓⠤⢤⣀⣀⣀⣀⣀⣠⠤⠔⠛⠁⠀⠀⠀⠀⢀⡴⠁⢸⠀⠀⠀⠀⠀⢧⠀⠀⡇⠀⠀⠀⠀⠈⢣⡀⠀
⠀⠰⠁⠀⠀⠀⠀⠀⠀⡇⠀⡞⠀⠀⠀⠀⠀⣿⠀⠀⠈⠓⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠋⠀⠀⢸⠀⠀⠀⠀⠀⠘⡆⠸⡇⠀⠀⠀⠀⠀⠀⢣⠀
⢠⠃⠀⠀⠀⠀⠀⠀⠀⠇⢸⠁⢀⡤⡄⠀⠀⡟⠀⠀⠀⠀⠀⢉⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⢚⠁⠀⠀⠀⠀⠈⠀⠀⠀⡤⣄⠀⢻⠀⠇⠀⠀⠀⠀⠀⠀⠀⢣
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⡴⠋⠀⡇⠀⠀⡇⠀⢀⡴⠒⣦⢸⠀⠀⢹⠲⢤⣀⠀⠀⠀⠀⠀⢀⣠⠴⢺⠁⠀⢸⢠⡖⠲⣄⠀⠀⡇⠀⠀⣇⠈⠳⣜⡆⠀⠀⠀⠀⠀⠀⠀⠀⠘
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠁⠀⡼⠁⠀⠀⣧⡶⠋⠀⣠⠇⡾⠀⠀⢸⠀⠀⠈⠉⠉⠒⠊⠉⠉⠀⠀⢸⠀⠀⢸⡄⢧⡀⠈⠑⢦⡇⠀⠀⠹⡄⠀⠘⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⡰⡀⠀⠀⡼⠁⠀⢀⡾⠁⠀⣠⠞⠁⠀⢀⡞⠉⣧⠇⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⣧⡏⠙⣆⠀⠀⠙⢦⡀⠀⠹⣄⠀⠀⠹⡄⠀⠀⡴⣠⠀⠀⠀
⢀⠀⠀⠀⢿⡇⠀⣰⠁⠀⢀⣞⣀⣠⡶⠁⠀⠀⣰⠋⠀⢠⡟⠀⣠⢴⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡷⢤⡀⠘⣷⠀⠈⢳⡀⠀⠀⠙⣦⣀⣘⣆⠀⠀⢻⡀⢀⣿⠃⠀⠀⢠
⠀⠀⠀⠀⠘⣿⣠⠇⠀⠀⣼⣿⣿⠟⠀⠀⢀⡼⠁⠀⢰⠏⠀⡴⠃⠀⠈⠑⠦⢄⡀⠀⠀⠀⠀⣠⠤⠖⠉⠀⠀⠳⡄⠈⢣⠀⠀⠹⣄⠀⠀⠈⢿⣿⣾⡄⠀⠈⢇⣸⡟⠀⠀⠀⠀
⠀⠀⡀⢀⡀⢸⡿⠀⠀⢰⣿⣿⠋⠀⠀⣠⠟⠀⠀⢠⣏⠴⣞⡀⠀⠀⠀⠀⠀⠀⠉⣳⣆⣶⡋⠁⠀⠀⠀⠀⠀⠀⣹⡦⣤⣧⠀⠀⠈⢧⡀⠀⠈⢻⣿⣧⠀⠀⠸⣿⠀⣀⠀⡀⠀
⠀⠀⠹⣼⡿⢾⣃⣀⣀⣘⣉⣁⣀⣀⣴⣃⣀⣀⣴⣿⣿⠔⣋⣸⡀⠀⠀⠀⢀⣠⣴⣡⣤⣄⣵⣤⣀⠀⠀⠀⣀⣸⢀⡑⢾⣿⣷⣄⣀⣀⣳⣄⣀⣀⣈⣙⣀⣀⣀⣻⢾⣿⡜⠁⠀
    ''')
    print("It's Brit")
    britone = input("Do you fight or do you work together and hope she doesn't betray you? fight/work together ")
    if britone == 'fight':
        label fightbrit
        if sword == True:
            print("Have a good sword, with two chances to use it before it breaks, but she also has a sword.")
            print("In an attempt to slash her, you stumble presenting an opportunity for her")
            input("She makes quick work of you and takes your sword")
            sword = False;
            goto slayeddeath
        if sword == False:
            print("You have nothing to fight with except your fists, while she has a sharp sword")
            input("It wasn't even a fair fight")
            goto slayeddeath
        else:
            input("That is not a valid answer, please try again")
            goto fightbrit
    label onebrit
    if britone == 'work together':
        brittwo = input("Do you tell her you want to be friends, or do you tell her you want to work together? friends/colleagues ")
        if brittwo == 'friends':
            print("'WAIT! Let's work together! Why not be ✨Friends✨?' You ask")
            print("'The power of FRIENDSHIP...'")
            sleep(1)
            print("'does not exist' She responds")
            sleep(1)
            input("Brit kills you.")
            goto Britdeath
        if brittwo == 'colleagues':
            print("'Ok. Fine. But don't expect anything from me. I will")
            print("take any chance I can to be rid of you'")
            input("You sigh in relief")
            print("")
            input("You walk forward together")
            Brit = True;
            goto gobackseven
        else:
            input("That is not a valid answer, please try again")
            goto onebrit
    else:
        input("That is not a valid answer, please try again")
        goto hibrit
    
if six == 'more':
    label arrogantsword
    clear()
    print(r'''
'''+Colour.yellow+'''    ⠀⠀⠀⠀⢀⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⠀⣀⠀⠀⠀⠀⢀⣾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⠀⣿⣧⡀⠀⠀⣼⠃⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠻⣷⣄⡀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣧⠀⠀⠀⠀⠀⢀⣴⡶⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⠀⢸⣿⣧⠀⣰⡏⠀⣿⡀⠀⠀⠀⠀⠀'''+Colour.reset+'''⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣤⣈ '''+Colour.yellow+'''⣧⠈⠻⣿⣦⣀⣀⠀⠀⠀⣸⣿⣿⣿⣆⠀⠀⠀⣴⣿⣿⠃⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⠀⠘⡏⢿⣧⣿⠀⢀⣿⠁⠀⢀⣾⡇'''+Colour.reset+'''⠀⠀⠀⣀⠤⠖⠂⠉⠉⠀ ⠀⠀⠀⠀'''+Colour.yellow+'''⠸⡏⣀⣀⣭⣷⣄'''+Colour.reset+'''⠉⠉⠒'''+Colour.yellow+'''⢻⣿⣿⣿⣿⡆⢀⣾⣿⣿⡏⠀⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⠀⣤⣇⠘⣿⠇⠀⢸⡇⠀⢠⣾⣿'''+Colour.reset+'''⣀⡤⠚⠉⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⢻⢻⣽⣿⣿⣿⣧⡀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀
'''+Colour.yellow+'''⢸⣿⣿⡀⢻⡇⢠⡿⠀⣰⣿⡿⠛'''+Colour.reset+'''⠁⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠘⣿⣿⣿⣿⣿⣿⣷⡀⢸⣿⣿⣿⣿⠏⠙⢿⣿⣿⣇⠀⠀⠀⠀⢀⣶
'''+Colour.yellow+'''⢸⣿⣿⣧⣈⣧⡿⠁⢠⡿'''+Colour.reset+'''⠋⠀⠀⠀⠀⠀ ⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣧⠈⣿⣿⣿⡏⠀⠀⣼⢹⣿⣿⠀⠀⠀⢀⣾⣿
'''+Colour.yellow+'''⣿⡟⢿⣿⣿⣿⠁'''+Colour.reset+'''⡴⠋⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠀⢿⠳⡀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⡆⢹⣿⣿⠁⠀⢀⢛⣼⣿⣿'''+Colour.reset+'''⠳⣄'''+Colour.yellow+'''⢀⣾⣿⣿
'''+Colour.yellow+'''⢻⡇⠀⢻⣿⣇'''+Colour.reset+'''⡞⠁⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠘⣧⠘⢦⣀⡀⠀⠀⠈⠻⣿⣿⣿⣇⠀⣿⡟⠀⠀⡞⣿⣿⣿⣿'''+Colour.reset+'''⠀⠘'''+Colour.yellow+'''⣿⡗⣿⣿
'''+Colour.yellow+'''⠈⣧⠀⠈⣿'''+Colour.reset+'''⡟⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⡀⠈⠙⡓⠶⣤⣄⡈⠻⣿⣿⣧⣸⡇⡆⠀⢳⣿⣿⣿⡇⠀⣸⣏⠁⣿⣿
'''+Colour.yellow+'''⠀⠹⡆⠀⣿'''+Colour.reset+'''⡇⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡀⠉⠳⢦⡈⠛⠷⣿⣿⣿⣿⣅⠁⠀⣿⣿⣿⡟⠀⢰⣿⠃⠀⣼⣿
'''+Colour.yellow+'''⠀⠀⢻'''+Colour.reset+'''⣀⣿⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠲⣄⣄⣌⣲⣄⠸⣿⡿⣿⣿⣷⣴⣿⣿⠟⠀⠀⣿⡿⠀⠀⣸⡟
'''+Colour.yellow+'''⠀⠘⣿'''+Colour.reset+'''⡏⠀⠀⠀⢀⠀⠀ ⠀⠀⠀⠐⣿⣿⢿⣶⣶⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠈⠻⢿⣿⣿⣷⣿⣧⠈⠻⢿⣿⣿⠋⠀⠀⢸⣿⠇⠀⣼⡿'''+Colour.reset+'''⣇
⠀⣀⡴⢋⣴⣿⣿⣿⣿⣿⡷⠿⣿⣿⣿⢣⣾⣿⣿⣿⣿⣷⣭⣙⠶⡄⠀⠀⢰⡇⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠙⠻⣿⣿⣿⣧⠀⠘⠛⣿⣆⠀⠀⣿⡇⠀⢀⣿⠇'''+Colour.reset+'''⢸
⠀⢻⠀⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠈⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⡹⡄⠀⠀⠳⡄⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠈⠙⠿⣿⣇⠀'''+Colour.yellow+'''⠀⠈⢻⡆⢸⠃⠀⠀⣾⠏⠀'''+Colour.reset+'''⢸
⠀⠈⡇⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡹⡀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀'''+Colour.yellow+'''⠀⠈⢿⣾⡄'''+Colour.yellow+'''⠀⠀⢿⡟⠀⣠⣼⣿⠇⠀'''+Colour.reset+'''⢼
⠀⠸⣅⢷⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⡇⠀⠀⢧⡀⠀⡀⠀⠀⠀'''+Colour.yellow+'''⠀⠀⠀⠀⠀⠹⣿⣦'''+Colour.yellow+'''⢠⣿⣿⣿⡿⣿⣿⠀⠀'''+Colour.reset+'''⡟
⠀⣀⡿⠈⢿⣿⣿⡇⢻⣿⡗⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⣸⠁⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⣠⣴⣿⣿⣿⣿⣿⣿⠿⠋'''+Colour.yellow+'''⣴⣿⣿⠀'''+Colour.reset+'''⢀⡟
⠀⡿⠁⠀⠼⠛⢹⣯⣸⣿⣷⡄⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⡿⠛⠁⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠞⠉⢿⡿⠿⠟⣻⡟⠁'''+Colour.yellow+'''⢠⡾⠛⢩⣿'''+Colour.reset+'''⣰⡿⠀
⠸⡇⠀⠀⠀⠀⢸⠇⠿⠋⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠜⠁⠀⠀⣠⡴⢻⣿⣿⣶⣶⣶⣾⡿⠀⡖⢸⡇⠀⢠⡟'''+Colour.yellow+'''⣠⡾⣋⣴⣴⠟'''+Colour.reset+'''⣽⣿⠃⠀
⠀⢷⠀⢀⡾⣤⣼⣶⡖⠶⣿⠃⠀⠀⠀⠀⠀⢲⣷⣶⡶⠶⠆⣀⣀⣠⣴⠟⡟⠀⠀⠻⣿⣿⣿⣿⣿⠁⢨⠃'''+Colour.yellow+'''⣸⣿⣦⣿⣟⣩⣾⡿⠋'''+Colour.reset+'''⣡⣾⣿⠃⠀⠀
⠀⠀⠉⠉⠀⢰⠏⠈⠻⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣏⣴⣾⣿⡟⠁⠀⠀⣸⡇⠀⠀⠀⢿⠻⠿⢫⠏'''+Colour.yellow+'''⠀⠀⠀⣿⣿⣿⣿⣿⠿⠁'''+Colour.reset+'''⣶⣴⣿⣿⠇⠀⠀⠀
⠀⠀⠀⠀⢀⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⣿⠏⣿⡇⠀⢀⣾⣿⠧⠀⠀⠀⢸⡄⣰⠟⠀'''+Colour.yellow+'''⠀⠀⢠⣿⣿⣿⣯⣁'''+Colour.reset+'''⣠⣾⣿⣿⠟⠋⠀⠀⠀⠀
⠀⠀⠀⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠘⠋⢰⣿⣿⣶⡾⣿⣿⠇⠀⣠⠞⢉⠜⠁⡴⠀'''+Colour.yellow+'''⢀⣴⡟⠉'''+Colour.reset+'''⠀⠉⠛⠿⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣹⣶⡦⣴⢲⣴⢦⡤⣤⣤⣄⣤⣤⣤⣤⣤⣴⡿⠋⠙⢿⣯⣿⣿⠀⡰⠃⠀⠋⠀'''+Colour.yellow+'''⡼⠁⠀'''+Colour.reset+'''⡞⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⡏⣿⢰⡇⢰⠇⢸⡇⣸⣨⣇⣸⣏⣸⢇⣾⣿⣀⣠⠤⠤⠵⣫⠏⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠙⣟⢿⢿⣿⣷⣿⣹⣇⣿⣸⣧⠥⠿⠴⠜⠋⠁⠀⠀⡴⠞⠁⠀⠀⠀⠀⠀⠀⠀⢀⡴⠁⢀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⠛⠉⠉⠙⠉⠁⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢸⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣴⣶⠾⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣸⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⣾⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢀⣠⣾⡾⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⠀⢀⣀⡀⣀⡀⠀⠀⠀⠀⠀⠀⣀⣠⣴⣶⠶⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠘⢷⣂⣀⣀⣀⣍⣳⣶⣾⣿⠿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⠛⠻⠿⠿⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    '''+ Colour.reset)
    print("An arrogant skeleton stands in your way, holding up a small dart")
    print("A metal dart whooshes past you, missing by half a millimetre.")
    print("'COME IF YOU DARE FOR I AM THE MIGHTY-'")
    print('You roll your eyes and approach him casually')
    print("'AH! A BRAVE CHALLENGER! HELLO MORTAL. COME. STAND WITH HONOUR AS YOU FACE YOUR DOOOMMMM'")
    print("He rushes towards you")
    if sword == True:
        print("You can try just punching him, or you could use you sword. Your sword has two uses")
        skeletonfight = input("Do you punch him or use your sword? punch/sword ")
        if skeletonfight == 'punch':
            print("You manage one punch before a sharp pain erupts from your back and everything")
            input("goes dark")
            goto slayeddeath
        if skeletonfight == 'sword':
            input("He's pretty weak, so it only takes one slash before he's gone")
            goto gobackseven
        else:
            input("That is not a valid answer, please try again")
            goto arrogantsword
    if route == True:
        print("The map also had a few tricks. Because you have it, you know to either flatter him")
        print("and play to his ego so you can snatch the dagger, or run past him, but you're")
        print("not sure which one. The map can't make it too easy after all")
        skeletonchoice = input("Do you run or do you flatter him? run/flatter ")
        if skeletonchoice == 'run':
            input("Good choice. He attempts to chase you, but cannot go much further than the area he is confined to")
            goto gobackseven
        if skeletonchoice == 'flatter':
            print("")
            print("It works at first until...")
            print("'FINALLY. A SMART MORTAL. NOW, SACRIFICE YOUR LIFE TO ME'")
            input("You attempt to grab the dagger in a desperate frenzy, but he cuts you down first")
            goto slayeddeath
        else:
            input("That is not a valid answer, please try again.")
            goto arrogantsword
    else:
        print("You don't have many options here. You could try running, since he looks slow, but")
        print("you're already tired. You could just try punching, but again, you're tired. Otherwise")
        print("you could just make him angry, and hope he gets reckless and tires himself out")
        skeletondeath = input("None of the options are good. Do you punch him, run, or anger him? punch/run/anger ")
        if skeletondeath == 'punch':
            print("You are too tired to do a good punch.")
            input("He defeats you with ease")
            goto slayeddeath
        if skeletondeath == 'run':
            print("You are tired and you run slowly.")
            input("He walks over to you and defeats you")
            goto slayeddeath
        if skeletondeath == 'anger':
            print("He just cuts you. You just die")
            input("He got too angry")
            goto slayeddeath
        else:
            input("That is not a valid answer, please try again")
            goto arrogantsword
else:
    input("That is not a valid answer, please try again")
    goto gobacksix       
        
#Scene 6.5 so not really a full scene unless you count it
label gobacksixfive
clear()
print(Colour.red+r'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⠟⠛⠛⠻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣯⡀⢀⣠⡀⠀⠀⢻⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⠋⠀⢀⣼⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⡏⠀⠀⣴⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣷⣶⣶⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⠋⠀⠈⢿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣧⣤⣴⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.reset+'''⠀⠀⠀⠀⠀⠀⠀⣠⣤⣄⡀⠀'''+Colour.red+'''⠀⢻⣿⣿⣿⣿⣿⣿⣇'''+Colour.reset+'''⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
'''+Colour.reset+'''⠀⠀⠀⠀⠀⢀⣶⠿⠉⠙⠛⠿⢶⣦'''+Colour.red+'''⣽⣿⣿⣿⡟'''+Colour.reset+'''⢻⣿⠛⠿⣶⣦⣄⡀⠀⠀⠀⠀⠀
'''+Colour.reset+'''⠀⠀⠀⢀⣴⣿⡃⠀⠀⠀⠀⠀⠀⢨⡿'''+Colour.red+'''⠉⠿⠋'''+Colour.reset+'''⠀⢸⣿⡀⢀⣄⠈⠉⢻⣇⠀⠀⠀⠀
⠀⢀⣴⡿⠋⠀⠉⣀⠀⠀⠀⠀⢀⣿⠃⠀⠀⣀⡀⢸⣿⠀⠀⠉⠉⠀⣈⣿⣆⠀⠀⠀
⣴⣿⠋⠀⠀⠀⠀⠙⠃⠀⣀⠀⣼⣏⣠⠀⠈⠉⠀⢸⡿⠀⠀⠀⠀⠀⠈⠙⣿⡄⠀⠀
⠉⠛⢿⣦⣄⡀⠀⠀⠀⠀⠉⢹⡿⠁⠀⠀⠀⣀⣤⣾⣷⣤⣄⡀⠀⠀⠀⠀⠸⣷⠀⠀
⠀⠀⠀⠈⠙⢻⣶⣤⠀⠀⢠⣿⠃⠀⣤⣶⡟⠛⠉⠀⠀⠉⠙⠛⣷⣶⣤⠀⠀⢹⣧⠀
⠀⠀⠀⠀⠀⠀⠉⠛⠿⣦⣼⣿⣶⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢷⣾⣿⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁
''')
if route == True:
    print("According to the map, you shouldn't turn")
deadendturn = input("You come across a path where you could keep going straight or turn right to a chest. Where do you go? straight/right ")
if deadendturn == 'right':
    if Brit == True:
        print("As you already saw, there is a small chest")
        input("'Should we open it? It isn't locked or anything' You ask")
        print("'Nah, I've had too many trapped chests to risk it'")
        print("'Although, you could open it and I could keep watch instead? I don't care about you'")
        label rightchestbrit
        rightchest = input("Do you open the chest? yes/no ")
        if rightchest == 'yes':
            input("You cautiously bend down to open the chest, ready to jump out of harm's way")
            print("'Nothing. It's empty.")
            print("You walk a bit more, before she suddenly whispers for you to stop, fear creasing her eyes")
            goto someonedies
        if rightchest == 'no':
            print("'That's alright. I'm not stupid'")
            print("'SHHHHH' Brit whispers, motioning for you to stop")
            goto someonedies
        else:
            input("That's not a valid answer, please try again")
            goto rightchestbrit
        input("Come to think of it, what do you have on you?'")
        print("Brit thinks for a moment")
        input("'I have a key, map, food, water, and a bulletproof vest'")
        print("'Woah. That's a lot'")
        input("'Since there's nothing there, we might as well go'")
        input("'Ok'")
        goto gobackseven
    else:
        print("The chest sits in the middle of the path, its presence radiating")
        print("enough to avert your attention from anything and everything to the chest")
        print("Despite yourself, you feel a negative 'aura' from the chest")
        label chestbad
        rightchest = input("Do you approach the chest? yes/no ")
        if rightchest == 'yes':
            print("The negative feeling only gets stronger. Once you are ")
            print("next to the chest, you crouch down and feel overwhelming waves")
            print("of dread, as if all the alarms in your head are blaring.")
            goto cheststillbad
        if rightchest == 'no':
            input("You almost sprint back, going straight instead")
            goto gobackseven
        else:
            input("That is not a valid answer, please try again")
            goto chestbad
            
            label cheststillbad
            rightchesttwo = input("Do you open the chest despite the knot in your stomach? yes/no ")
            if rightchesttwo == 'yes':
                clear()
                print(r'''
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⢸⣿⣷⣿⣷⣶⡶⣦⣶⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣴⣶⣶⣶⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠶⢛⣻⣷⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⢄⣴⣿⣿⣿⡿⠿⣷⣯⣿⢿⣿⣆⠀⠀⠀⠀⠀⣠⣤⣶⡿⠛⠉⠉⠀⠀⠀⠀⠀⠉⠙⢻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠿⣟⢁⣀⡤⠖⠛⣻⡆⠀⢀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⠀⠀⣼⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⣄⣤⣾⣿⣿⣛⠁⠀⠻⣿⣿⣷⣶⢿⣿⣷⣄⣠⣴⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⢿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⢙⣉⣅⡀⠀⢀⣿⠶⠚⠉⠉⠀⠀⠀⠈⠙⠓⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣽⡄⢰⣿⠃⠀⣀⣀⡀⠀⠀⠀⠀⠀⠙⣿⣹⣯⣽⠟⣁⠀⠀⠀⠈⠀⠙⣿⣻⣿⣿⣏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⠾⣅⠹⡇⠙⣆⠀⠀⢠⣾⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠀⠀⣿⠾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣻⣤⣯⡵⠟⠛⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⠋⢀⡀⠀⠀⠀⢀⣿⣿⣻⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⢠⣾⡟⠋⢻⣄⠘⣦⣻⡴⣻⠟⠀⢸⡇⢹⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⠋⠀⠀⠀⣠⣤⠶⠒⠛⠋⠉⠉⠉⠉⠛⠒⠶⠽⡄⠀⠀⠀⢠⣤⣤⣤⣤⣖⠻⣿⢿⣽⠋⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣧⣼⣤⣀⣄⣠⣿⣿⣥⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⡀⢸⣯⣷⠿⠿⠛⠁⠀⠀⢸⡇⢸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠁⢀⣠⡖⠛⠁⠀⠀⠀⠀⠀⠀⠀⠰⣶⠶⣦⠀⠀⢻⡀⠀⠀⠀⠈⠙⠉⠉⠉⠛⠻⣾⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠛⠛⢯⣿⢷⠿⣿⠿⡿⡿⠛⣡⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣿⣅⠀⠀⠀⠀⠀⠀⢸⡇⠀⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⣴⠒⠒⠚⠛⠛⠛⠉⠛⡛⠛⠛⠲⠦⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣮⢀⡴⠚⠑⡟⠑⡆⠀⠀⠀⠀⠀⠀⠀⠀⢻⣦⠏⠀⠀⠘⣧⠶⢦⣄⠀⠀⠀⠀⠀⠀⠀⠘⡟⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢻⣦⣽⡴⠷⠶⢾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡟⠻⣧⠀⠀⠀⠀⠀⢸⣿⠶⣾⣿⠀⠀⠀⠐⢦⡀⠀⠀⢹⠀⠀⠀⢀⣠⣶⣿⡟⣿⣿⣟⣻⣿⣦⣬⣛⣦⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⠛⠁⠀⠀⠙⣴⠟⠀⠀⠀⠀⠀⣀⣀⡂⠀⣀⡀⠀⠀⠀⣿⣀⣀⡿⠀⠀⠀⠀⠀⠀⠀⠀⢻⠈⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠋⠀⠀⠀⣀⣽⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⣇⠀⢻⣇⠀⠀⠀⠀⢸⣿⢧⣼⣿⡇⠀⠀⠀⠈⢿⡄⠀⣞⣠⡴⠞⠛⠙⣿⣈⡿⣟⣹⡿⣿⣇⠀⠀⠀⠙⠻⣧⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣾⡿⠿⣿⠿⠿⣿⣦⡀⣤⣸⡏⠁⠀⠀⠀⠀⠀⣠⣾⡄⣀⣸⡆⠀⣳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣆⣀⡤⠖⠋⠁⠀⠀⡉⠙⠲⢤⣀⠀⠀⣠⢤⡀⠀⠀⠀⠀⢸⠇⠀⣿⠀⠸⣿⠀⠀⠀⠀⢸⡏⣷⣬⣿⠃⠀⢀⣤⣤⣬⣿⣿⠏⠁⠀⡀⣦⣤⣿⣟⣳⣿⡿⣿⣿⠟⠀⠀⠀⠀⢀⣘⢿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⣿⣿⠇⠀⠀⠀⠀⠀⠀⣠⣤⣾⠿⠛⠋⠀⠀⠀⠀⠀⠈⠉⠙⠟⠀⣷⠀⠀⢀⣤⢴⣿⡟⡿⣯⣿⠿⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⡇⠐⣿⠁⢀⣠⡤⠴⠚⠛⠙⠳⢤⣀⠈⠓⢾⡅⠀⢹⡄⠀⠀⠀⠸⢧⣶⡻⠦⣴⣿⡇⠀⠀⠀⢸⣿⡇⠻⣿⣇⠀⠈⠉⠀⣀⣴⠏⠀⠀⠀⣿⠉⠉⠀⠉⠙⠛⠛⠋⠁⠀⠀⠀⠀⠀⣾⠹⣯⣆⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⣽⣿⡀⠀⢀⣤⡀⣠⣾⡿⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣶⣿⡿⠿⢼⣿⠇⣷⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠖⠛⠉⠁⠀⣹⢿⣯⠵⠶⠶⠶⠶⠶⠤⠤⠬⣷⣄⣠⡏⠀⢀⣻⣦⠀⠀⠀⠀⠈⠙⠿⣾⣿⡛⠶⢤⣀⡈⣿⡟⠳⢶⣿⡄⣀⡤⠞⢻⡅⠀⠀⠃⠀⠈⠀⠀⠀⠀⠀⠀⠰⠶⠶⠤⣄⣀⠀⠀⠘⠳⠁⢿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢲⣾⣩⣾⡇⠀⠀⠈⠉⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⣻⣿⣿⠓⠀⣾⣟⣻⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠋⠻⣷⣶⣾⣿⣾⣅⣴⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⡻⣇⢀⣿⣿⣿⡾⠀⠀⠀⠀⠀⠀⠀⢻⣿⠻⣤⡀⠀⠙⣿⡿⣷⣿⡿⠿⣏⡀⠀⠈⣷⠀⠀⠀⠀⠀⠀⠀⠀⢰⡄⠀⠀⠀⠀⠀⠀⢈⡙⠂⠀⠀⠀⢾⠇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠟⠃⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠟⠀⢸⣿⡀⠄⡀⣸⣿⣿⠿⠿⠇⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣿⠿⠛⠀⠼⠿⣿⠀⠀⣠⣤⣄⠀⠀⠀⡃⣤⣿⣇⢻⣿⣿⡿⠟⠻⣄⠀⠀⠀⠀⠀⠀⣼⣿⠀⠀⠻⣧⡀⣿⣿⣿⡻⡇⠀⠘⣧⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⢿⣤⡀⠀⠀⠀⣀⠀⢻⡀⠀⠀⠀⣼⠃⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡶⠋⠀⠀⠀⢸⣟⣦⡶⠞⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⡇⠀⢀⡾⠁⠀⠀⠀⠀⠀⣿⠀⢾⣿⣿⣿⢧⠀⠈⣿⣿⣿⣿⠘⣿⡟⠻⡄⠀⠘⢧⠀⠀⠀⠀⠀⢹⣿⠀⠀⢀⣬⣿⣷⠟⠉⢻⣿⣀⠀⣿⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⢤⡀⢄⠙⣆⢠⢳⡀⠀⠀⡿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣆⡀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣦⢴⡿⢿⠀⠀⠀⠀⠀⣾⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠋⢩⡇⠀⣼⠀⠀⠀⠀⠀⠀⠀⣹⡀⠈⠻⠟⠋⠀⢹⣿⣿⠈⢻⣇⣰⡟⠀⠀⠻⡄⠀⢸⡃⠀⠀⠀⠀⠘⣿⣇⡴⠋⢈⡟⢻⡗⣲⡿⠟⠿⣮⠁⠀⢀⡀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠻⣌⣆⠘⢿⠘⠇⢀⣰⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠈⠙⠓⠒⠶⠶⠶⠚⠛⠋⢉⠁⡀⠠⠸⠇⢀⠂⠁⣀⣴⡟⢿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠁⠀⢀⣼⠃⣰⠇⠀⠀⡶⠶⢤⣤⠶⠛⠻⣿⡶⢶⣤⠄⠐⡯⠿⠀⢸⣿⠟⠳⣄⠀⠀⢹⠀⢸⡀⠐⠀⠀⠀⢀⣿⣿⡄⠀⠀⠿⢻⡟⣿⣤⠎⣉⡉⣷⡞⠻⠙⡿⣇⠻⣦⠀⠀⠀⠠⠀⠂⠀⠀⠀⠀⠀⠙⠳⠾⣇⠀⣼⠇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣦⠰⡄⠀⠀⠀⢠⠀⢂⠁⠄⠂⠠⠁⡀⠂⣄⣢⣿⠟⢡⠸⢸⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⡴⣿⠏⢠⡟⠀⠀⠘⣧⡀⠀⠀⠀⢀⡴⠋⢀⠈⣿⡀⠀⣠⠀⣠⢸⡿⣤⠀⠈⠉⠁⠙⣦⣾⠀⠀⠀⠀⣰⠟⠀⠹⣷⡄⠀⠀⢨⣿⡹⣷⡞⠙⠿⠾⣇⠀⣇⢇⢿⠀⠙⢷⡄⠀⠀⠀⡀⠀⠁⠀⢀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⣧⠻⣆⡀⠀⠀⠐⡀⠂⠈⠄⢡⡐⢤⠲⠏⢩⠘⣇⠤⠟⠛⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⢀⡼⠃⠀⣸⠁⠀⠀⠀⠹⣿⣦⠀⢀⣾⠁⠠⠀⡀⠙⠣⠜⠻⠦⠛⠛⠀⢹⣧⠀⢀⣴⣾⣿⡟⠀⠀⠀⡼⠋⠀⠀⠀⠘⢻⣤⣀⣾⣿⡇⠈⢷⡆⠀⠀⢹⣦⢻⣼⣿⠆⠐⣶⣿⣦⠀⠀⠀⡀⠀⢀⠀⠀⠀⢀⢠⣼⡷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠹⠃⠌⣿⣶⠀⠂⢴⠳⠜⡌⢏⢡⠂⢸⡁⠸⠀⠏⠀⠀⠀⠀⣿⢀⡀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣼⠟⠀⢀⡴⠃⠀⠀⠀⠀⠀⠈⢿⡿⠛⠁⠠⠀⢁⠠⠐⠀⠄⠂⢀⠁⠄⠂⠘⠻⣤⣠⡟⣿⠀⡇⠀⠀⣼⠁⠀⢀⡔⣀⠀⠀⣨⡿⣿⠈⣿⢦⡌⢷⣤⣤⣤⣿⠾⠞⠃⠀⠀⠀⡹⣯⡀⠀⠀⠀⢀⡤⠔⢂⣱⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣠⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⣀⠀⠌⣠⠘⠻⣶⣥⣂⣄⣃⣦⡼⠆⡜⠘⠁⠄⡁⠀⠀⠀⠀⢰⡇⠈⢿⡛⠻⣍⡉⠉⠉⣉⣰⠟⠁⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠠⠐⠀⡁⠠⠀⡐⠈⢀⠐⠀⡀⠂⢈⠠⠐⠈⠁⠀⣿⠀⢷⠀⣼⠃⠀⠀⠸⠞⠃⠀⢰⡏⠀⣿⡀⠙⢦⣈⣻⣿⠿⣼⠇⠀⡀⠠⢘⠣⠴⠥⠼⣷⡶⠶⠾⠿⢀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⢻⠟⠛⠥⣤⣠⣿⠀⠉⠉⠉⠀⠀⢄⠀⠂⠡⠐⠀⡀⠀⠀⣤⣿⣇⠀⠀⠹⣄⡀⠉⠉⠉⠀⢀⣤⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢀⠁⠠⠁⢀⠐⠀⠠⠐⠀⡀⠂⠄⠐⡀⠠⠐⠀⡁⠀⢿⣄⣈⣷⠿⢦⣤⡄⠀⠀⠀⠀⣸⣷⠀⠸⡇⠀⠀⡉⢉⠠⠴⢻⣄⡀⠀⠶⠂⡐⠀⠀⠀⣸⣷⡀⣠⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⣏⣛⣳⠏⠲⣼⡟⢹⡄⠀⠀⠀⠀⠐⠠⠈⠠⠁⢤⠁⢄⠂⢡⣧⣽⣿⠀⠀⠀⠈⠛⠿⠿⢿⣿⣿⣥⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣀⣈⣀⣄⡂⠐⢀⠠⠈⠀⠄⠁⣀⣐⣀⣦⣤⠶⠶⢷⡞⠀⠄⢈⣹⣿⠟⠋⠀⣀⣀⣀⣠⡾⠋⢸⡆⠀⢻⡀⠀⢀⠂⡐⠠⠈⡟⠙⠻⠶⢷⣤⣤⠦⢌⣀⣻⣿⣿⣧⣤⣤⣄⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⢿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⡿⣶⣼⡀⢸⡗⡦⠀⣀⡀⡌⣰⠌⠖⢱⠀⠌⡰⢸⣼⠾⠏⢸⡄⠀⠀⠀⠀⠀⠀⣠⣾⣿⢾⡿⣟⣓⡺⡏⠀⣠⣼⣿⡵⠟⠋⠉⠉⠉⣉⣈⡉⠙⠛⠛⠛⠛⠛⠉⠉⠀⣠⣤⠀⢘⣧⡤⠶⠟⠁⢸⣀⣠⠾⠋⠝⠋⠁⠀⠀⣿⡇⠀⠈⢷⡄⠠⠐⠠⢀⠡⣷⠘⠒⠒⠡⡈⠉⠉⣠⠾⠋⣿⡇⣇⠀⠀⠀⠈⠉⠛⠻⣶⣄⠀⠀⠀⠀⠀⠀
⠀⠀⠘⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣫⡿⠀⠀⠈⠙⣿⣿⠁⠀⠇⡔⡠⢣⢈⠐⡼⠚⠀⠇⠀⠀⣰⠻⣾⠇⠀⠀⠀⢀⡴⢋⡵⠏⠁⠀⣁⠲⣍⡙⠻⢾⡿⠛⠁⠀⠀⠀⠀⠀⠼⣿⠟⠛⢶⡀⠀⠀⠀⠀⠀⢰⣟⠁⢹⠟⠛⣿⠦⠴⠶⠶⠛⣿⠃⠀⠀⣀⠀⠀⠀⠀⣿⣇⠀⠀⠈⠻⡄⠂⠁⠄⢰⡟⠀⠌⠀⠒⠓⣀⡼⠋⠀⠀⢸⡷⢸⠀⠀⠀⠀⠀⠀⠀⠈⢻⣷⡀⠀⠀⠀⠀
⠀⠀⠀⠘⣿⣿⣾⣦⣄⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⠃⠀⠀⠀⢠⣟⠿⠀⠈⠺⠁⠧⠙⠈⠠⠐⢀⠡⠀⠀⢀⡏⠀⠙⠀⠀⠀⣠⠞⣡⠟⠀⢀⡤⣾⣙⣶⡟⠛⣶⡞⠁⠓⢦⣀⠀⠀⠀⠀⠀⠘⣷⣶⣾⡇⠀⠀⠀⠀⠀⠀⢿⣿⡏⠀⢾⣿⠀⠄⠀⢀⡾⠃⠀⢀⣼⣯⠀⠀⠀⠀⢹⣿⣆⠈⠄⢁⠈⠄⠡⠈⣼⠃⠠⢐⣠⡶⣿⡟⠁⠀⠀⠀⠀⣿⡼⣧⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⠤⢴⣤⠀
⠀⠀⠀⢀⡘⣋⢿⣻⣟⢧⣤⣀⣤⣤⠴⢚⣙⣿⠏⠀⠀⠀⠀⣾⠁⠀⠀⠀⢀⡄⢤⠂⢁⠂⠁⠄⠠⠀⣤⣼⡇⠀⠀⠀⠸⣾⡁⢾⣅⠀⠀⠀⠁⠉⠉⠈⢳⡴⠃⠀⠀⠀⠀⢻⡟⠀⠀⠀⠀⠀⠘⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⡀⠀⠙⣷⣈⢴⡿⠁⠀⠀⣼⠁⢹⡄⠀⠄⡀⠂⠹⢿⣷⣌⣀⣂⡈⢰⡟⠁⣠⡶⠋⠁⣶⠏⠀⠀⠀⠀⠀⠀⠹⣏⣈⣓⣲⣖⣒⣒⣲⣾⣿⣟⡇⣘⣯⢴⡇
⠀⠀⠀⠈⢿⣥⡴⣿⣿⣾⡿⠟⠚⠚⠛⠉⠉⠀⠀⠀⠀⠀⢠⡟⡀⠀⠀⠀⠘⠤⠉⠀⠄⠂⠡⡈⣴⡿⠛⠛⠀⠀⠀⠀⠀⠈⠙⠳⣬⡛⠶⣶⠦⠀⠄⣠⡏⠀⣴⡆⠀⠀⠀⠀⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⠀⣁⡈⣿⠋⢀⠐⡀⢠⡇⠀⠈⣿⡀⡐⠠⠁⣢⠶⠋⠙⠛⢻⡇⠾⢡⡼⠋⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠁⠉⠉⢿⡷⢾⣿⠉⠀
⠀⠀⠀⢠⣶⣿⣾⣿⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣷⠇⠀⠀⠀⢤⠐⠠⠁⠏⡀⠃⢴⡟⠀⠀⠀⠠⣤⣤⠶⠖⠛⠛⠛⠻⢿⣷⣌⡙⢦⡈⢉⠀⢴⣿⠁⠀⠀⠀⠀⠈⠻⣦⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠹⡆⢹⡅⢈⠐⡀⢂⠐⢸⡇⢈⣐⡈⢷⡄⠂⣱⡏⠀⠀⠄⠠⠀⢀⣶⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠅⣰⡏⠀⠀
⠀⠀⠀⠀⠉⠉⠉⠛⣷⣾⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⢠⠀⠄⠀⠈⡀⠡⢈⠐⢨⠐⣾⠁⠀⠀⠀⠀⣯⠘⢷⣄⠀⠀⠀⠀⠀⠈⠛⢿⣦⡀⡂⢈⢸⣿⠀⠀⡀⠀⠀⠀⢠⡟⠀⠀⣀⣀⣀⠀⠀⣠⣴⣶⣷⣤⣴⠿⡿⠂⠀⡁⠘⣷⠶⠿⠶⢦⣌⣸⡷⠛⠋⠙⠛⠛⠿⠋⠀⠀⠀⢀⠀⠰⣾⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣠⣾⡿⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡿⡇⠀⠙⢆⠀⠀⠀⠀⠀⠀⠀⠀⢀⡏⠏⠀⠀⠀⠀⠀⢀⠐⠈⡀⠂⢀⡟⠀⠀⠀⠀⠀⣿⠀⠀⠙⢷⡄⠀⠀⠀⠀⠀⢀⡿⢙⡿⢶⣼⡇⢀⡶⠀⠀⠀⣰⡿⠖⠚⠛⢻⡿⠿⠓⠛⣿⠟⠋⠉⠻⠇⠀⠀⠀⠀⠀⠀⣷⢰⠀⠀⠀⠈⠙⠅⠀⠀⠀⠀⠀⢀⣠⡴⠶⠛⣋⣷⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡿⡋⠉⠉⠉⠛⠋⠉⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠹⡇⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⡀⠂⡀⠌⢀⡇⠀⠀⠀⢀⡴⠃⠀⠀⠀⠀⠻⣆⣀⣤⡤⡾⢫⠿⠋⠀⠄⠟⡗⣾⡇⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣦⡀⣿⢺⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠛⠁⠀⢧⡼⠋⠀⠈⠛⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⡀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠄⠠⠀⠂⣧⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⢠⣍⠛⢳⣾⠿⢷⣄⡘⢄⠈⠄⣀⣿⠁⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⢰⣿⠉⢿⡏⢸⠀⠀⠼⠃⣤⠶⠛⠛⢿⣾⠧⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠹⡄⠀⠀⠀⠉⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣄⠀⠀⠘⣆⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢀⠁⢘⣦⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠹⣧⠀⡀⠀⠄⡈⠻⣦⣝⢲⣾⡏⠀⠀⠄⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠸⡆⠸⡄⢀⣴⠛⠁⠀⠄⠠⣼⡇⠀⠀⠉⢀⡿⠀⠀⠀⠀⠄⠀⢸⡇⠀⠀⠀⠀⠀⠀⠘⠳⣦⣤⣄⠀⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢆⠀⠀⠹⣆⠀⠀⠀⠀⢸⡇⠀⡀⢄⡄⠀⠀⠀⠀⠀⣐⣤⡶⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⡐⠈⠄⢻⣧⠀⡁⠂⠄⣁⣾⠟⢿⡿⠁⠀⠁⠀⠀⣠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡈⠄⡠⠀⣼⢿⠇⠀⠀⠀⠀⡗⣻⡏⠀⢾⠀⢈⢀⡏⠹⡄⠐⣠⡟⠁⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⣠⣄⣀⣀⣀⣀⣙⣻⣿⡶⣾⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⣀⠀⠹⣆⠀⠀⠀⠀⢯⣽⣧⢾⣀⠀⠀⠀⠀⠰⣿⠁⠀⠀⠀⠀⠀⠀⠑⠶⣤⣄⡂⠄⠡⠈⠄⣿⠠⢀⠁⣢⡿⠁⣰⡟⠁⠠⡈⠄⠂⢋⡿⠀⠀⢀⠀⠠⠀⠁⠀⡀⠀⣠⠂⣡⡇⠁⢠⡟⠀⠀⠀⠀⠀⢸⣷⣿⣠⠟⠿⠀⡀⣾⠓⠒⠛⢾⣿⡿⣿⣿⣶⡦⣄⣠⠞⠁⠀⠀⠀⠀⠀⠀⠉⠉⠙⠛⠻⢭⣛⠿⣽⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢆⠀⠘⣆⠀⠀⠀⠈⢧⣿⠀⠙⢦⡀⠀⠀⠀⣸⠂⠀⠀⢀⡄⢂⠐⠠⢀⠉⠻⠟⢷⣦⡁⢂⣿⠀⢂⣰⡿⠁⠸⢋⠀⠌⢉⠹⣆⢈⣻⡇⠀⡐⠀⠠⠀⢁⣠⣿⡿⠐⣏⡾⠛⢻⣄⣿⢃⣐⢲⣾⣟⣷⣾⣰⣿⣇⠀⢾⡀⢰⡏⠀⠠⢀⣼⠛⣇⠀⠙⠿⣧⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣹⣿⣒⡎⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣄⡘⢧⡀⠀⠀⠀⠉⠀⠀⠀⠙⠶⣤⡞⠋⠀⡀⢋⠉⠉⠉⡙⠓⠛⠲⢅⡐⣠⣤⣞⡛⠉⣀⣶⠟⠀⠄⠡⠀⠌⠐⡀⢂⠈⣆⣽⠁⢀⠀⡐⣠⡷⠋⢉⢸⣡⣴⠟⠀⠀⢈⣿⡏⠀⠉⠛⣿⣿⣤⣬⣿⣿⠁⠈⢸⣷⣿⣁⣤⣤⡟⠁⢀⡏⠀⠀⠀⠀⠁⠀⠀⠀⠀⢀⣀⣠⡤⠶⠖⢻⣿⣿⠉⠉⠉⠉⠉⠛⠻⢷⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣄⢳⣄⠀⠀⠀⠀⠀⠀⢀⣠⠾⠛⠶⢦⣶⣶⣾⣄⠡⢀⠂⣤⣵⠟⠛⠛⢿⠟⠁⣴⠞⠁⠀⠌⠠⠁⠌⠠⢁⠐⡀⠂⣼⠏⠐⣠⡶⠟⢁⣤⡶⠂⣿⠋⣿⣿⡆⠀⢸⢹⠀⠀⠈⠉⠉⠉⢹⡏⢰⣿⠀⠀⣼⡿⠛⡿⢻⣿⠀⠀⢢⡇⠀⠀⠀⠀⣀⣤⡶⣶⣚⡿⠉⠀⠀⠀⠀⠘⢿⣙⣶⢤⣄⡀⠀⠀⠀⠈⠳⣮⡙⠲⢤⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣆⠀⠀⠀⠀⢀⣾⣇⠀⠀⠀⣠⣬⣶⢏⡹⠷⣦⣸⠏⠘⢳⡄⠀⣾⠀⠀⠀⠀⠀⠈⠀⡁⠪⠄⠥⣀⠦⣀⣸⣿⣤⣾⣩⣁⠄⠩⢁⣰⡼⢿⡙⡟⣿⣇⠀⠀⠉⠀⠀⠀⠀⠀⠀⣾⠃⢼⡏⢐⣼⠟⠀⣸⠇⢸⡇⡐⠀⢸⠇⣀⣤⣶⣿⣧⣤⣀⣿⡟⣇⠀⠀⠀⠀⠀⠀⠀⠉⠛⠓⠿⢽⣶⣦⣀⠀⠀⠈⢻⣧⠀⢻⣶⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⡄⠀⣠⣾⣿⡅⠀⠒⡆⢰⡿⣿⢣⡟⢰⣍⣿⠃⠀⢸⣿⡄⠹⣆⡀⣀⠀⠀⠀⠐⢀⠡⠐⠠⠀⠄⣿⠟⠛⠉⠉⠉⠛⠚⢤⣆⣡⣤⡀⢱⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠀⣸⣿⡿⠉⠀⢰⠏⠀⠈⣿⣿⢀⣼⠟⠋⠉⠉⠁⠉⠛⠛⠿⣿⢿⣆⠀⠀⠀⠀⠀⠀⣠⠖⠒⢲⠀⠀⠉⠉⠛⢦⣄⠀⠙⣷⡀⣿⣿⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⡾⠟⠛⢓⣿⣧⣠⣿⣿⡌⢿⡟⠻⣿⣄⠀⠀⣧⠀⠀⢻⡟⢮⡠⣤⡀⠀⠂⠠⢈⠀⣡⡞⠁⡖⠂⠸⠖⢃⠳⠀⠀⢻⣦⣟⣵⠟⠁⠀⢀⣶⡛⣦⡀⠀⠀⠀⢀⡎⠀⠀⣿⠟⠀⠀⢠⠏⠀⠀⢠⣿⣿⣿⠏⠀⠀⢀⣤⣶⣶⣶⣦⡀⠈⠻⡿⣆⠀⠀⠀⠀⠀⣯⠀⠐⠊⠀⢀⣤⠶⠶⢦⡘⣆⠀⠸⣧⣿⣿⣻⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣫⣤⠤⢶⣿⣯⣟⢿⣦⠙⣷⣼⡿⠈⢳⡀⠘⡇⠀⠈⣷⠀⠀⠈⠛⠑⠚⣤⣤⣾⠏⠠⡟⣡⠋⡕⣌⠒⢤⣤⡶⣿⣿⣿⡛⠙⣧⠀⠘⣿⠁⠙⢯⡓⠶⠒⠋⠀⠀⠀⠉⠀⢀⡴⠋⠀⣠⣾⢿⣏⡟⠙⠀⠀⣴⡿⢫⡅⠀⠀⠈⠻⣦⡀⠙⣿⡀⠀⠀⠀⠀⢿⣦⣄⣀⣠⡏⠀⠀⠀⢦⠹⣿⠀⠀⣿⣿⡿⢛⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣤⡾⢛⣿⣦⠙⢳⣜⣿⡾⠋⠀⠀⠀⣻⣴⠇⠀⢀⣼⡄⠀⠀⣀⣤⣾⣿⣿⣿⡄⠰⣇⢀⡝⡠⢌⣂⣤⠟⡀⣩⡿⠉⠛⠛⢿⣷⣦⣌⠀⠀⠀⠹⢦⣄⣠⣤⠤⣤⠀⣠⠟⠀⢀⡾⠉⣿⣿⡃⠁⠀⠀⣰⣿⡵⠋⠀⠀⢀⠀⣀⢸⣧⡠⣿⣿⠀⠀⠀⠀⠀⠛⢯⣿⣹⡇⠀⠃⠀⡀⢀⡿⠀⢸⣿⡯⢅⣼⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⡵⠿⢿⣯⠀⢀⣿⠟⠁⠀⠀⠿⠾⠿⠋⢀⣴⣿⣿⣧⣠⢾⣽⡿⡟⢠⡍⢈⣷⡶⠻⠿⠶⠾⠛⠉⣠⣶⡿⠋⠀⠀⠀⠀⠀⠙⢿⣿⣿⣦⡀⠀⠀⠀⠀⠀⣴⣿⠞⠁⠀⣰⠏⠀⠀⢻⣿⡇⠀⠀⢀⡼⠋⠀⢀⡴⣾⣭⠶⠋⣼⣿⠀⣿⡇⠀⠀⠀⠀⢦⣄⣀⠈⠉⠛⣦⣄⣠⡶⠛⠀⢀⣼⣿⣷⡿⠁⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣀⣼⣿⣿⡿⠋⠀⠐⠶⠶⠶⠀⢀⣾⠟⣻⣋⣽⣿⣴⠿⠿⢴⣤⠟⡌⠧⢐⣴⣷⣶⣶⣤⣶⠟⢻⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣌⣳⣝⣶⡶⣄⡀⡾⠟⠁⠀⠀⣰⣿⠀⠀⠀⠸⣏⣿⣀⣠⣿⡀⢀⣲⣿⠛⣉⣀⣠⣾⠟⢃⣼⠟⠀⠀⠀⠀⠀⠀⠈⠉⠙⠛⢋⣩⡽⠋⠀⠀⠀⢸⣿⣿⢿⣀⣶⠇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⢏⣼⡿⢋⣵⠿⠛⢺⣦⣾⡿⠶⢈⣴⠟⠁⠀⠀⠉⠁⠀⢀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⠙⠻⢧⡙⣷⠀⠀⠀⠀⢠⣿⣷⠀⠀⠀⠀⠈⣻⠏⠁⢸⡿⠛⠉⠻⣶⣤⣉⣉⣤⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣋⣁⣀⡀⢀⣀⠀⢸⠏⠁⠘⣿⡿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣻⡇⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⠷⠛⢋⣴⡟⣉⣞⡴⠛⠉⠉⣰⣾⡿⠓⠆⠀⢀⠀⠀⠀⠀⣾⡇⠀⠀⠀⠀⠀⢢⢹⡄⠀⠀⠀⠀⠀⠳⣄⠀⠉⠁⠀⠀⠀⠀⣾⢻⣿⡄⠀⠀⢠⡞⢉⣤⣾⣏⠀⠀⠀⠀⠀⠈⠉⠉⣉⣀⣀⠀⠀⠀⠀⠀⠀⢠⡴⠶⠾⠛⠛⠋⠙⠛⠛⣿⣷⡾⣿⣥⡀⢀⡿⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠴⠖⠲⠶⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡴⠋⠀⣹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⣶⣤⣋⢁⠢⡁⡄⠄⢀⡴⠞⢿⣏⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠀⠀⠀⠀⠀⠀⠘⠻⠇⠀⠀⠀⠀⠀⠀⠙⣆⠀⠀⠀⠀⠀⠀⣿⠸⣏⢻⠀⠀⠀⣧⣀⣿⠈⠻⣆⡀⠀⠀⠀⠀⠀⠸⠀⠀⣹⠇⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⢀⣀⣴⡏⠘⢻⣿⣯⠞⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣴⠞⠋⠀⠀⠀⠀⠀⣸⣾⡅⠀⠀⠀⠀⠀⣀⣤⠶⠛⣁⣤⡵⠶⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⣭⣇⣳⣴⡴⠾⠋⠀⠀⠀⠙⢦⡀⢿⡙⠦⣄⠀⠀⢺⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⣿⠀⠘⠿⣷⡄⠀⢸⡟⢿⡀⠀⠈⠛⠷⣤⣄⣀⣀⣤⣤⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⠶⠾⣿⡟⢻⣿⣀⣤⡼⠛⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⣠⡾⠉⢸⠆⠀⠀⠀⠀⢿⢻⣴⠟⠉⢁⣴⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡙⢻⡁⣀⣀⣀⣀⣀⣀⣀⣀⣙⣢⣛⣀⣌⣦⣀⣺⡧⠀⠠⠰⠶⣄⠀⠀⠀⠤⠤⠤⠤⠤⣤⣤⣤⣄⢻⡄⠀⠀⠀⠀⣿⣆⠀⠀⠀⠹⣦⡴⣿⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣴⠶⠶⠶⢦⣴⣶⣾⣿⠾⠷⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢰⠏⠀⠀⢀⣀⣴⡾⠟⠉⠀⠀⢸⡁⣀⡀⠀⠀⢸⠛⣿⠀⠀⢸⠁⠉⠻⣷⡄⠀⠀⠀⠀⣴⣶⣖⢶⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⡿⠶⠆⠒⠲⠶⣾⣷⠴⣶⠂⣶⣤⠶⠶⠆⣤⡄⠘⡾⣇⠀⠀⠀⢀⣾⣏⣻⣆⠀⠀⠈⢷⡹⣯⣷⣸⡆⠀⠀⠀⠀⠀⣀⣤⠶⠚⠛⠉⠉⠀⠀⠀⠀⠀⠀⠈⣿⢀⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠙⢻⣿⠛⠋⠉⠀⠀⠀⠀⠀⠘⣿⠫⡿⢿⣶⣿⠀⢻⡖⠲⠒⠲⠶⣾⣼⣷⣀⣀⠀⢰⣿⣟⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣷⣖⢀⣈⣄⣄⣈⣬⣆⣉⣼⣃⣤⣤⣄⣰⣿⣿⡀⢻⡗⠀⣠⠞⠋⠁⠀⠀⠈⠳⣄⠀⠈⢻⡽⣜⣷⢷⡀⠀⣀⡴⠛⠉⠀⠀⠀⠀⠀⣀⡴⠃⠀⠀⠀⠀⠀⣿⣼⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣅⠀⢻⡞⢦⡀⠳⣄⡀⢀⣼⣿⠏⠀⠀⠉⢻⠻⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠿⠓⠛⠛⠛⠛⠛⠛⠛⠛⠛⠀⣿⣿⣿⡇⢈⣷⣸⡏⠀⠀⠀⠀⠀⠀⠀⠈⠳⢦⡀⢷⣿⣿⣿⣅⡼⠉⠀⠀⠀⠀⠀⠀⠀⡴⠟⠁⠀⠀⠀⠀⠀⢠⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠇⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⢧⣸⡇⠀⠛⠶⣤⣽⣯⠷⠋⠀⠀⠀⠀⣾⠿⣶⣬⠉⠛⠿⢿⣿⣿⣭⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢀⠄⡐⠈⠔⠠⢁⠂⣁⠢⠌⡀⣾⣟⣼⣿⣿⣾⣿⡏⠙⠳⢦⣤⣤⣤⣀⣀⡀⠀⠀⠉⠳⢾⡇⢻⡿⠀⠀⠀⣄⠀⠀⠀⠠⠈⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢰⡟⠀⢀⠂⢀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠞⢃⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠿⣇⢹⣿⢷⡄⠻⢦⡬⠟⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⣀⣀⣈⠀⡀⢀⠂⠀⠂⢀⣾⣯⣿⣿⣿⣿⣿⣧⣷⠀⠀⠀⠸⡆⠀⠀⠉⠉⡟⠙⠓⠶⣾⠁⠈⡗⠦⣤⣤⣿⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⡟⢰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣿⠁⠀⡂⠀⢂⠀⠀⠀⠀⠀⠀⢀⡼⠋⢠⣼⠇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣏⢿⡔⢻⡌⣏⢈⣿⠲⣶⡷⣶⣦⡙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⡠⠀⢀⠠⠀⢂⠰⠀⠌⠰⢁⣸⣿⣿⣿⣿⣿⣿⣿⣿⡼⣧⠀⠀⠀⡇⠀⠀⠀⠀⣿⠀⠀⠀⣿⣦⠀⢠⣿⣻⣿⣽⣳⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣿⠛⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣿⠃⢀⠠⠁⠀⠎⠀⢀⠀⠀⣠⡴⠟⠀⣠⡾⠃⠀⠀⣰⠀⠀⢀⠀⠀⠀⢹⣿⢻⡈⣷⡝⣷⢹⡌⢿⡇⠸⣿⠛⠋⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⣀⠀⠀⡀⢀⠀⠤⠀⡀⡴⢀⣼⣿⣿⣾⣿⣿⣿⡿⠿⠿⠿⣿⣇⣀⡼⠁⠀⠀⠀⣰⠏⠀⠀⠀⣹⣿⣶⣻⣼⣮⣻⣿⠛⠉⣸⣧⠀⠀⠀⠀⠀⠀⠀⠀⢀⢹⣺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢸⣏⠀⢠⠀⠠⢉⠄⠐⠀⠠⠈⠁⢠⣤⡶⠋⠀⠀⢸⡄⣿⠀⢀⡞⠀⠀⠀⠘⢿⡾⣇⢹⡖⢸⡎⣷⢸⣷⠀⢹⡅⢈⠢⣀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣇⠀⠀⡀⠈⡄⠡⢰⠇⢸⣿⣿⣿⣿⣿⣿⠣⣅⠀⣔⢲⣄⢈⠀⠀⠀⠀⠀⡼⠁⠀⠀⠀⣰⠏⠹⡿⣯⣿⣹⣿⣧⣼⣯⣍⠈⢳⡄⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢻⡜⢿⣄⣂⡀⠄⡀⣂⣈⣀⣧⣤⠾⠟⠉⠀⠀⠀⠀⣾⣿⣿⣦⢾⡇⠀⣴⠃⠀⠘⣷⢿⡈⣷⠸⣧⢸⣇⢿⣇⠀⣷⠂⠄⡉⢣⣄⠈⠙⢿⣿⣿⣿⣿⣿⡿⣿⣯⠁⠀⠀⠒⠻⣆⠀⠠⠡⠠⠑⡈⠃⢸⣿⣿⣿⣿⡟⠈⢣⡈⠄⠈⣄⣹⡄⢦⠀⠀⠀⠘⠁⠀⠀⠀⣰⠇⠀⠀⠉⠛⠛⠿⠿⢿⣿⠀⠈⠙⣤⣹⣦⡄⠀⠀⠀⠀⠸⣏⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣬⠻⣾⠉⠛⠛⠛⠛⠛⠛⠉⠉⠀⠀⠀⢄⠀⠀⠀⠀⠀⠀⠋⠃⣾⣤⣾⠃⡄⠀⠀⢻⣾⣇⢸⣧⣿⡆⢻⡘⣼⡆⠘⣧⠂⣁⠂⡉⠷⣤⡀⠘⢿⣴⣿⣿⣿⡟⢻⣷⡀⠀⢠⡄⠘⠷⣄⠀⠀⠀⠠⢥⠈⠻⣿⣿⣿⠀⡀⠀⢃⣠⣤⣦⣬⣄⣈⡀⠀⠀⠀⠀⠀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢶⣤⠞⣿⠟⢧⡙⠲⡄⠀⠀⠸⣿⢻⣿⣳⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣈⢷⣿⡄⠀⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠃⠀⠀⠀⠀⠀⠀⠰⠟⣽⠃⠀⡇⠀⠀⠸⣿⣿⡌⣿⡇⢿⡌⣇⢫⢳⠀⠹⡇⢀⠒⡀⠂⠄⡙⠷⠀⠙⣿⣿⢿⣿⣿⣿⣿⣦⡙⠃⠀⠀⠘⣷⣦⡀⠀⠀⠀⠀⠈⠛⠃⠀⡐⢀⣼⣿⣿⡿⣿⣿⣿⣿⣆⢠⡤⠴⠿⠵⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⡃⠀⠀⠙⢦⡜⢦⡀⠀⢸⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢉⢳⣿⣿⡀⠀⠲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠋⡄⠀⡇⠀⠀⠀⣿⣿⣧⠘⣿⠸⣷⢹⣾⡞⣇⠀⢻⡀⠦⠐⠉⠀⠐⠀⠀⠀⠘⣿⠟⢻⣼⣿⣍⣻⣿⣿⣶⣤⣼⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⢻⣐⡺⢿⠿⣿⣿⣼⣿⣿⣷⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢶⣄⠀⠀⣹⣷⣽⢦⡸⢿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⠛⢮⣿⣟⡳⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡴⠋⠙⠛⠂⠈⠁⢀⣿⡜⡿⠒⠛⠲⠿⣿⣿⠇⢻⣄⢹⣎⣿⣿⢻⡄⠈⠿⣤⣀⠀⠀⠀⠀⠀⠀⠀⠈⢷⣾⣛⣹⣿⠟⣛⣿⣿⠛⠻⣿⣿⣶⣾⣿⣶⣾⡟⠀⠀⠀⢿⠋⠋⢓⣻⣿⣿⣿⣿⣿⣿⣇⠀⠀⣠⣄⠀⠀⠀⠀⠀⢀⣤⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⣜⣷⢋⡿⢷⣉⢿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⠛⠷⣬⣛⠛⢦⣄⣤⢤⣄⣠⡾⠋⠉⠀⠀⠀⢀⣠⠴⠚⠉⠉⣷⢹⡄⠀⠀⠀⠸⣿⣷⣌⠻⣎⣿⣿⣏⠛⢷⡀⠀⠀⠈⠙⠂⠀⠀⠀⠀⠀⠀⠈⢿⣿⣟⣿⣿⣿⣤⢈⣿⣿⣿⣿⣋⣿⡯⠿⣿⣿⣿⣟⣓⣺⣷⣄⣹⡟⢻⣿⣿⣿⣿⣿⢿⡄⢀⣿⠟⠀⠀⠀⢀⣠⣾⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠿⣤⠀⣙⢧⡈⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠲⢭⣅⣤⣬⣉⣤⣴⡤⠤⠶⠚⠋⠁⠀⠀⠀⠀⠸⡇⢷⡀⠀⠀⠀⠹⠿⣿⣷⣯⣼⣷⣿⣷⣬⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⠛⢧⣴⠯⢻⣾⢭⣽⣟⣛⣿⣿⣿⣷⣦⣬⣿⢿⣻⣿⣿⣿⣿⣦⣤⣶⣾⣟⣡⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣜⣿⣷⣶⠉⠻⢷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⡿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠈⢳⡀⠀⠀⠀⠀⠀⠙⠛⠻⢿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠳⣶⣾⠛⣿⠿⣿⣿⣶⣴⣿⣧⣀⡁⢘⣿⣿⣿⣿⣙⣻⣟⣛⣿⣿⣿⡿⢿⣿⣦⣭⣿⡿⣿⠟⣿⡃⠀⢀⣠⣾⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣼⣧⣧⠀⠀⠙⠷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⡹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠃⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣟⣛⣻⣿⣷⣦⡀⠀⠀⠓⠆⠀⠀⠀⠀⠀⠀⠤⠤⠂⣸⣟⣟⣿⣾⣟⣛⣯⣽⣿⣿⣦⣿⣼⣿⣿⣿⣿⣿⡄⠈⠁⠉⠉⠉⠉⠉⠉⢉⠙⣷⣿⣿⠿⢾⠿⠿⣿⣿⣿⣶⣶⣶⣶⣾⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢷⣄⠀⠀⠈⠙⢦⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⣸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣟⠻⣿⣿⣿⣿⣿⣿⣷⡾⢷⣶⣶⣶⣶⣾⡟⡛⢛⡿⣿⣿⣿⣿⠟⢯⠀⠀⣀⣷⠿⣿⣿⠿⠿⣿⣿⣿⡷⠻⣿⡿⡇⠀⠀⠀⣿⢻⡇⣿⠿⣿⠿⣿⣏⠀⠉⢿⣿⣿⠛⢻⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠈⠓⠦⣄⣀⡀⠀⠀
⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢡⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡏⠉⣿⣿⣿⣿⣿⣧⡖⠋⢹⣿⣿⣿⣿⡆⠁⠈⣿⣿⣾⡏⠙⣿⣿⠀⠀⢺⣿⣶⣿⣿⣿⣾⣿⣿⣿⣿⠃⣿⣧⡇⢲⣶⠀⣿⣼⣷⣿⠀⢸⣧⣽⣿⠀⠀⠈⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣦⠀⠀⠀⠀⠀⠀⠉⣿⣿⡆
⠀⠀⢀⠀⠀⠀⠀⠀⠠⠂⠀⠀⠀⠀⠀⠀⠀⣇⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣏⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⢷⣤⣸⣿⣿⣿⣿⣧⡈⠀⣻⣿⣿⣿⣿⣷⣿⡆⠀⢀⡹⠿⣻⣯⣽⢻⣿⣿⣿⣿⠁⢹⣿⣇⠸⣿⡁⢻⣿⣿⣿⣾⣿⣿⣟⣟⠀⠀⢀⣿⣛⣻⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣦⠀⠀⠀⠀⣀⣤⣿⡿⠁
⠀⠀⠀⠀⠀⠀⠀⢀⡗⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⡇⠀⠀⣀⡀⠀⠀⠀⠀⠀⣼⣯⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⢿⣿⣿⣷⣆⣸⣷⣦⣿⣯⣿⣯⣭⣽⣿⣿⠀⠈⠉⠉⢸⣿⡇⠀⠈⠀⣿⣿⣽⣿⣭⣭⣿⣿⣿⣿⣿⣿⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⢀⣼⣿⣿⠋⠀⠀
⠀⠀⠀⠀⠀⠀⣰⡏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⡶⠚⠋⠉⠙⣟⣳⠦⣄⢀⡿⣸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣴⣿⣿⣿⣿⣿⠋⢙⡿⠿⠿⠿⢿⣿⣿⣿⣄⣠⣄⣤⣴⣦⣶⣴⣶⣤⣿⠟⠛⠛⠛⡛⠛⠛⠋⠙⠿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣴⣿⠟⠋⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠻⣦⣄⣠⣴⣶⣿⣶⡦⣴⠞⠁⠀⠀⠀⢠⣤⣿⣿⣿⣾⣿⢧⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⣼⣿⡯⣅⠀⠀⠙⣿⣿⡟⠁⠀⠀⣠⡾⢻⣿⣏⢉⣿⣷⣄⣈⣳⣶⣶⣬⣿⠏⠀⠄⠀⠀⠀⠀⠀⠀⠀⠰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠉⠋⠉⠛⠿⢿⣿⣿⣿⣆⠀⣀⣀⠀⢹⣿⣯⣥⣠⣿⡇⣾⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⢸⣿⣄⣿⢂⣺⣿⣇⣸⠇⠀⢀⡾⠋⠀⠈⠙⠿⠛⠛⠛⠛⠛⠛⠉⠉⠉⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⣛⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯⢻⣯⡙⠻⠿⢻⣿⡿⠿⠛⠛⠉⢰⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣆⡀⢉⠙⣿⣟⠁⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⡤⢠⣤⣾⣦⣤⣤⣄⣠⣔⣤⣀⣜⣛⣀⣀⣤⣤⣤⣤⣤⣼⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⢹⣯⢑⡃⢣⡿⢀⣴⣾⠀⠀⢸⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⡿⠿⠿⠿⠿⠿⠿⠿⠛⠟⠻⠛⠿⠟⠻⠛⠻⠻⠉⠋⠉⠍⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⢠⣻⠀⠀⠀⠀⠀⣀⢀⠀⢀⢸⣇⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣎⣿⣷⣜⢸⣷⣼⣿⠏⣤⣤⣶⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⠀⠀⠀⢀⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠀⢴⣖⣶⣿⣿⣿⣦⣿⣿⣧⣿⣇⢳⣤⣤⣤⣤⣴⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⡿⣟⣿⡿⢿⡿⢻⣿⣿⣻⡷⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⣠⡶⠆⠀⠀⢀⣀⣤⠀⠐⠀⢨⡷⠖⠒⠾⠋⠷⣻⠏⠀⠀⠀⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⣧⡏⠀⠀⠻⠿⠿⠿⣿⣿⣿⡟⣿⡿⣿⣿⣿⠻⡟⠛⠛⣟⡛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠹⠿⠷⠟⠛⣏⠉⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢀⣴⠞⠋⠀⠀⢀⣠⡿⠋⠉⢀⡀⣴⡟⢁⣀⡀⣀⠀⠣⠛⠀⢀⣀⣀⣤⣶⣦⣤⣬⣿⣶⣶⣶⣿⣿⡇⣠⣤⣄⡀⠀⠀⠹⡿⠛⣧⠸⠁⠋⠈⠹⠞⠻⠶⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣷⣶⣴⣶⣷⡿⠿⠷⢾⢶⢻⡿⣿⡿⠶⢚⡟⠿⣿⣟⣻⣿⣿⢿⣯⡝⠉⢀⣀⣤⣄⡀⠀⠀⢀⣿⠙⣧⡀⠈⠹⣦⣠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣥⡄⣠⣾⠟⣠⣴⣼⣿⡅⠀⠀⠀⢀⣼⠆⠀⠀⠠⣄⡠⠤⣤⡀⠀⣀⣠⣴⠞⠛⠉⠙⠛⣷⢦⣬⣿⡀⠀⠀⠀⠀⢻⡿⢏⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢠⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣿⣷⡾⣿⡽⢧⣉⣵⣶⣟⢠⡞⠁⠀⠠⡴⣾⢟⣡⣼⣯⣱⣿⡿⠋⠀⠀⠀⠀⠀⠀⢙⡳⠾⢝⢻⡄⠀⠀⠀⠛⠛⢦⡉⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣞⣵⣏⣼⣋⣀⣿⣿⣻⣿⡿⠿⠶⣦⣤⣤⣤⣾⣿⣡⡤⠈⡿⣿⢤⡀⠀⠀⠀⠀⠀⠀⠀⠉⣁⣈⡛⢷⣶⢦⡀⠀⠀⠀⠙⢾⣿⡍⠉⠛⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣾⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⠋⠉⢿⡋⠈⠁⠉⠉⡿⠟⠛⠉⠠⡴⣤⣀⠙⢋⠡⠿⠉⠛⠻⣶⣶⣿⠉⣿⣷⣠⣤⣤⣤⣀⠀⠀⣿⣿⣿⣧⢻⡎⠳⢦⣤⣄⡀⠈⣁⢹⠃⠀⠛⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣉⣻⣿⣿⣿⣿⡟⠳⣄⠀⠀⠀⠐⠀⠀⠸⢧⣄⡀⠀⠀⠀⠀⣭⣷⣚⣛⣿⣦⣼⣗⣉⣙⣙⣷⣿⣗⣿⣿⣿⣿⣿⣷⠛⣻⢻⣿⠿⢿⣧⣀⡀⠀⠉⠛⠉⠙⠳⡦⠤⠤⠤⠴⠚⠛⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣶⡿⠿⢿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣾⡿⠟⠋⢸⢿⡿⢟⡛⠞⠃⠀⠀⠀⠴⠞⠀⠀⠉⠉⠓⠀⠐⠷⠿⠿⠛⢉⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⠿⠄⠼⠏⣿⡖⠨⠉⠉⠙⠃⠀⠀⢀⣀⣀⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠴⠞⣛⣫⣿⣿⣟⣿⠿⠿⠛⢯⣽⠿⣿⣿⣿⣽⣿⠛⠉⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠄⠀⡀⠀⠀⠀⠀⠀⠰⣾⣟⣻⣿⣿⡟⠛⡿⠿⠿⠟⠛⠩⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠷⠖⠀⠀⠚⠃⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠊⠉⠁⠀⠀⠀⠀⠀⠖⠋⠉⠁⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠛⠛⠉⠉⠉⠀⠀⠀⠀⠀⠉⠙⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⢾⣿⣶⣾⣭⡿⠃⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
                ''')
                print("The ghosts of lost, dead pirates shoot out, along with a handful of gold coins")
                print("Before you can react, they all come at you, daggers and swords first")
                input("The last thing you hear before pain explodes everywhere is 'PROTECT THE TREASURE'")
                goto armydeath
            if rightchesttwo == 'no':
                print("You attempt to walk back, before breaking into a jog, then a run, then a sprint")
                print("It feels like years until you are out.")
                input("You go straight instead and forget about the chest")
                goto gobackseven
            else:
                input("That is not a valid answer, please try again")
                goto cheststillbad
    if Brit == False:
        print("")

label deadturn
if deadendturn == 'straight':
    if Brit == False:
        print("Even just as you pass the turn, a bad feeling roots its way into your heart")
        print("Thank god you didn't turn")
        input("Wondering what awaits you, you continue down the road")
        goto gobackseven
    if Brit == True:
        print("'You feel it too right?' These are the first words Brit has said to you")
        print("since you joined together, and these are said just as you pass the turn")
        print("that you decided not to go to.")
        print("")
        print("You nod, your muscles subconsciously tensed from the unpleasant feeling")
        input("in the air around the chest in the turn")
        print("You return to an uncomfortable silence as you walk on for a few minutes, until")
        print("she suddenly whispers 'stop' nervously.")
        goto someonedies
    else:
        input("That is not a valid answer, please try again")
        goto deadturn
        #Note to self: Brit or the character needs to die here so the ending is better - yes means you die, no means brit does
        label someonedies
        britdeath = input("Do you stop? yes/no ")
        if britdeath == 'yes':
            print("Brit, quick as a flash, whips out a gun and shoots you, a cruel expression")
            print("creeping over her face.")
            input(Style.bold+"'You shouldn't have trusted me for so long'"+ Colour.reset)
            goto Britdeath
        if britdeath == 'no':
            input("Brit suddenly collapses")
            print("An arrow from nowhere narrowly misses you and pierces Brit's heart")
            input("As she bleeds out, you hear a small sob escape her and all too soon, her body goes limp")
            clear()
            print(Colour.grey+r'''
            ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠖⠶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡶⠤⣤⣀⡀⢠⠏⠀⡄⠀⢹⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⣠⠀⠀⡉⠹⠏⠀⠀⠙⣆⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⣀⠘⠳⡄⠘⡜⣄⡘⡜⡄⢌⢿⠛⠶⢤⣄⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠶⢤⡔⠹⡜⣜⣞⣜⣎⢮⢣⡀⣰⣿⣿⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠁⠱⡹⣼⣾⣾⣌⣧⢳⣳⣯⣿⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⣼⠇⠀⠀⠐⣿⣿⡟⠈⠉⠛⠿⠾⠏⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠛⠉⠉⠉⠉⠉⠉⠉⠉⠙⠻⠷⢶⣶⣦⣴⣟⠀⠀⠀⣾⢧⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣼⣧⣀⣟⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠿⢿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠁⠀⠀⠈⠿⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢷⣿⡻⢶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠁⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣦⡉⠛⢷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣴⠋⠹⣿⣯⢙⠺⣿⡷⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⢸⠀⠀⢷⣿⣿⣟⢟⣿⣾⣆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⠀⢠⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠁⠀⢠⡟⢎⠻⣷⣕⠼⢿⡆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠃⠀⠀⠀⢀⣾⣾⣿⣿⣦⠀⠀⠀⢠⣄⣀⡀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠈⠓⣌⢻⡳⣼⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⢀⣾⣽⣿⣬⣿⣿⠀⠀⢀⡿⢠⣹⠇⠀⠀⣼⣯⢿⣷⣦⡀⠀⠀⠀⠀⠀⢠⣿⠀⠀⢐⢌⠳⣝⣿⡟⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⢀⣾⢉⣿⣿⣿⠿⠋⠀⠀⣼⠇⣛⡿⠀⠀⣼⠃⢹⠿⣧⣽⣷⡄⠀⠀⠀⠀⣸⡷⡄⠀⠈⠳⡑⣾⣿⣲⠆⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠇⠀⠀⠀⢀⡞⢀⡟⣿⢹⣷⠀⠀⠀⢠⡏⠀⣿⠃⠀⣸⠇⢡⣿⣿⣏⣬⣾⠃⠀⠀⠀⢀⣿⢄⠙⢄⠀⣀⣼⢿⣟⣿⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⠀⠀⠀⠀⢼⣇⡾⠀⣿⡰⣿⠀⠀⠀⡼⠀⣼⠃⠀⢀⡏⠀⣿⡟⠛⠛⠋⠀⠀⠀⠀⠀⢸⠇⠀⠳⣬⣾⣻⣿⣿⣿⣿⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠀⠀⠀⠀⠀⠀⠈⠁⠀⠛⠿⠿⠀⠀⠸⢷⣼⠏⠀⠀⣾⣠⣼⡟⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⠰⣠⣾⣿⣿⠛⢧⡘⢦⣽⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠛⠿⠁⠀⠀⠀⠀⠀⠀⠀⢀⣾⡇⣾⣿⣿⠉⣀⠑⢄⠙⠦⣿⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⡾⠋⣻⡛⢻⡇⠀⠱⣌⢷⣄⠱⢤⡏⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⠔⠀⡟⠙⢮⣿⣄⠱⣜⢦⡙⢦⣼⡇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⢿⣇⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠠⠟⡀⠀⢰⣧⣀⢌⠻⣿⡧⣌⠣⡉⠲⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠘⠿⠶⣶⡏⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢦⡀⠈⢢⣼⠁⠈⢦⡑⣿⣧⡈⠳⣌⢲⡏⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣰⠇⠈⠢⡀⠀⢻⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣄⠀⠙⣶⣼⣟⠂⠀⣄⠹⣝⣿⣟⢧⡈⣹⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢰⡟⣄⠀⠀⠈⠢⡘⠻⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠈⠳⣴⡟⢹⣿⢳⣄⣮⣳⣼⣿⡈⠳⣍⡿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⡿⠁⠈⠢⣄⠀⣀⠀⠀⠀⠀⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢢⡀⠓⢄⠸⣷⣯⣧⠘⢯⣻⣿⣟⣇⠙⢄⣸⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣾⠃⠀⠀⠀⠈⠳⣌⠳⢄⡈⠢⡀⠙⠢⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣄⠀⠀⠙⢦⡈⣿⣿⡟⢧⡰⣄⠻⣿⢯⣫⡙⢦⣿⠁⠀⠀⠀⠀⠀⠀⠀
⢀⣠⣤⣤⣼⣏⣀⣤⣤⣤⣤⣀⠈⠁⠀⣁⣦⠬⠶⠶⠾⣦⣤⣄⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⢌⠑⠄⠀⠀⣩⣿⡿⠁⠀⣕⢌⠳⡈⠳⣝⢭⢺⡟⠀⠀⠀⠀⠀⠀⠀⠀
⠉⠁⠀⣀⣰⣯⣀⡀⠀⢠⠟⠉⠉⠉⠿⣧⠀⠀⠀⠀⠀⠀⢹⡌⠳⠄⠑⢦⡀⣀⡴⠖⠒⠻⠶⣵⣄⡁⠀⣿⢿⠉⠳⣔⣜⢮⡳⣝⢦⠘⢦⣿⣃⣀⣀⣀⠀⠀⠀⠀⠀
⠀⠀⠉⠀⠀⠀⠀⠙⠷⠌⠀⠀⠀⠤⠖⠛⠛⠷⢄⣠⠖⠛⠛⠛⠻⣶⡟⠉⠉⠙⠛⠷⠦⠀⠀⠀⣙⡿⠵⠿⢾⣦⣂⡈⢫⡷⠽⠾⢷⣽⣤⣟⣁⡀⠀⠉⠛⠓⣂⣀⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠃⠀⠀⠀⠀⠀⠙⠻⠋⠀⠀⠀⠀⠀⠿⠋⠉⠻⠷⠤⢞⢉⡉⠉⠉
            '''+Colour.reset)
            print("You didn't particularly like her, but are sad to see a human life taken so easily regardless")
            input("After a few respectful gestures, you leave her and continue your journey")
            Brit = False;
            goto gobackseven
        else:
            input("That is not a valid answer, please try again")
            goto someonedies
            
else:
    input("That is not a valid answer, please try again")
    goto gobacksixfive
        
#Scene 7 - notetoself: if they don't escape, kill them, not enough time, door is portal so it looks weird
label gobackseven
clear()
print(Colour.orange+r'''
⢰⣖⠚⠿⠿⠿⠿⢶⣶⣶⣶⢶⣶⣶⡶⠶⣿⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⠶⢶⠶⢶⣶⣶⠶⣶⣾⣿⠷⠿⠿⠿⠿⠗⠒⠒⠒⠖⠺⢷⡇
⠸⢧⣤⣼⣷⣶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣴⣿⣧⣤⣤⣤⣤⣤⣤⣤⡼⡇
⠀⠀⡿⠿⢿⣿⡿⣿⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⠀⠀
⠀⠀⡇⠀⢘⣿⡁⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣙⣿⡀⠀⣿⠀⠀
⠰⣿⢿⢿⡿⣿⡷⣿⠸⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿⣷⠀⢸⣿⣿⣿⡇⢰⣾⣿⣿⣿⣷⡇⠀⣿⣿⣿⣿⣿⡆⠀⢿⢿⡿⠷⠿⢿⣿⠆
⠀⣿⣿⠈⣷⢼⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⡇⠀⠀⢿⡇⠀⢻⢸⡇⠀⠀⠀⣿⠀
⠀⣿⣿⣴⠏⣸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⠛⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⠁⠀⠀⠘⠀⠀⢸⢸⡇⠀⠀⠀⣿⠀
⠀⣿⣿⣿⢻⣿⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⠀⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⠀⠀⠀⠀⠀⠀⢸⢸⣿⣩⡍⠹⣿⠀
⠀⣿⣿⣿⠀⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⠀⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⠀⠀⠀⠀⠀⠀⢸⢸⡇⣿⣧⠀⣿⠀
⠀⣿⣿⣿⠀⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⠀⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⠀⠀⠀⠀⠀⠀⢸⢸⣿⡿⣿⠀⣿⠀
⠀⣿⡟⢸⡄⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⣿⡇⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⣿⡀⠀⠀⢸⡀⠀⢸⢸⣿⡇⢻⠀⣿⠀
⠀⣿⡇⢸⡇⢸⡇⣿⢰⣿⣷⣶⣶⣿⣧⠐⣿⣷⣶⣶⣿⣿⠂⢸⣿⣿⣿⣧⣼⣿⣷⣶⣾⣿⣷⢰⣿⣷⣶⣶⣿⣷⠀⢸⢸⣿⡇⠘⠀⣿⠀
⠀⣿⡇⢸⡇⢸⡇⣿⠀⠀⠀⠀⠀⠀⠈⠀⠀⢠⣴⣷⣾⣿⣷⢸⣿⣿⣿⣿⣿⣿⣷⣶⣄⠉⠉⠈⠁⠀⠀⠀⠀⠈⠀⣿⢸⣿⡇⢀⠀⣿⠀
⠀⣿⡇⠀⠀⢸⡇⣿⠀⣤⣤⣤⣤⣤⡆⠀⣶⣾⣭⣤⣬⣿⠋⢸⣿⣿⣿⡿⠛⣯⣤⣬⣭⣴⡾⠀⢠⣤⣤⣤⣤⣴⠂⣿⢸⣿⡇⢸⠀⣿⠀
⠀⣿⡇⠀⠀⢸⡇⣿⠀⣿⡏⠉⠉⢻⡇⠀⢹⣿⠉⠉⢹⣿⠀⢸⣿⣿⣿⡇⠀⣿⡏⠉⠉⣿⡇⠀⢸⣿⠉⠉⠙⣿⠀⣿⢸⣿⡇⢸⠀⣿⠀
⠀⣿⡇⠀⠀⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⢸⣿⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⢸⡏⠀⠀⠀⣿⠀⢹⠀⣿⡇⠀⠀⣿⠀
⠀⣿⡇⠀⠄⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⢸⣿⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⢸⡇⠀⠀⠀⣿⠀⢸⠀⣿⡇⠀⠀⣿⠀
⠀⣿⡇⠀⠀⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⢸⣿⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⢸⡇⠀⠀⠀⣿⠀⢸⠀⣿⡇⢸⠀⣿⠀
⠀⣿⡇⢠⡄⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⢸⣿⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⢸⡇⠀⠀⠀⣿⠀⢸⢀⣿⡇⠠⠀⣿⠀
⠀⣿⡇⢸⡇⢸⡇⣿⠀⣿⡇⠀⠀⢸⡇⠀⢸⣿⠀⠀⢸⣿⠀⢸⣿⣿⣿⡇⠀⣿⡇⠀⠀⣿⡇⠀⢸⡇⠀⠀⠀⣿⠀⢸⢰⣿⡇⢰⠃⣿⠀
⠀⣿⡇⢸⡇⢸⡇⣿⠰⣿⣷⣶⣶⣿⣇⠀⣼⣿⣶⣶⣾⣿⡀⢸⣿⣿⣿⡇⢸⣿⣷⣶⣶⣿⣧⠀⢸⣿⣶⣶⣶⣿⠀⢸⢘⡿⡇⣾⠀⣿⠀
⠀⣿⣿⣸⢀⣸⡇⣿⠀⠉⠉⠉⠉⠉⠉⠀⠉⠉⠉⠉⠉⠉⠁⢸⣿⣿⣿⡇⠀⠉⠉⠉⠉⠉⠉⠀⠈⠉⠉⠉⠉⠉⠁⢸⢸⡇⣷⣿⠀⣿⠀
⠀⣿⣿⣿⢹⣿⡇⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⡇⣿⡿⠀⣿⠀
⢀⣿⣿⣿⣤⣿⣧⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣼⣇⣙⣃⣀⣿⡀
⣼⣿⣿⣿⣿⣿⣿⣿⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣼⣿⣿⣿⣷⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣿⣿⣿⣿⣿⣿⣿⣧
⣿⠀⠀⠀⠀⠀⢸⣿⢋⣩⣭⣭⠭⠭⠿⠭⠭⠯⠭⠭⢭⣭⣍⣹⣿⣿⣿⡿⢉⣉⣉⣭⣭⣭⣭⣭⣭⣭⣭⣉⣉⣉⡉⣿⡟⠀⠀⠀⠀⠸⣿
⠿⠶⠶⠶⠶⠶⠾⠿⠾⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠷⠾⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠷⠿⠷⠶⠶⠶⠶⠾⠿
'''+Colour.reset)
print("After some walking, you encounter another choice. You can go right, through a giant")
print("set of double doors, or left, which seems to lead ton a whole array of new paths")
print("The door to your right has a ring of light at the bottom, and the paths look unnaturally glossy")
if route == True:
    print("The door is the way out, and it has no traps. Go through.")
finaldecision = input("Do you go through the door to your right or turn left to the wide expanse of hallways? right/left ")
if finaldecision == 'right':
    clear()
    print(Colour.yellow+r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣴⣶⣶⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢰⣿⡟⠛⠛⠛⠛⣻⠛⠛⠛⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⢹⣿⣀⣀⣀⣀⠀⠀⠀⠀⠀
⠀⠀⣠⣶⡾⠿⠿⢿⣿⣧⣤⣴⣶⣾⣷⣶⣶⣶⣶⣶⣶⣶⣶⣶⡶⠶⠾⠿⠿⠿⠿⠿⣿⡿⠛⠋⠛⠻⢿⣦⡀⠀⠀
⠀⣼⡿⠃⢀⣠⣤⣤⣈⣿⡏⠀⢠⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⡿⢿⣶⡄⠀⠻⣷⡄⠀
⢸⣿⠀⣼⡿⠋⠉⠉⠻⢿⣧⠀⢸⠁⠀⠀⠀⠀⠀⣀⣴⠶⠶⡆⠀⠀⠀⠀⠀⠀⡄⠀⣿⡇⠀⠀⠙⣿⡦⠄⣿⣧⡄
⢹⣿⠀⣿⡇⠀⠀⠀⠀⢸⣿⠀⢸⠀⠀⠀⠀⠀⠘⣿⣥⣆⠀⣷⠀⠀⠀⠀⠀⢸⠇⠀⣿⠿⠇⠀⣠⣿⠇⠀⣿⡿⡇
⠸⣿⡀⠹⣿⣄⠀⠀⠀⠈⣿⡄⢸⡇⠀⠀⠀⠀⠀⠉⠉⣿⠀⣿⠀⠀⠀⠀⠀⣾⠀⢸⣿⣠⣴⣾⠿⠋⣀⣼⡿⢡⠇
⠀⠹⣿⣆⡙⠻⠿⠶⣶⣶⣿⣧⠈⣇⠀⠀⠀⠀⠀⢠⡶⠿⠀⠻⠶⣦⠀⠀⢸⠇⠀⣾⣿⠟⢉⣤⣶⡿⠟⠋⠀⠉⠀
⠀⠀⠈⠛⠿⠿⣿⣷⣶⣬⡙⣿⣆⢹⡄⠀⠀⠀⠀⠸⣧⣤⣤⣤⣤⡿⠀⢀⡟⠀⢰⣿⠃⣴⣿⠛⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠃⢸⣿⣦⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠁⣠⣿⣿⣄⢙⣿⡆⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣶⣿⠏⠻⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⣁⣴⡿⠋⠘⠿⠿⢟⣱⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣶⣦⣤⣤⣤⣤⣴⣿⣿⡿⢫⡶⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠸⣿⣿⣿⣿⣿⣿⣶⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠆⠀⠀⢻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⠀⠀⢰⠸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣶⣶⣶⣾⣷⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣾⣿⣥⣤⣤⣤⣤⣴⣶⣾⣿⣷⣶⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⢀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣸⣿⣀⣠⣤⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠿⠿⠟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀  
    '''+Colour.reset)
    print("You won! Congratulations!")
    print("The door led to a small room with a pedestal")
    print("")
    print("Atop the pedestal is a shiny trophy")
    label ten
    trophytake = input("Do you take the trophy? It would be a constant reminder of your experience, but it is a trophy. yes/no ")
    if trophytake == 'yes':
        print("You take the trophy, and suddenly catch a whiff of a heavenly scent")
        print("The Blue Miracle Mushroom is inside")
        label eleven
        mushroomtake = input("Do you take the mushroom? It is worth a lot of money and will provide you and your family health. yes/no ")
        if mushroomtake == 'yes':
            label twelve
            mushroombite = input("Do you take a bite? yes/no ")
            if mushroombite == 'yes':
                input("It was a fake. It was poison. You die")
                goto poisondeath
            if mushroombite == 'no':
                print("You pocket the mushroom for later")
                input("Probably a good thing, you can savour it later")
                goto doctorwalk
            else:
                input("That is not a valid answer, please try again")
                goto twelve
        if mushroomtake == 'no':
            print("You place it onto the pedestal and take the trophy")
            goto doctorwalk
        else:
            input("That is not a valid answer, please try again")
            goto eleven
    if trophytake == 'no':
        print("Good choice.")
        input("You leave the trophy there on the pedestal. The Blue Miracle Mushroom was in the trophy")
        goto doctorwalk
    else:
        input("That is not a valid answer, please try again")
        goto ten
        
    label doctorwalk
    print("The evil doctor walks in, holding a mushroom that looks exactly like the one in the trophy")
    print("'This is the real mushroom. Here you go.")
    print("and congratulations, you're free to go'")
    label thirteen
    mushroomreal = input("Do you take this mushroom? yes/no ")
    if mushroomreal == 'yes':
        label fourteen
        realmush = input("Do you eat the mushroom straight away? It's the real one. yes/no ")
        if realmush == 'yes':
            input("You take a giant bite, feeling the power flow into you almost instantly")
            goto victory
        if realmush == 'no':
            input("You pocket it for later")
            goto victory
        else:
            input("That is not a valid answer, please try again")
            goto fourteen
    if mushroomreal == 'no':
        print("You decide memories are enough")
        input("'Goodbye doctor'")
        goto victory
    else:
        input("That is not a valid answer, please try again")
        goto thirteen

if finaldecision == 'left':
    label fifteen
    clear()
    print(Colour.red+r'''
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠤⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠉⣀⡤⠶⠤⠤⠤⠂
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⠖⠁⣠⠞⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⣤⡶⠖⠒⠒⠒⠚⠛⠛⠛⠛⠛⠚⠒⠚⠓⠒⠶⣤⣀⠀⠀⢀⣀⣶⣶⣿⣿⣷⣴⡋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣠⡾⠋⠁⠀⠐⠀⢀⡴⠶⢶⠖⠲⠶⠒⠶⡶⠿⣦⠀⠀⠀⠙⠷⣤⣼⣿⣿⣿⣿⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣴⠏⠀⠀⠀⠀⠀⠀⢻⣇⡀⠀⠀⠀⢀⠀⠀⠀⢀⣽⠀⠀⠀⠀⠀⠀⠘⠿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠏⡀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠙⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠁⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠂⣦⠀⠀⠀⠀⠀⢀⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡀⢀⠈⠛⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⡟⠀⠀⠀⠀⠀⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⠀⠀⠂⢨⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⣧⣴⢶⣆⠀⠀⠈⢻⣿⣿⣿⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣿⣿⣿⡟⠉⠀⠀⢸⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⣿⡀⠀⢹⡀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⣟⠀⠀⢸⠅⠀⠀⠀⠀⣿⣿⣿⣿⠋⠉⠀⠀⠀⠉⠻⣿⣿⣿⡟⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⡿⠀⠀⢸⠀⠀⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⣷⠀⠀⢸⡇⠀⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⢿⣄⢀⣼⠃⠀⠀⠀⠀⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⢀⣾⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⡀⠉⠉⠁⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣷⣶⣶⣶⣾⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠀⠂⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⡄⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣿⣿⣷⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢻⡄⠀⠀⠀⠀⠀⠙⠿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⠿⠛⠀⠀⠸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠙⢶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⡸⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠛⠳⠶⠶⠴⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    '''+Colour.reset)
    print("You turn left, but a door starts closing behind you.")
    lastdoor = input("Do you try to rush back, or do you keep going? The smell of oil is filling the room... back/keep going")
    if lastdoor == 'back':
        input("You run wayyy back, sliding under the door with ease, thanks to the layer of oil coating the floor")
        goto gobackseven
    if lastdoor == 'keep going':
        print("It's risky, but you keep going.")
        print("All of a sudden, when the doors are closed, oil sprays out from the roof, soaking everything")
        print("A spark from the roof hits the oil, and you realise a second too late.")
        input("The room, along with you, goes up in flames")
        goto fireorbombdeath
    else:
        input("That is not a valid answer, please try again")
        goto fifteen
    

        
label armydeath
clear()
input("So many injuries! You either bled out, or were cut in a lethal way")
goto death

label fireorbombdeath
clear()
input("You were blown up or burnt severely by the fire and died")
goto death

label shot
clear()
print(Colour.reset+"As you slowly bleed out, you hear a cheer in the background. Brit must've")
input("escaped already")
goto death

label Britdeath
clear()
print(Colour.reset+"You foolishly trusted Brit not to kill you straight away, and now you're paying the price")
input("Don't trust enemies")
goto death
    
label slayeddeath
clear()
input(Colour.reset+"You have been defeated in battle")
goto death

label gassed
clear()
print(Colour.reset+"You were drugged by a painless gas and Brit got out first")
input("You are not dead, just unconscious")
goto slow

label animaldeath
clear()
print(Colour.reset+"You were eaten or mauled to death")
input("Better luck next time")
goto death

label poisondeath
clear()
print("You were foolish and hasty")
input("You should've waited")
goto death

label death
print(Colour.red+r'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣤⣤⣴⣴⣤⣤⣤⣤⣤⣄⣀⣀⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣾⣿⣿⣿⣿⡿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠻⠿⣿⣿⣷⣤⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣴⣿⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣷⡄⠀⠀⠀⠀
⠀⠀⠀⠀⢠⣾⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⡄⠀⠀⠀
⠀⠀⠀⢠⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⡄⠀⠀
⠀⠀⢠⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣷⠀⠀
⠀⢀⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀
⠀⣼⣿⣿⠁⠀⠀⠀⢀⣠⣤⣶⣶⣶⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⢿⣿⣿⠀
⢰⣿⣿⡇⠀⠀⢠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠸⣿⣿⡇
⣾⣿⣿⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⣿⣿⣿
⣿⣿⣿⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⢀⣠⣤⣤⡀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⢸⣿⣿
⢹⣿⣿⡄⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⣠⣿⣿⣿⣿⣿⣦⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⣸⣿⣿
⠈⢿⣿⣿⣄⠀⠀⠙⠻⠿⢿⠿⠿⠛⠁⠀⠀⠀⢸⣿⣿⡿⠿⢿⣿⣿⡇⠀⠀⠀⠀⠀⠉⠛⠛⠛⠛⠁⠀⠀⠀⢀⣴⣿⣿⠏
⠀⠀⠻⣿⣿⣷⣤⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⢀⣤⣤⣤⣤⣤⣤⣶⣾⣿⣿⠟⠁⠀
⠀⠀⠀⠈⠙⠿⢿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⡿⣿⠿⠿⠿⠛⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⣿⣿⡇⠀⠀⠀⣠⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⣿⣿⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣇⠀⠀⢠⣿⣿⣏⠀⢀⣾⣿⣧⠀⠀⢰⣿⣷⡀⠀⠀⣰⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣷⣾⣿⣿⣿⣿⣶⣾⣿⣿⣿⣶⣶⣿⣿⣿⣿⣶⣾⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠛⠋⠁⠙⠻⠿⠟⠋⠈⠛⠿⠿⠛⠋⠙⠛⠿⠟⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
             
    '''+Colour.reset)
input("You failed")
goto end

label slow
print(Colour.orange+r'''


⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠴⢖⢲⠌⠉⠉⠉⠉⠉⠉⠀⠈⠃⠀⠈⠉⠉⠉⡝⡟⠉⠙⠒⡲⠶⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠁⠀⣗⣧⣤⣵⣤⣤⣒⣒⣲⣶⣶⣶⣶⣶⣶⣶⣶⣶⣿⣶⣤⣤⣤⣥⣀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣾⡟⠛⣻⠞⢻⠉⢁⠀⠀⢀⣸⣀⣀⣀⣄⣾⣷⣟⡀⠉⠻⣽⠛⢻⡿⠛⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣶⢿⣖⣾⠾⠛⠛⣛⠛⠛⠛⠛⠛⠛⠛⡛⠛⠛⠛⠻⠿⣗⣶⡷⠾⣾⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⡇⡍⠀'''+Colour.purple+'''⢁⠂⡖⢉⠤⠄⡀⠔⠁⠀⠀⠈⠢⡀⡠⠂⠎⠈'''+Colour.orange+'''⣇⢻⢡⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣷⠁'''+Colour.purple+'''⠀⡌⠀⢄⡘⠀⠘⠀⠀⠀⠀⠀⠀⣠⢄⣠⠀⠐⠀'''+Colour.orange+'''⢸⠘⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢿⡏⡆'''+Colour.purple+'''⠀⠇⠀⡀⠀⠀⢠⠀⠀⠀⠀⠀⠜⠁⠀⠀⡆⡆'''+Colour.orange+'''⠀⣼⢠⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⠇⠱⡀'''+Colour.purple+'''⠈⢄⠠⠐⠄⠀⠑⠄⡀⠄⠀⠀⡠⠣⠤⠡⠁'''+Colour.orange+'''⣰⠇⢸⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡄⠀⠳⡀⠀⠀'''+Colour.purple+'''⠀⠀⠑⠀⠤⠀⣈⠤⠒⠊⠉⠉⡆'''+Colour.orange+'''⣴⠏⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢻⡇⠀⠀⠘⢄⠀'''+Colour.purple+'''⣀⣀⣀⠠⠖⠋⢀⣀⣀⡤⣶'''+Colour.orange+'''⣿⡿⠃⠀⠀⢸⢹⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⢸⣽⡀⠀⠀⠀⠳'''+Colour.purple+'''⣝⣟⠛⠻⡭⢩⡉⠡⣠⢞'''+Colour.orange+'''⣵⠏⠀⠀⠀⠀⡌⣿⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠃⣸⣿⡇⠀⠀⠀⠀⠈⠻'''+Colour.purple+'''⣷⣄⠨⢄⣮⢞'''+Colour.orange+'''⣵⠟⠁⠀⠀⠀⠀⢠⡇⣿⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣽⣽⠃⠀⠀⠀⠀⠀⠀⠘⢿'''+Colour.purple+'''⢷⢋⢣'''+Colour.orange+'''⡾⠁⠀⠀⠀⠀⠀⠀⠘⣧⣟⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣵⣺⡯⠀⠀⠀⠀⠀⠀⠀⠀⢈⡏'''+Colour.purple+'''⣾'''+Colour.orange+'''⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠛⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢽⢿⠀⠀⠀⠀⠀⠀⠀⢠⠞'''+Colour.purple+'''⠀⡻'''+Colour.orange+'''⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⡺⢽⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⢸⢼⡇⠀⠀⠀⠀⢀⡴⠃'''+Colour.purple+'''⡀⠠⡧⠠⡀'''+Colour.orange+'''⠙⢦⡀⠀⠀⠀⠀⢰⡇⢸⡏⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⣽⠃⠀⠀⠀⡴⢋'''+Colour.purple+'''⡠⢾⠀⠈⣷⣀⠈⠑⢌'''+Colour.orange+'''⠻⣆⠀⠀⠀⠘⡷⢸⢹⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣈⡏⠀⠀⣠⠞'''+Colour.purple+'''⢔⠏⠠⠂⢀⡴⢻⢦⡑⠄⠀⠡'''+Colour.orange+'''⠈⢳⣄⠀⠀⢳⢈⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠇⠀⡴'''+Colour.purple+'''⡡⣡⠁⠰⢁⠤⡊⠀⠀⠀⢙⠻⣄⡀⠵'''+Colour.orange+'''⠀⠙⣦⡀⢸⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡀⡸'''+Colour.purple+'''⢁⡱⠸⡠⠗⠁⠀⠀⠀⠀⠀⠀⠀⠀⠙⠶⣄⡀'''+Colour.orange+'''⠘⣧⢀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣾⣷⠇'''+Colour.purple+'''⢆⠎⡎⠀⠀⠀⠀⠀⠀⠰⢄⠀⠀⠀⠀⢈⢙⣦'''+Colour.orange+'''⢹⣿⣼⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣸⣰⠃'''+Colour.purple+'''⠠⡄⢱⠤⡀⠀⠀⡀⠀⠀⠀⣀⣤⠴⠖⢿⠯'''+Colour.orange+'''⢹⢿⡏⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡏⢟⢆'''+Colour.purple+'''⡀⠈⠉⠑⠒⠈⠉⠑⠲⢿⡝⠁⠀⠀⣀⠜'''+Colour.orange+'''⢡⣟⣼⢻⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯⣼⣷⣚⣦⣍⣦⣤⣤⣤⣄⣀⣀⣘⣱⣤⣤⣥⣖⣒⣭⣞⣳⣮⣸⣳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡖⣏⣹⣿⡴⠙⠉⠓⠒⠒⠛⠛⠛⠛⠛⠛⠛⠛⠓⠒⡿⢻⡏⢧⣟⣲⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢏⡿⡯⢭⣍⣑⣒⠒⠠⠤⠤⠤⠤⠤⠤⠤⠤⠬⠮⠿⢷⣾⣟⣻⣭⣭⠿⠟⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢮⣛⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠙⠛⢉⠉⠉⠉⠉⠉⠉⠉⠀⡇⢀⣀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠓⠒⠢⠤⠤⠤⣤⣄⣄⣀⣀⣄⣠⣼⣧⣤⣤⠤⠤⠴⠶⠒⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

 '''+Colour.reset)
input("TOO SLOW")
goto end


label end
clear()
print(Colour.reset+r'''

⠀⠀⠀⢀⡴⠋⠉⢉⠍⣉⡉⠉⠉⠉⠓⠲⠶⠤⣄⠀⠀⠀
⠀⠀⢀⠎⠀⠪⠾⢊⣁⣀⡀⠄⠀⠀⡌⠉⠁⠄⠀⢳⠀⠀
⠀⣰⠟⣢⣤⣐⠘⠛⣻⠻⠭⠇⠀⢤⡶⠟⠛⠂⠀⢌⢷⡀
⢸⢈⢸⠠⡶⠬⣉⡉⠁⠀⣠⢄⡀⠀⠳⣄⠑⠚⣏⠁⣪⠇
⠀⢯⡊⠀⠹⡦⣼⣍⠛⢲⠯⢭⣁⣲⣚⣁⣬⢾⢿⠈⡜⠀
⠀⠀⠙⡄⠀⠘⢾⡉⠙⡟⠶⢶⣿⣶⣿⣶⣿⣾⣿⠀⡇⠀
⠀⠀⠀⠙⢦⣤⡠⡙⠲⠧⠀⣠⣇⣨⣏⣽⡹⠽⠏⠀⡇⠀
⠀⠀⠀⠀⠀⠈⠙⠦⢕⡋⠶⠄⣤⠤⠤⠤⠤⠂⡠⠀⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠒⠦⠤⣄⣀⣀⣀⣠⠔⠁⠀
''')
print("")
print("[THE END]")
print("")
input("Press [ENTER] to restart")
goto start

label victory
clear()
print(r'''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣾⡦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣶⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣯⡇⠀⠀⣴⠦⡀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠋⠀⠀⠀⠘⢦⠙⢆⠀⠀⠀⠀⣠⣶⣿⣿⠟⠁⠀⠀⣠⣶⣤⠀⠀⠀⠀⠀⠈⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠘⡆⠀⠀⢰⣿⣿⠋⠀⠀⠀⠀⠀⠿⣿⠿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢹⠀⠀⠸⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣶⣄⣸⠸⡇⠀⠀⠙⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢻⣿⣿⣿⣿⣿⡏⠀⣧⡀⠀⠀⠀⠀⠀⣠⠊⠉⠑⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠖⢋⣉⣉⠙⠢⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠈⢿⣿⣿⣿⣿⠃⢠⣿⣿⣦⣄⠀⠀⠀⠸⣄⣀⣠⠇⠀⠀⣀⡤⠖⠢⢤⣀⢀⣰⠋⣠⠋⠀⠈⠙⢦⡬
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠈⢻⣿⣿⠏⠀⣼⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⡴⠋⣠⠖⠲⢤⣈⣉⣠⠜⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠻⣏⢀⣼⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⢰⡃⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⣿⣆⠀⠀⠀⠀⠀⠀⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣦⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⡜⠻⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡿⠟⠋⢉⣀⣠⣤⣤⣴⡶⠤⢬⣍⣛⠶⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡸⠁⠀⠙⢿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠙⢳⣴⣾⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠉⠛⠶⣍⠳⣦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣰⠁⠀⠀⠀⠈⠻⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠈⠻⣮⣿⣆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢿⣿⣿⣿⣿⠀⠀⡠⠶⢤⠀⠀⠈⠻⠛⠀⠀⠀⠀⠀⠀
⠀⠀⢠⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣿⣿⣦⣄⡀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠛⠉⠁⠀⠀⢧⣃⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣾⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣷⣶⣤⠤⠖⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡜⠈⠻⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣛⡿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡸⠀⠀⠀⠈⢿⣿⣿⣿⣷⣦⣀⠀⠀⢀⡠⠴⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢱⡀⠀⠀⠀⠀⠙⠻⣿⣿⣿⠿⠗⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠑⠤⣀⣀⣠⠤⠒⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
''')
print("YOU WON")
input("Smiling, you walk back home, ready for a nice long sleep")
print("")
print("As you walk, you feel hands grab you and pull you into a room, bilndfolding you in the process")
input("You are getting kidnapped again")
goto start